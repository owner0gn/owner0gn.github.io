<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Begginer Developer</title>
  
  
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://devjang.github.io/"/>
  <updated>2018-11-12T00:58:07.202Z</updated>
  <id>https://devjang.github.io/</id>
  
  <author>
    <name>DevJang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>신입 프론트엔드 개발자를 위한 구직을 위한 소소한 팁</title>
    <link href="https://devjang.github.io/2019/11/11/2019-11-11-new-fed-begginer-tip/"/>
    <id>https://devjang.github.io/2019/11/11/2019-11-11-new-fed-begginer-tip/</id>
    <published>2019-11-10T15:00:00.000Z</published>
    <updated>2018-11-12T00:58:07.202Z</updated>
    
    <content type="html"><![CDATA[<p>(우아한형제들과는 관계가 없습니다)</p><p>프론트엔드 개발자로 취업하려면 어떻게 해야 할까?<br>그때는 어떤 때일까, 프론트엔드 꿈나무들의 고통과 외침</p><a id="more"></a><hr><p>언제부터인지 다양한 루트로 신입 프론트엔드 구직에 대한 질문을 받고 있습니다.</p><p>질문을 받고 멘토링을 하며 느낀 점은 <code>제가(현재 2년차를 마무리하고 있는 부족한 실력의 주니어 개발자인 시점)</code><br>과연 이런 질문을 받아도 될까? 였지만<br>결국 그로부터 한 달에 한 분 정도 구직에 대한 멘토링을 하고 있습니다.</p><p>루트는 다양하지만 질문을 주는 그들의 꿈과 희망은 일치했었습니다.<br>(물론 눈에 보이는 것이 전부는 아닙니다. <strong>즉: 꿈과 희망은 일치하지만 욕망이 다른 경우도 있습니다.</strong>)</p><p>부족했던 제가 취직했던 과정과 변해가는 프론트엔드 구직 시장 그리고 멘토링을 하며 느꼈던 모든 것을 종합해보며<br>신입 프론트엔드 구직을 하고자 하는 구직자분들에게 조금이나마 보탬이 되고자 이렇게 아티클을 작성합니다.</p><h1 id="자아성찰하기"><a href="#자아성찰하기" class="headerlink" title="자아성찰하기"></a>자아성찰하기</h1><p>프론트엔드 개발자가 되고 싶은 사람들은 다양합니다.</p><p>하지만 <strong>하나의 타겟에 다양한 지원군을</strong> 포함하고 있습니다.</p><ul><li>SI 주니어 백엔드 개발자</li><li>경력 퍼블리셔 (가장 많은 분포도)</li><li>디자이너</li><li>대학생</li></ul><p>이 밖에도 더 많은 케이스가 존재하지만 대부분은 위와 같은 케이스입니다.</p><p><img src="https://frontendmasters.com/books/front-end-handbook/2018/images/what-is-front-end-dev.png" alt=""></p><p><strong>하지만 대부분 프론트엔드 개발자를 모르거나 구체적으로 알고 있지 못합니다.</strong></p><ul><li>리액트나 뷰하면 프론트엔드 개발자 아닌가요…?</li><li>HTML + CSS에서 JavaScript 좀 잘하면 되는 거 아닌가요…?</li></ul><p>어쩌면 위와 같은 말도 달리 생각해보면 완전히 틀린 말은 아닙니다.<br>하지만 더 많은 것을 알고 있어야만 프론트엔드 개발자가 될 수 있습니다.</p><p><strong>결국 프론트엔드 개발자가 되고 싶다면 질문을 해야 합니다(자기 자신에게)</strong></p><ol><li>왜 프론트엔드 개발자가 되고 싶은 건지</li><li>프론트엔드 개발자는 무엇이고 어떤 일을 하는 건지</li></ol><p><strong>자격요건과 우대사항으로 자아성찰하기</strong></p><ul><li>원티드 신입 FE 채용 필터링: <a href="https://www.wanted.co.kr/wdlist/518/669?years=0" target="_blank" rel="noopener">https://www.wanted.co.kr/wdlist/518/669?years=0</a></li></ul><p>위의 링크를 보며 자격 요건보다 부족한 점이 있다면 현실적으로 파악한 후 리스트 업하여 스터디 플랜을 만들어야합니다.</p><blockquote><p>결국은 자신의 상태를 그 누구보다 잘 알고 진단하느냐가 중요합니다.</p></blockquote><hr><h1 id="좋은-회사의-기준"><a href="#좋은-회사의-기준" class="headerlink" title="좋은 회사의 기준"></a>좋은 회사의 기준</h1><p>좋은 회사의 기준은 <code>절대적일 수도 있지만 상대적일 수도</code> 있는 부분입니다.</p><ul><li>워라밸</li><li>연봉</li><li>사용할 수 있는 스킬 및 회사에서 지향하는 개발</li><li>사람</li><li>복지</li><li>회사에서의 나의 존재감</li><li>자유도</li></ul><p>다양한 가치관과 조건이 존재하기 때문입니다</p><p><img src="http://img.hani.co.kr/imgdb/resize/2016/0801/00500779_20160801.JPG" alt=""></p><p><strong>하지만 안타깝게도 구직자의 수준에 따라 갈리는 경우도 있습니다.</strong></p><p>가령 예를 들어 설명해보겠습니다</p><p><code>A</code>라는 회사를 두고<br><code>1번 구직자:</code> 내 실력에 <code>A</code> 회사 정도면 <strong>최고의</strong> 회사야! 라고 생각할 수 있겠지만<br><code>2번 구직자:</code> 아.. 내 실력에 <code>A</code> 회사는 너무 <strong>하향 지원</strong>인데 조금 더 공부하면서 구직을 노려보자</p><p>사실 위와 같은 상황은 <strong>경력자에게도 마찬가지</strong>입니다.</p><p>좋은 회사를 추천해달라는 질문을 많이 받고는 하는데 그전에 본인의 역량을 파악해야 합니다.</p><p><strong>자격요건</strong>은 되어야 이력서를 넣을 수 있고<br><strong>우대사항</strong>이 되어야 면접을 보러 갈 수는 있겠구나 생각하는 것도 적당합니다.</p><blockquote><p>이를 판단하는 방법은 일단 이력서를 넣고 실패해보며 피드백을 받는 것이 가장 확실하고 빠른 방법입니다.</p></blockquote><hr><h1 id="디테일의-중요성"><a href="#디테일의-중요성" class="headerlink" title="디테일의 중요성"></a>디테일의 중요성</h1><p><img src="http://4.bp.blogspot.com/-lcSEmZYjRxU/W-e9MoYwckI/AAAAAAAADaA/9bd2ru-Gv0cqJho7eHJ_BeKJNGSHwfBjQCK4BGAYYCw/s1600/quick.png" alt=""><br><del>빠른 입사 지원</del>은 지양합시다</p><p>기본적인 CS나 알고리즘 테스트를 통한 실력을 중점으로 하는 입사 프로세스로 지원하는 경우가 아닐 때는<br>이력서에 많은 시간을 할애할 것입니다.</p><p>이때 가장 주의해야 할 점과 알아두면 좋은 점은 결국 <code>버릴 건 버리는 심플함</code>과 <code>센스 있는 디테일</code>입니다.</p><h3 id="심플함"><a href="#심플함" class="headerlink" title="심플함"></a>심플함</h3><ol><li><strong>불필요한 자격증은 기입하지 않기</strong><ul><li>운전면허를 넣는 경우도 봤습니다.</li></ul></li><li><strong>TMI(Too Much Information) &amp; TMT(Too Much Talker) 버리기</strong><ul><li>너무 많은 내용은 담지 않는 것이 좋습니다.</li><li>관계없는 내용은 더더욱 담지 않는 것이 좋습니다.</li></ul></li><li><strong>문단 정리하기</strong><ul><li>타이틀, 서브타이틀, 컨텐츠 등으로 문단을 정확히 나눕니다.</li><li>강조할 건 강조합니다. (예: <strong>강조</strong>, <code>강조</code>, <em>강조</em>, <u>강조</u>)</li></ul></li></ol><p><img src="https://thumbnews.nateimg.co.kr/view610///onimg.nate.com/orgImg/sc/2016/10/24/2016102401002084500150921.jpg" alt=""></p><h3 id="디테일"><a href="#디테일" class="headerlink" title="디테일"></a>디테일</h3><ol><li><strong>HWP…DOC…PPT…가 아닌 PDF</strong><ul><li>PDF는 첨부가 아닌 클라우드를 활용한 링크 공유를 합시다 (단축 URL은 센스)</li></ul></li><li><strong>누구든 어디서나 몰래 볼 수 있는 정적 페이지 만들기</strong><ul><li>핸드폰으로 이력서를 읽는 인사 담당자분도 봤습니다.</li><li><code>깃헙 페이지</code>나 파이어베이스를 사용하셔도 좋습니다.</li><li>이미 만들어진 <code>html resume template</code>를 활용해도 좋습니다.</li></ul></li><li><strong>회사 이름이라도 넣자</strong><ul><li>이력서 or 자기소개서에 회사에 관한 내용이나 연관성이 전혀 없다면 실력이 충분하더라도 감점 요소입니다.</li><li>이력서 양식에 지원 회사 시그니처 컬러 or 지원 회사의 시그니처 폰트를 적용하는 센스</li></ul></li></ol><hr><h1 id="전략-세우기"><a href="#전략-세우기" class="headerlink" title="전략 세우기"></a>전략 세우기</h1><p><strong>“적을 알고 나를 알면 백 번을 싸워도 위험하지 않다”</strong> 손자병법의 한 구절</p><p>말 그대로 취업은 나를 알고 회사를 알아가는 과정입니다.</p><p>이미 준비된 실력이라면 당장 쟁쟁한 회사의 테스트를 뚫고 합격할 수 있겠지만<br>아쉽게도 신입 개발자들을 위한 자리보다는 높은 연차의 개발자들을 원하는 곳이 대부분…</p><p>다른 포지션의 개발자 또한 마찬가지겠지만 FE 직군의 경우 더욱 양극화되어있으며<br>국비지원 수강생과 기타 유료 학원 수강생들을 포함하면 분기별로 최소 100명 이상의 신입 FE 취준생이 쏟아질 것으로 예상됩니다.<br><code>(개인적인 추측)</code></p><p>당연히 뛰어난 실력을 갖춰야 이런 경쟁 속에서 수월해지겠지만 더 유연하게 대처할 필요가 있습니다.<br>그나마 신입 구직자일때 개발 실력외에 다른 강점을 보여줄 수 있기때문이죠.</p><h3 id="탑-다운-다운-탑"><a href="#탑-다운-다운-탑" class="headerlink" title="탑 - 다운 ? 다운 - 탑?"></a>탑 - 다운 ? 다운 - 탑?</h3><p><img src="https://4.bp.blogspot.com/-8BJPLKwqJ_o/W-gXTnVvULI/AAAAAAAADaM/dufFIZGBewQFvuC3afKgYZ4MJ92XrUs_wCK4BGAYYCw/s1600/sheet.png" alt=""></p><p>지원하고 떨어지고 반복하다 보면 자신의 수준을 자각할 수 있습니다.  </p><p>저 같은 경우는 위와 같은 시트로 구직 현황을 관리하고는 했었는데 굉장히 큰 도움이 되었습니다.<br>또한 본인이 판단하는 가치와 예상 합격률을 잘 고민하여 등급을 나눠보는 것이 좋습니다.</p><p>그렇게 나눈 등급을 통하여 <code>탑(합격률 낮음) - 다운(합격률 높음)</code> 순으로 지원하시는 것을 추천합니다.</p><h4 id="탑-다운"><a href="#탑-다운" class="headerlink" title="탑 - 다운"></a>탑 - 다운</h4><ul><li>장점<ol><li>취업이 급할 때 유리하다.</li><li>자신의 수준을 빠르게 캐치할 수 있다.</li></ol></li><li>단점<ol><li>면접을 통한 실력 향상을 누리지 못할 수 있다.</li><li>면접 및 서류 광탈로 멘탈이 터지거나 자존감이 떨어질 수 있다.</li></ol></li></ul><h4 id="다운-탑"><a href="#다운-탑" class="headerlink" title="다운 - 탑"></a>다운 - 탑</h4><ul><li>장점<ol><li>장기적인 구직 레이스에 적합하다.</li><li>당장은 취업이 어려운 회사에 차후 적합한 핏과 면접 경험을 살려 지원할 수 있다.</li></ol></li><li>단점<ol><li>공백 기간이 길어질 수 있다.</li><li>잦은 이직을 하게 될 수도 있다.</li></ol></li></ul><p>꼭 신입 구직이 아니더라도  <strong>1 ~ 2년 차와 상시 모집 정도는 지원</strong>해보는 것이 좋습니다.<br>1차 2차 3차 면접 프로세스가 길어질수록 <code>프로세스가 유효한 시점을 살려 즉각 자신에게 부족한 점을 보충</code>해야 합니다.</p><h4 id="활동량을-높인다"><a href="#활동량을-높인다" class="headerlink" title="활동량을 높인다"></a>활동량을 높인다</h4><p>다양한 <code>컨퍼런스</code> 및 <code>채용 행사</code>를 통해 회사의 정보와 얻을 수 있습니다.</p><p>운 좋은 경우는 CTO 또는 인사 담당자와 1 대 1로 Q&amp;A 시간을 가지는 경우도 있으니 다양한 활동에 참여하는 것을 권장합니다.</p><h4 id="네트워크를-이용하자"><a href="#네트워크를-이용하자" class="headerlink" title="네트워크를 이용하자"></a>네트워크를 이용하자</h4><p>다양한 스터디와 실제 친분을 통하여 적절한 정도의 정보를 얻어보는 것도 방법입니다.</p><h4 id="운-좋은-입사는-없다"><a href="#운-좋은-입사는-없다" class="headerlink" title="운 좋은 입사는 없다"></a>운 좋은 입사는 없다</h4><p>간혹 운 좋게 자신의 실력에 비해 빠르게 구직에 성공할 수 있습니다.</p><ul><li><strong>의심해 볼 수 있는 포인트</strong><ol><li>퇴사율이 높은 회사</li><li>FE에 대한 이해도가 굉장히 낮아 보이는 면접관이 대부분일 때</li><li>빨리 들어와서 빨리 좀 도와달라는 모습을 보일 때</li><li>개발 자체를 전혀 모르는 사람들이 면접관일 때</li><li>취업 시 내가 1인 개발자인 회사</li><li>정보처리기사가 우대 사항인 경우</li></ol></li></ul><blockquote><p>이 밖에도 다양한 방법과 경험을 살려 자신에게 맞는 구직 플랜과 꾸준한 학습 &amp; 프로젝트 진행을<br>게을리하지 않는다면 험난한 구직 시장에서도 굉장한 성장을 이룰 수 있습니다.</p></blockquote><hr><h1 id="면접도-공부다"><a href="#면접도-공부다" class="headerlink" title="면접도 공부다"></a>면접도 공부다</h1><p>면접은 정말 피드백이 확실한 공부 방법입니다.</p><p>간혹 마음에 드는 회사가 아니라며 서류 합격 이후 면접에 불참하는 경우가 있는데<br>그런 경우에도 필히 <code>면접에 참가하여 자신의 실력을 갈고닦는 것이 좋습니다.</code></p><p>면접을 통해 공부하는 방법은 여러 가지가 있습니다.</p><ol><li>면접 이후 필히 면접 문제를 회사별로 정리한다.</li><li>가능하다면 본인이 떨어진 이유를 <code>피드백</code> 받도록 한다. (피드백이 없다면 요청하는 것도 방법)</li><li>각종 자료를 통해 이미 정리된 면접 문제를 보는 것도 좋지만 면접 문제를 따로 정리한다.</li><li><code>면접관의 표정</code>이 안 좋을 때와 좋을 때를 기억하여 어떤 포인트에서 자신의 장점과 단점이 났는지 정리한다.</li><li>구직 중에도 뭔가 <code>꾸준히</code> 한다. (예: TIL, 알고리즘 문제 풀기, 사이드 프로젝트 등)</li><li>위와 같은 정리를 통해 나온 자신의 <code>단점을 파악하여 보완</code>하는 시간을 가진다.</li><li>다양한 면접과 구직을 통해 공부해야 하지 말아야 할 것이 보인다면 망설임 없이 그것에는 시간을 할애하지 않는다.</li><li>도움 되는 멘토를 찾아 <code>현실적인 조언</code>을 받아 그것을 실행한다.</li></ol><hr><h1 id="정리"><a href="#정리" class="headerlink" title="정리"></a>정리</h1><p>위와 같은 내용을 정리하자면 <code>결국 개발자 구직</code>이라는 것입니다.<br>때문에 당연하게도 CS 기본 소양과 알고리즘이 탄탄하다면 더 좋은 결과를 얻을 수 있습니다.</p><p>하지만 누군가에게는 합격을 누군가에게는 가난하고 힘든 기간이 될 수 있으니</p><ol><li>적당한 긴장</li><li>즉각적인 피드백을 통한 단점 보충</li><li>꾸준함</li><li>다양한 활동</li></ol><p>위의 세 가지를 잊지 않는다면 좋은 결과와 좋은 성장을 이룰 수 있습니다.</p><p>마지막으로 입사 지원 대비 <strong>서류 합격률이 10%도 되지 않는다면 이력서를 완전히 다시 작성하는 것도 좋습니다.</strong></p><blockquote><p>요즘 뛰어난 신입 개발자분들과 학생 개발자분들 보며 굉장한 자극과 영감을 받고는 합니다.<br>하지만 이와 다르게 상대적으로 실력이 부족한 구직자분들에게는 구직 기간이 스트레스가 될 수 있습니다.<br>그럴 때일수록 오히려 <code>구직 과정을 역이용</code>해 스트레스가 아닌 성장을 하는 계기를 가졌으면 좋겠습니다.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;(우아한형제들과는 관계가 없습니다)&lt;/p&gt;
&lt;p&gt;프론트엔드 개발자로 취업하려면 어떻게 해야 할까?&lt;br&gt;그때는 어떤 때일까, 프론트엔드 꿈나무들의 고통과 외침&lt;/p&gt;
    
    </summary>
    
      <category term="column" scheme="https://devjang.github.io/categories/column/"/>
    
    
      <category term="신입 프론트엔드" scheme="https://devjang.github.io/tags/%EC%8B%A0%EC%9E%85-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C/"/>
    
      <category term="신입 개발자" scheme="https://devjang.github.io/tags/%EC%8B%A0%EC%9E%85-%EA%B0%9C%EB%B0%9C%EC%9E%90/"/>
    
      <category term="신입 프론트엔드 개발자" scheme="https://devjang.github.io/tags/%EC%8B%A0%EC%9E%85-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%EC%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>VS 코드 콘솔에서 TypeScript 실행하기</title>
    <link href="https://devjang.github.io/2018/04/29/2018-04-29-run-simple-ts/"/>
    <id>https://devjang.github.io/2018/04/29/2018-04-29-run-simple-ts/</id>
    <published>2018-04-28T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.869Z</updated>
    
    <content type="html"><![CDATA[<p>타입스크립트 개발 환경없이 작성하기</p><a id="more"></a><hr><p>타입스크립트를 작성하다 보면 간단히 콘솔로 코드를 찍어보고 싶을 때도 있고 컴파일 없이 작업하고 싶은데 그렇지 못해 답답할 때가 있습니다</p><p>자바스크립트는 개발자 도구에서 간편하게 작성해볼 수 있으니 접근성이 이 엄청나기 때문에 비교가 될 수 있죠.</p><p>이러한 부분 때문에 포기하시는 분들을 위한 자료를 준비했습니다.</p><h1 id="Front-end-Playground-활용하기"><a href="#Front-end-Playground-활용하기" class="headerlink" title="Front-end Playground 활용하기"></a>Front-end Playground 활용하기</h1><p>기본 설정으로 타입스크립트를 제공하는 웹서비스를 이용할 수 있습니다.</p><h2 id="CodePen"><a href="#CodePen" class="headerlink" title="CodePen"></a><a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a></h2><p><img src="https://1.bp.blogspot.com/-h-85nGQvZ4E/WuVyg7Te0PI/AAAAAAAADRo/wVtqatYQ00Y3aUgvvpS3MpWgfw06xE9DwCK4BGAYYCw/s640/CodePen.png" alt=""></p><p>설정 &gt; JavaScript Preprocessor &gt; TypeScript</p><p><img src="http://4.bp.blogspot.com/-6RWLp4ZxyvQ/WuVyuPo4LoI/AAAAAAAADSI/gYStwhmccxcRehuQL8ox1fKG5SinINRAQCK4BGAYYCw/s640/CodePen%2B%25282%2529.png" alt=""></p><p>너무나 유명한 서비스인만큼 이미 되어있는 템플릿으로 간단히 사용 가능합니다.</p><hr><h2 id="JS-Bin"><a href="#JS-Bin" class="headerlink" title="JS Bin"></a><a href="https://jsbin.com" target="_blank" rel="noopener">JS Bin</a></h2><p><img src="http://2.bp.blogspot.com/-9qhJDMR09rY/WuVzdMXeuwI/AAAAAAAADSc/VIyr2GDe8GUdf3Z3-wybBSDM7344mTTkgCK4BGAYYCw/s640/JS%2BBin.png" alt=""></p><p>JavaScript 탭 선택 &gt; JavaScrip 클릭 &gt; TypeScript 선택</p><p><img src="http://4.bp.blogspot.com/-wX3DK-7fCGY/WuVzdDzEJKI/AAAAAAAADSg/Qga1joLrt38VoiLlfFkoTU3oNBBLlOjCACK4BGAYYCw/s640/JS%2BBin%2B%25282%2529.png" alt=""></p><p>마찬가지로 몇번의 클릭만으로 사용가능합니다.</p><hr><h2 id="JSFiddle"><a href="#JSFiddle" class="headerlink" title="JSFiddle"></a><a href="https://jsfiddle.net" target="_blank" rel="noopener">JSFiddle</a></h2><p><img src="http://2.bp.blogspot.com/-2q3O1zE3VKA/WuV0APcK6RI/AAAAAAAADS4/N3oNrAhnS_glQmUMMXFm7bfjJ-wI4qaKgCK4BGAYYCw/s640/JSFiddle.png" alt=""></p><p>JavaScript 클릭 &gt; TypeScript 선택</p><p><img src="http://1.bp.blogspot.com/--MdTnteqe3I/WuV0AMoR_OI/AAAAAAAADS0/xDARUbc07cIdBZNnh1p2k7gcR8UGpNCEACK4BGAYYCw/s640/JSFiddle%2B%25282%2529.png" alt=""></p><p>마찬가지로 몇번의 클릭만으로 사용가능합니다.</p><hr><h2 id="TypeScript-Playground"><a href="#TypeScript-Playground" class="headerlink" title="TypeScript Playground"></a><a href="https://www.typescriptlang.org/play/index.html" target="_blank" rel="noopener">TypeScript Playground</a></h2><p><img src="http://4.bp.blogspot.com/-zbbfPCyvN_c/WuV8AQkjoBI/AAAAAAAADUM/Mm_zuctkxNcn7OGXAOFjdJNW7lqKVRhOQCK4BGAYYCw/s640/Playground.png" alt=""></p><p><code>별도의 설정과 도구없이 JS코드로 바로 컴파일 되어 비교</code>할 수 있기 때문에 학습에는 가장 좋다고 생각이 듭니다.</p><p>타입스크립트의 코드가 자바스크립트의 어떤 코드로 변환되는지 항상 볼 수 있기에 흥미로우며 <strong><code>Run</code></strong> 버튼을 활용하여 <code>브라우저에서 실행</code>해볼 수 있습니다.</p><blockquote><p>VS 코드가 내장되어 VS 코드에 익숙한 사용자분들은 IntelliSense와 단축키를 그대로 사용할 수 있습니다.</p></blockquote><hr><h2 id="CodeSandbox"><a href="#CodeSandbox" class="headerlink" title="CodeSandbox"></a><a href="https://codesandbox.io" target="_blank" rel="noopener">CodeSandbox</a></h2><p><img src="http://2.bp.blogspot.com/-H-unRpsqD4g/WuV0XMi2w6I/AAAAAAAADTQ/TcJ7mVbcBRoOKIBh3RlbGc-wAUiEMc7LACK4BGAYYCw/s640/CodeSandbox.png" alt=""></p><p>Create Sandbox 클릭 &gt; New Sandbox &gt; <code>Vanilla</code> 선택 </p><p><img src="http://1.bp.blogspot.com/-0M990pdbRsI/WuV0XE4xepI/AAAAAAAADTM/QaqtaMvPwPEuJ2wAZP4d8xy7AnhijsUXgCK4BGAYYCw/s640/CodeSandbox%2B%25282%2529.png" alt=""></p><p>기본적인 Parcel 번들러 프로젝트가 생성됩니다 &gt; <code>Add Dependency</code> 클릭</p><p><img src="http://1.bp.blogspot.com/-wtpHRxG0az4/WuV6immz97I/AAAAAAAADTs/qaT0MrA-tRUbFfYGe5e8GKfQIYRuj4jqACK4BGAYYCw/s640/CodeSandbox%2B%25283%2529.png" alt=""></p><p>TypeScript 검색 &gt; 검색된 TypeScript 설치</p><p><img src="http://2.bp.blogspot.com/-GAOFp_cyru0/WuV6itDsyBI/AAAAAAAADTo/Ed1DIkIe6MMF3LA51nRjp_3XkGR8jGhdACK4BGAYYCw/s640/CodeSandbox%2B%25284%2529.png" alt=""></p><p>index<code>.js</code>를 <code>.ts</code>로 변경 <strong>(index.html내에 삽입된 스크립트도 마찬가지)</strong></p><p><img src="http://4.bp.blogspot.com/-0ahE1epEngg/WuV7YukqtWI/AAAAAAAADUA/ml7Uxff98wAZX3f41L5v7iAMZSYOoIBvQCK4BGAYYCw/s640/CodeSandbox%2B%25286%2529.png" alt=""></p><p>설정이 완료된 후 바로 TS 코드를 작성할 수 있습니다</p><p><img src="http://1.bp.blogspot.com/-FC8Vy9GHgSE/WuV7YiMjZQI/AAAAAAAADT8/QgHdxjqY7Y4E3RgAyV8JN4A-TEp_-LUxQCK4BGAYYCw/s640/CodeSandbox%2B%25285%2529.png" alt=""></p><p>VS code의 <code>IntelliSense</code></p><p>간단한 플레이그라운드 그 이상으로 다양한 기능을 지원합니다.</p><p>또한 위에 이미 설명한 서비스들 보다 간편하지는 못하고 <code>무겁다</code>는 단점이 있지만</p><p><code>Github 연동, 로컬 파일 연동, Live(유료), npm 가능, 번들러 및 실제 파일 관리 가능</code> 엄청난 확장성이 존재합니다.</p><p>한마디로 모듈화 및 파일을 나누고 싶을때 온라인에서 간단히 사용할 수 있습니다<br>(이럴 거면 그냥 로컬이 낫다고 판단될 수도…)</p><blockquote><p>VS 코드가 내장되어 VS 코드에 익숙한 사용자분들은 IntelliSense와 단축키를 그대로 사용할 수 있습니다.</p></blockquote><h1 id="에디터-활용하기"><a href="#에디터-활용하기" class="headerlink" title="에디터 활용하기"></a>에디터 활용하기</h1><h2 id="VS-code"><a href="#VS-code" class="headerlink" title="VS code"></a>VS code</h2><p>이번에는 에디터로 넘어와 VS code에서 간단한 콘솔 출력을 방법을 알아보겠습니다.</p><p><img src="http://4.bp.blogspot.com/-kxQO1zfPJ5A/WuV8M_HJLhI/AAAAAAAADUc/UIdtdR5kTIEN-vnpaAYcEC9jgi1m6Z2YgCK4BGAYYCw/s640/VS%2Bcode.png" alt=""></p><p><a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner" target="_blank" rel="noopener">Code Runner</a> 확장 플러그인 설치</p><p><img src="http://2.bp.blogspot.com/-czYAV06UjoA/WuV8M4ILU3I/AAAAAAAADUY/zkAJXEUFlsEnVmsCpEWsiZ3WOOBG2T_BwCK4BGAYYCw/s640/VS%2Bcode%2B%25282%2529.png" alt=""></p><p><a href="https://github.com/TypeStrong/ts-node" target="_blank" rel="noopener">ts-node</a> 설치<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i -g ts-node // 전역 설치를 하시면 됩니다 (-g 또는 -global)</span><br></pre></td></tr></table></figure></p><p><img src="http://4.bp.blogspot.com/-JFWufuvwWto/WuV9murmEQI/AAAAAAAADU0/eNfmX-6nNBE_4-NOlEKAzLHfS3pOc_zrwCK4BGAYYCw/s640/VS%2Bcode%2B%25283%2529.png" alt=""></p><p>마우스 우클릭 &gt; <code>Run Code</code> 클릭 또는 단축키 <kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>n</kbd><br>(기본 단축키가 다른 플러그인과 겹치는 경우가 많습니다)</p><p><img src="http://2.bp.blogspot.com/-zrxaIx0VdQc/WuV9mkoc96I/AAAAAAAADU4/KUI-NDayfp8Xzd8u_90kIOdATuQvbnWHACK4BGAYYCw/s640/VS%2Bcode%2B%25284%2529.png" alt=""></p><p>위와 같은 출력 결과를 간단하게 볼 수 있습니다.</p><blockquote><p><strong>주의사항</strong><br>간혹 설정에 문제가 있는 경우 아래와 같은 옵션을 확인해주시면 됩니다<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"code-runner.executorMap" : &#123;</span><br><span class="line">  "typescript": "ts-node"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>모던 자바스크립트를 접하며 혼란스러운 것들 중 하나는 환경설정일 것입니다.<br>물론 알고 넘어가야 하지만 입문자의 경우 이런 다양한 방법을 통해 학습하시는 것도<br>초반에 러닝 커브를 이겨내는 데 큰 도움이 될 수 있을 것 입니다.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;타입스크립트 개발 환경없이 작성하기&lt;/p&gt;
    
    </summary>
    
      <category term="programming" scheme="https://devjang.github.io/categories/programming/"/>
    
      <category term="typescript" scheme="https://devjang.github.io/categories/programming/typescript/"/>
    
    
      <category term="intellij" scheme="https://devjang.github.io/tags/intellij/"/>
    
      <category term="visual studio code" scheme="https://devjang.github.io/tags/visual-studio-code/"/>
    
      <category term="CodePen" scheme="https://devjang.github.io/tags/CodePen/"/>
    
      <category term="JS Bin" scheme="https://devjang.github.io/tags/JS-Bin/"/>
    
      <category term="JSFiddle" scheme="https://devjang.github.io/tags/JSFiddle/"/>
    
      <category term="CodeSandbox" scheme="https://devjang.github.io/tags/CodeSandbox/"/>
    
      <category term="typescript" scheme="https://devjang.github.io/tags/typescript/"/>
    
      <category term="run console" scheme="https://devjang.github.io/tags/run-console/"/>
    
  </entry>
  
  <entry>
    <title>이것이 자바다</title>
    <link href="https://devjang.github.io/2018/04/12/2018-04-12-this-is-java/"/>
    <id>https://devjang.github.io/2018/04/12/2018-04-12-this-is-java/</id>
    <published>2018-04-11T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.868Z</updated>
    
    <content type="html"><![CDATA[<p>신용권의 Java 프로그래밍 정복! 이것이 자바다</p><a id="more"></a><hr><blockquote><h3 id="책-정보"><a href="#책-정보" class="headerlink" title="책 정보"></a>책 정보</h3><p>출판사 : 한빛미디어<br>저자 : 신용권<br>출간 : 2015.01.06<br>페이지 : 1224<br>ISBN : 9788968481475<br>가격 : 30,000 원</p></blockquote><ul><li><p>자세한 정보<br>: <a href="http://book.naver.com/bookdb/book_detail.nhn?bid=8589375" target="_blank" rel="noopener">http://book.naver.com/bookdb/book_detail.nhn?bid=8589375</a><br>: <a href="http://www.hanbit.co.kr/store/books/look.php?p_code=B1460673937" target="_blank" rel="noopener">http://www.hanbit.co.kr/store/books/look.php?p_code=B1460673937</a></p></li><li><p>이것이 자바다 카페<br>: <a href="http://cafe.naver.com/thisisjava" target="_blank" rel="noopener">http://cafe.naver.com/thisisjava</a></p></li><li><p>3강까지만 제공되는 샘플 영상<br>: <a href="https://www.youtube.com/playlist?list=PLVsNizTWUw7FPokuK8Cmlt72DQEt7hKZu" target="_blank" rel="noopener">https://www.youtube.com/playlist?list=PLVsNizTWUw7FPokuK8Cmlt72DQEt7hKZu</a></p></li></ul><h2 id="소개"><a href="#소개" class="headerlink" title="소개"></a>소개</h2><p>이전에 국비 지원으로 Java 교육을 5개월가량 받을 때를 제외하고 Java와는 남남처럼 지내고 있었는데 <code>한빛미디어</code>의 은총으로 오랜만에 Java 기본서를 펴보게 되었다.</p><p>처음 <code>이것이 자바다</code>를 받아봤을 때는 이미 Java 기본서를 여러 번 접해봤기때문에 뭐 별거 있겠어? 싶었다.</p><p>JavaScript 같은 경우에는 워낙 다양한 스타일과 종류가 있고 언어 자체가<br>느슨하기 때문에 저자의 스타일에 따라 코드 내용이 다르기도 하지만 Java같은 경우에는 컨셉과 목차 스타일 그리고 코드를 풀어나가는 느낌과 개념 설명 말고는 큰 차이를 알기는 어려웠다. (물론 책마다 완성도는 큰 차이가 있다)</p><h2 id="입문부터-깊이까지-초보자부터-숙련자까지"><a href="#입문부터-깊이까지-초보자부터-숙련자까지" class="headerlink" title="입문부터 깊이까지 초보자부터 숙련자까지"></a>입문부터 깊이까지 초보자부터 숙련자까지</h2><p>큰 기대는 없었다.</p><p>워낙 Java 기본서는 책의 가짓수만 해도 어마어마하고 그나마 유명한 책 중 <code>난 정말 JAVA를 공부한 적이 없다구요</code>, <code>헤드퍼스트 Java</code>, <code>Java의 정석</code>을 읽은 적이 있다(꼼꼼하게 공부하지 못했는지 기억이 잘나지 않는다….)</p><ul><li><p>난 정말 JAVA를 공부한 적이 없다구요: 개념 설명이 쉽게 되어 읽기 좋고 가장 Java를 깨우치는 도움이 되었던 책이지만 구성이 좀 부실했다. (대신 동영상 제공)</p></li><li><p>헤드퍼스트 Java: 재미있는 책이다. 구성도 마음에 들고 책 설명처럼 뇌를 자극하는 느낌이지만…. 너무 산만하고 레거시하다는 생각도 들었다.</p></li><li><p>Java의 정석: 정말 정적이고 딱딱하다는 느낌을 받았다. 개념에 충실한 정말 교과서 같은 기본서다. 지루해서 읽다가 포기했던 기억이 있다.</p></li></ul><p>현업에서 Java를 하고 있지도 않고 시간이 부족해서 동영상도 보지 못했고 한빛미디어와의 약속이 있기때문에 이것이 자바다는 중요 개념과 궁금한 내용 위주로 읽어 나갔다.</p><p><img src="https://4.bp.blogspot.com/-MHXbli8lzX4/WtGVBXRXmJI/AAAAAAAADN4/KN2FREjDPrs2doWdjHJlj6DOSwdiswZkACK4BGAYYCw/s1600/P20180414_094912115_54461DE1-5ECD-4F8F-A5A7-B628DB5753AE.JPG" alt=""><br>챕터를 마치고 꼭 확인을 한다</p><p>이것이 자바다를 보고 느낀 건 정말 완전체 같다는 느낌이였다.<br>1000페이지가 넘는 분량인데 뭐하나 빠지는 게 없고 <code>입문하기에 어렵지도 않으며 나름 딥하기까지하다.</code></p><p><img src="https://3.bp.blogspot.com/-Vw9Nv3S5wy4/WtGVBZYO1uI/AAAAAAAADOM/lxzBfE8dx0gcCBKnCKOlIumuCVl73zM4QCK4BGAYYCw/s1600/P20180414_094936593_ACE396FE-300D-45F1-9B1F-BE9D7435A696.JPG" alt=""><br>또한 개념 설명은 꼭 짚고 넘어가며 연습문제도 있고 <strong>코드 설명이 너무나 친절하다.</strong></p><p><img src="http://1.bp.blogspot.com/-vsmsWh-OeCs/WtGaihwr3_I/AAAAAAAADO0/_LrX4z8a8yA-XPKOQ0lGyyT0MkOVxWZaQCK4BGAYYCw/s1600/P20180414_094644696_41035B0C-4864-4524-B46D-2665C5C617FC.JPG" alt=""><br>영상을 보지는 못했지만 함께한다면 효과는 더 크지 않을까 싶다.</p><h2 id="Java-개념"><a href="#Java-개념" class="headerlink" title="Java 개념"></a>Java 개념</h2><p>다른 언어들도 마찬가지이겠지만 Java를 통해 얻을 수 있는 것들이 굉장히 많다.</p><p>OOP, 인터페이스, 클래스, 다형성 등등 코딩만으로는 해결되지 않는 이러한 <strong>개념에 대한 이해가 Java 학습에 있어서 큰 허들이 될 수 있다.</strong></p><p><img src="https://4.bp.blogspot.com/-s3hSliUBqfY/WtGVBRBTTSI/AAAAAAAADOI/oah0yUy_Q282Cg_yNKKd8ay0T2GY8V-FgCK4BGAYYCw/s1600/P20180414_094844421_C7FA33F0-F01B-448A-BD4C-A98BB59731C4.JPG" alt=""></p><p>이것이 자바다에서 인상적인 부분은 <code>정말 꼼꼼하게 개념 요소들을 챙긴다</code>.<br>놓치는 게 없다고 볼 수 있을 정도였다.</p><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>사실 이 책에 API까지 있을거라고는 생각도 못했고 기본 API정도 밖에는 나오지 않지만 API를 이렇게 쉽게 설명해주는구나…. 감동이였다.</p><p><img src="https://2.bp.blogspot.com/-TUaJdyOmJrU/WtGVB7EHtEI/AAAAAAAADOU/xHIVswwFHSEU34IW4KQZzEZHoc-LR6JXgCK4BGAYYCw/s1600/P20180414_094959314_FAF03C4E-4262-4916-A49B-D87FD628631A.JPG" alt=""><br>API 설명</p><h2 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h2><p><img src="https://3.bp.blogspot.com/-vK99ODmpkx4/WtGVBrbpUOI/AAAAAAAADOY/Evd-xc2gCY41W_wT-3dImcCbvi0IGREFQCK4BGAYYCw/s1600/P20180414_094720940_9C965570-07DC-42A5-A8CA-E5622C7BB2FA.JPG" alt=""><br>정말 독자를 세심하게 챙긴다는 것을 알 수 있다.</p><blockquote><p>독자를 세심하게 챙기며<br>개념은 꼼꼼하게 놓치지 않고<br>설명은 도식화하여 이해시키려 노력한다.</p></blockquote><p>누군가 Java 책을 추천해달라고 하면 입문일 때는 이 책 언제는 저 책<br>상황에 따라 나눠서 추천했었겠지만 <strong>이제는 <code>이것이 자바다</code> 한 권으로 기본을 확실하게 넘어가라고 권하고 싶다.</strong></p><p><img src="https://3.bp.blogspot.com/-U30YrztOzHI/WtGUEcI6NmI/AAAAAAAADNc/e3iDhZNWF0Mrw0eYsvK_zSzB2VZOc2L1QCK4BGAYYCw/s1600/this-is-java-roadmap.png" alt=""><br>카페에 가보니 직딩들을 위한 목차가 있었다.</p><blockquote><p>프로그래밍에 처음 입문해도 Java를 처음 배워도 Java를 깊이 있게 보고 싶어도 <strong>이것이 자바다</strong> 하나로 해결 가능하지 않을까 생각이 들었다.</p></blockquote><p><strong>이 서평은 한빛미디어를 통해 제공받은 서적을 토대로 작성된 리뷰입니다.</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;신용권의 Java 프로그래밍 정복! 이것이 자바다&lt;/p&gt;
    
    </summary>
    
      <category term="book" scheme="https://devjang.github.io/categories/book/"/>
    
      <category term="programming" scheme="https://devjang.github.io/categories/book/programming/"/>
    
      <category term="java" scheme="https://devjang.github.io/categories/book/programming/java/"/>
    
    
      <category term="자바 입문 책" scheme="https://devjang.github.io/tags/%EC%9E%90%EB%B0%94-%EC%9E%85%EB%AC%B8-%EC%B1%85/"/>
    
      <category term="이것이 자바다" scheme="https://devjang.github.io/tags/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%9E%90%EB%B0%94%EB%8B%A4/"/>
    
      <category term="신용권" scheme="https://devjang.github.io/tags/%EC%8B%A0%EC%9A%A9%EA%B6%8C/"/>
    
  </entry>
  
  <entry>
    <title>Hello Coding 프로그래밍</title>
    <link href="https://devjang.github.io/2018/02/18/2018-02-18-hello-coding-programming/"/>
    <id>https://devjang.github.io/2018/02/18/2018-02-18-hello-coding-programming/</id>
    <published>2018-02-17T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.868Z</updated>
    
    <content type="html"><![CDATA[<p>개념부터 처음 배우는 프로그래밍! Hello Coding 프로그래밍 리뷰</p><a id="more"></a><hr><blockquote><h3 id="책-정보"><a href="#책-정보" class="headerlink" title="책 정보"></a>책 정보</h3><p>출판사 : 한빛미디어<br>저자 : Pope Kim<br>출간 : 2018.01.02<br>페이지 : 352<br>ISBN : 9791162240342<br>가격 : 19,800원</p></blockquote><ul><li>자세한 정보<br>: <a href="http://book.naver.com/bookdb/book_detail.nhn?bid=12877969" target="_blank" rel="noopener">http://book.naver.com/bookdb/book_detail.nhn?bid=12877969</a><br>: <a href="http://www.hanbit.co.kr/store/books/look.php?p_code=B6832340619" target="_blank" rel="noopener">http://www.hanbit.co.kr/store/books/look.php?p_code=B6832340619</a></li></ul><h3 id="소개"><a href="#소개" class="headerlink" title="소개"></a>소개</h3><p><a href="https://www.youtube.com/user/KimPopeTV" target="_blank" rel="noopener">포프TV</a>로 유명한 유튜버 김포프님의 입문 서적이다.  (<a href="https://youtu.be/0Hbq3En8xvw" target="_blank" rel="noopener">책에 대한 포프님의 설명</a>)<br>때문에 포프님이 좋아하는 C#을 기본으로 한 책이며 수준은 입문 수준이다</p><p><img src="http://1.bp.blogspot.com/-4kKXVvZAs-E/Wo78hIOknPI/AAAAAAAADLQ/lAvvbMWzpd8RJVxLhOwcpamp_SJzVSTQACK4BGAYYCw/s1600/20180222_055458.jpg" alt=""><br>목차부터 심상치 않다</p><h3 id="기존의-틀과는-다른-입문-서적"><a href="#기존의-틀과는-다른-입문-서적" class="headerlink" title="기존의 틀과는 다른 입문 서적"></a>기존의 틀과는 다른 입문 서적</h3><p>보통의 프로그래밍 입문 서적이라면 하나의 언어를 처음부터 끝까지 가르쳐주거나<br>언어에 얽매이지 않고 전체적인 개발의 모든 것을 담기 위한 서적이거나<br>스크래치부터 설명하는 책이거나 보통은 이런 방향이다.</p><p>하지만 이 책의 경우에는 <code>개발에 입문하고자 C#을 사용하는 느낌</code>이라고 볼 수 있다.<br>프로그래밍의 개념을 설명하는 방식이 다른 책들과 확연히 다르다는 느낌을 알 수 있었다.</p><p>그저 프로그래밍 입문에만 초점을 맞춘 것이 아닌 코드를 어떻게 짜야 하는지 무엇을 주의해야 하는지 <code>의식에 흐름과 방향성</code>까지 놓치지않고 <code>제시</code>해주는 점은 긍정적인 부분이었다.</p><p>그런 이유로 그런 건지는 잘 모르겠지만 위의 <strong>목차만 봐도 어떠한 언어를 배울 때 주로 볼 수 있는 입문 서적의 목차와는 다르다..</strong><br>일반적인 입문 서적이라면 언어의 개론 =&gt; 변수 =&gt; 흐름 제어 =&gt; 반복문 =&gt; 함수 =&gt; 좀 더 딥하게 를 상상할 수 있다.</p><h3 id="친절한-구성"><a href="#친절한-구성" class="headerlink" title="친절한 구성"></a>친절한 구성</h3><p><img src="http://3.bp.blogspot.com/-KxNamnrZFAc/Wo78gUx5_cI/AAAAAAAADLA/FLALn_dFKXQCJZkf71KoLkns2Jq7_QtmgCK4BGAYYCw/s1600/20180222_055722.jpg" alt=""></p><p><code>이해를 돕기 위한 도식화와 그림 그리고 폰트 어느 하나 부족함을 느낄 수 없다.</code><br>포프님의 책이기 때문에 어렵겠지? 이해에 초점을 두지는 않겠지? 생각했으나 큰 오산이었으며<br>한빛답게 정말 <strong>친절하고 꼼꼼한 편집으로 책을 즐겁고 편안하게 볼 수 있었다.</strong></p><h3 id="기초를-단련하기-위한-문제들"><a href="#기초를-단련하기-위한-문제들" class="headerlink" title="기초를 단련하기 위한 문제들"></a>기초를 단련하기 위한 문제들</h3><p><img src="http://1.bp.blogspot.com/-zjmkuu6qbhc/Wo78gWrX8iI/AAAAAAAADK8/tHekcIM9HeEsGqd38b-Fk9SbGB9eVdzeQCK4BGAYYCw/s1600/20180222_055637.jpg" alt=""></p><p>문제는 각 챕터마다 꾸준히 등장하며 <code>기초 문제 &amp; 심화 문제</code>로 이루어져 있다.<br>프로그래밍에 완전히 처음 입문하는 사람들에게는 후반부로 갈수록 점점 어려움을 느낄 수 있지만<br>확실히 실력 향상과 습득에 도움이 된다는 것을 느낄 수 있다.</p><h3 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h3><blockquote><p>결국 각 챕터를 완독하고 문제를 풀며 실습을 하게 되고 간단한 게임을 만들게 된다</p></blockquote><p>포프님이 의도한 책의 방향이 이거구나 싶었다</p><p>완전히 프로그래밍에 처음 입문하는 사람들에게는 약간 어려울 수는 있으나<br>기존의 프로그래밍 언어적인 개념에 접근한 입문 서적이 아닌 <code>프로그래밍에 대한 개념과 생각에 접근하도록 유도하는 서적</code>이라고 볼 수 있다.</p><p>또한 책과 각 챕터마다 나오는 문제를 통해 직접 체험하고 습득하는 재미도 느낄 수 있으며<br><strong>C#을 처음 접하는 사람들도 부담없이 코딩할 수 있는 정말 친절한 구성을 가지고 있다.</strong></p><p>한빛미디어에서 Hello Coding 시리즈를 통해 다양한 입문자들의 학습을 돕겠다는 취지가 느껴진다.<br>앞으로도 이와 같은 방향의 책이 많이 출간되었으면 좋겠다.</p><p><strong>이 서평은 한빛미디어를 통해 제공받은 서적을 토대로 작성된 리뷰입니다.</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;개념부터 처음 배우는 프로그래밍! Hello Coding 프로그래밍 리뷰&lt;/p&gt;
    
    </summary>
    
      <category term="book" scheme="https://devjang.github.io/categories/book/"/>
    
      <category term="programming" scheme="https://devjang.github.io/categories/book/programming/"/>
    
    
      <category term="Hello Coding 프로그래밍" scheme="https://devjang.github.io/tags/Hello-Coding-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/"/>
    
      <category term="c# 입문 책" scheme="https://devjang.github.io/tags/c-%EC%9E%85%EB%AC%B8-%EC%B1%85/"/>
    
      <category term="김포프" scheme="https://devjang.github.io/tags/%EA%B9%80%ED%8F%AC%ED%94%84/"/>
    
  </entry>
  
  <entry>
    <title>프로그래머의 길, 멘토에게 묻다</title>
    <link href="https://devjang.github.io/2017/12/30/2017-12-30-apprenticeship-patterns/"/>
    <id>https://devjang.github.io/2017/12/30/2017-12-30-apprenticeship-patterns/</id>
    <published>2017-12-29T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.868Z</updated>
    
    <content type="html"><![CDATA[<p>소프트웨어 개발 분야 새내기를 위한 프로그래머 가이드! 프로그래머의 길, 멘토에게 묻다 리뷰</p><a id="more"></a><hr><blockquote><h3 id="책-정보"><a href="#책-정보" class="headerlink" title="책 정보"></a>책 정보</h3><p>출판사 : 인사이트<br>저자 : 데이브 후버, 애디웨일 오시나이<br>역자 : 강중빈<br>출간 : 2010.07.26<br>페이지 : 288<br>ISBN : 9788991268807<br>가격 : 14,000원</p></blockquote><ul><li>자세한 정보<br>: <a href="http://book.naver.com/bookdb/book_detail.nhn?bid=6332442" target="_blank" rel="noopener">http://book.naver.com/bookdb/book_detail.nhn?bid=6332442</a><br>: <a href="http://www.insightbook.co.kr/book/individual/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%9D%98-%EA%B8%B8-%EB%A9%98%ED%86%A0%EC%97%90%EA%B2%8C-%EB%AC%BB%EB%8B%A4" target="_blank" rel="noopener">http://www.insightbook.co.kr/book/individual/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%9D%98-%EA%B8%B8-%EB%A9%98%ED%86%A0%EC%97%90%EA%B2%8C-%EB%AC%BB%EB%8B%A4</a></li></ul><h3 id="소개"><a href="#소개" class="headerlink" title="소개"></a>소개</h3><p>많은 사람들이 추천해주는 책으로 유명하기에 구입을 하게 되었다.<br>물론 최근 들었던 <a href="https://devjang.github.io/2017/11/16/2017-11-16-okky">이종립님의 발표</a>를 듣고 꼭 읽어봐야겠다 싶었고 출퇴근길을 이용해 읽기 좋은 부담 없는 두께였다.</p><p>숙련된 소프트웨어 개발자가 되기위한 길에 아낌없는 조언을 받는 느낌이었다</p><p>이 책의 설명 그대로 개발자로 가는 험난한 여정의 지침서 그 자체였다.</p><p>어떤 행동을 하면 좋을지 어떻게 배우면 좋은지 어떤 마음가짐을 가지고 있으면 좋은지<br>구체적인 사례과 해결책을 제시해준다.</p><ul><li>책의 구성은 패턴 위주로 제공된다.  </li></ul><ol><li>패턴을 제공한다 (약간의 명언도 포함)  </li><li>사례와 문제점을 예시로 보여줌  </li><li>해결방안과 대책을 구체적으로 제시  </li><li>연관된 패턴</li></ol><p>지겨울 정도로 반복되는 정석적인 패턴이지만 놓칠 내용하나 없이 살이 되는 느낌이었다.</p><h3 id="국내에서도-도움되는-다양한-사례와-해결책"><a href="#국내에서도-도움되는-다양한-사례와-해결책" class="headerlink" title="국내에서도 도움되는 다양한 사례와 해결책"></a>국내에서도 도움되는 다양한 사례와 해결책</h3><p>이런 책들을 보면 간혹 국내에서 성장하는 개발자들과는 너무나 동떨어진 이야기도 많고<br>비현실적인 이야기도 많다.<br>하지만 이 책 같은 경우에는 벌써 출간된 지 10년의 세월은 흘렀고<br>외국에서의 사례와 해결책이지만 기가 막히게 도움되는 내용이 많았다.</p><p>프로그래밍을 관두고 싶을 때<br>실무경험이 부족할 때<br>열정이 질식되는 환경에 있을 때<br>길을 잃었을 때<br>학습이 더디어졌을 때<br>등등 수많은 패턴과 그에 대한 통한 사례와 해결책을 통해 선배 개발자들의 통찰과 이해를 체험할 수 있다.</p><h3 id="개발자의-인생을-살펴보다"><a href="#개발자의-인생을-살펴보다" class="headerlink" title="개발자의 인생을 살펴보다"></a>개발자의 인생을 살펴보다</h3><p>시작하는 개발자부터 은퇴를 앞둔 개발자까지 다양한 개발자들의 삶을 체험할 수 있다.<br>3년 후 5년 후 10년 후 자신이 어떤 개발자가 되어있을까 멀리 내다보도록 해준다.</p><h3 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h3><p>쓸데없는 걱정이 많고 고민 많은 개발자에게 도움이 되는 책이다.<br>특히 이제 시작하는 신입이나 쥬니어 개발자에게 큰 도움이 되겠지만<br>이미 많은 세월을 보낸 개발자에게도 이 책은 자기 자신을 되돌아보는 성찰의 시간을 주지 않을까 싶다.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;소프트웨어 개발 분야 새내기를 위한 프로그래머 가이드! 프로그래머의 길, 멘토에게 묻다 리뷰&lt;/p&gt;
    
    </summary>
    
      <category term="book" scheme="https://devjang.github.io/categories/book/"/>
    
      <category term="programming" scheme="https://devjang.github.io/categories/book/programming/"/>
    
    
      <category term="프로그래머의 길 멘토에게 묻다" scheme="https://devjang.github.io/tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%9D%98-%EA%B8%B8-%EB%A9%98%ED%86%A0%EC%97%90%EA%B2%8C-%EB%AC%BB%EB%8B%A4/"/>
    
      <category term="개발자 로드맵" scheme="https://devjang.github.io/tags/%EA%B0%9C%EB%B0%9C%EC%9E%90-%EB%A1%9C%EB%93%9C%EB%A7%B5/"/>
    
      <category term="개발자 인생" scheme="https://devjang.github.io/tags/%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%9D%B8%EC%83%9D/"/>
    
  </entry>
  
  <entry>
    <title>에디터 or IDE 터미널 명령어로 실행하기</title>
    <link href="https://devjang.github.io/2017/12/24/2017-12-24-open-ide-tip/"/>
    <id>https://devjang.github.io/2017/12/24/2017-12-24-open-ide-tip/</id>
    <published>2017-12-23T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.868Z</updated>
    
    <content type="html"><![CDATA[<p>간단한 설정 한번이면 터미널을 통해 에디터를 실행할 수 있습니다.</p><a id="more"></a><hr><p>저장소를 새로 만든다던지 git clone을 한다던지 현재 터미널에 있으면서<br><code>원하는 경로로 에디터를 실행한다는 것이 귀찮을 때</code>가 많습니다.</p><p>이런 경우에 정말 너무도 간단하게 명령어 <code>단 몇 글자</code>면 해당 경로에서<br>IDE를 즉시 실행할 수가 있습니다!!</p><p>(단. MacOS 환경에서의 팁입니다.)</p><h2 id="Visual-Studio-Code-명령어로-실행하기"><a href="#Visual-Studio-Code-명령어로-실행하기" class="headerlink" title="Visual Studio Code 명령어로 실행하기"></a>Visual Studio Code 명령어로 실행하기</h2><p><img src="http://2.bp.blogspot.com/-5c5ynj6S73k/WkY6xRdcAlI/AAAAAAAADEI/1RmUN-m79rIyaq86dGBPQsOXi2BKD6fXACK4BGAYYCw/s1600/code-1.png" alt="">  </p><p><img src="http://3.bp.blogspot.com/-j9wvE1DG7mQ/WkY6xb9BJrI/AAAAAAAADD0/SzvrqQgSPKUmns6bLjzFyEBATlF-IUL6ACK4BGAYYCw/s1600/code-2.png" alt="">  </p><ul><li>CMD + SHIFT + P 입력 후 위와 같은 검색을 통해 <code>셸 명령: PATH에 &#39;code&#39; 명령 설치</code>를 합니다.</li></ul><p><img src="http://2.bp.blogspot.com/-ZFVH7_wfnX0/WkY6xecUPpI/AAAAAAAADEA/FMfv5yvsru0-RraDIqeCj9uhHF-s45MVwCK4BGAYYCw/s1600/code-3.png" alt="">  </p><ul><li><p>실행을 원하는 경로에서 명령어를 통해 실행합니다</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code .    // 주의: code와 . 사이에 공백이 필요합니다.</span><br></pre></td></tr></table></figure></li><li><p>실행화면<br><img src="http://1.bp.blogspot.com/-MB8awVyepQU/WkY5D7lx2dI/AAAAAAAADDU/4-iTvaxOGKkjGgrTJ6XY58CJjZfZKxDsACK4BGAYYCw/s1600/code-run.gif" alt="">  </p></li></ul><hr><h2 id="IntelliJ-명령어로-실행하기"><a href="#IntelliJ-명령어로-실행하기" class="headerlink" title="IntelliJ 명령어로 실행하기"></a>IntelliJ 명령어로 실행하기</h2><p><img src="http://4.bp.blogspot.com/-rlIG2xoH5_M/WkY6xb7CWwI/AAAAAAAADEE/lTUYi1nl3tUVOdq6u00I2xzIjhWw3EwgwCK4BGAYYCw/s1600/idea-1.png" alt="">  </p><ul><li>IntelliJ 메뉴에서 Tools &gt; <code>Create Command-line Launcher...</code> 를 실행합니다</li></ul><p><img src="http://3.bp.blogspot.com/-F7ZVUtqRVvA/WkY6xaX5J1I/AAAAAAAADD8/hlh7KxmtqpsS4NqkP6EUXeF6ovQHpLA-wCK4BGAYYCw/s1600/idea-2.png" alt="">  </p><ul><li>기본 경로를 제공합니다. 특별한 이유가 없는 이상 여기서 <code>OK</code>만 하면 설정은 끝입니다.</li></ul><p><img src="http://1.bp.blogspot.com/-5k0xxxpCjWs/WkY6xcPX1YI/AAAAAAAADD4/k5GuNoP5IsU0QT4HKSfwhq9DPxu5Ko_9ACK4BGAYYCw/s1600/idea-3.png" alt="">  </p><ul><li>실행을 원하는 경로에서 명령어를 통해 실행합니다.</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idea .    // 주의: idea와 . 사이에 공백이 필요합니다.</span><br></pre></td></tr></table></figure><ul><li>실행화면 (노트북이 느려서…구동에 시간이 소요됩니다)<br><img src="http://4.bp.blogspot.com/-8QalaSvfKWU/WkY4kfESaUI/AAAAAAAADDI/6B1uKe5kM84bWHSf2kTLcZhcnbk_ANyOQCK4BGAYYCw/s1600/idea-run.gif" alt=""></li></ul><hr><p>참고 :  </p><p><a href="https://code.visualstudio.com/docs/setup/mac" target="_blank" rel="noopener">Running VS Code on Mac</a><br><a href="https://code.visualstudio.com/docs/setup/windows" target="_blank" rel="noopener">Running VS Code on Windows</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;간단한 설정 한번이면 터미널을 통해 에디터를 실행할 수 있습니다.&lt;/p&gt;
    
    </summary>
    
      <category term="programming" scheme="https://devjang.github.io/categories/programming/"/>
    
      <category term="tip" scheme="https://devjang.github.io/categories/programming/tip/"/>
    
    
      <category term="터미널 에디터 실행" scheme="https://devjang.github.io/tags/%ED%84%B0%EB%AF%B8%EB%84%90-%EC%97%90%EB%94%94%ED%84%B0-%EC%8B%A4%ED%96%89/"/>
    
      <category term="run terminal" scheme="https://devjang.github.io/tags/run-terminal/"/>
    
      <category term="intellij" scheme="https://devjang.github.io/tags/intellij/"/>
    
      <category term="vscode" scheme="https://devjang.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Adieu 2017 &amp; 내가 신입 개발자들의 멘토인 이유</title>
    <link href="https://devjang.github.io/2017/12/21/2017-12-21-adieu-2017/"/>
    <id>https://devjang.github.io/2017/12/21/2017-12-21-adieu-2017/</id>
    <published>2017-12-20T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.868Z</updated>
    
    <content type="html"><![CDATA[<p>2017년을 회고하며 2018년을 약속하기 &amp; 좋은 개발자 되기</p><a id="more"></a><hr><p><img src="http://4.bp.blogspot.com/-eAfQIDyQ2W8/WiO49a-lz2I/AAAAAAAABxA/rI2uMJE-E_g2zOqLgraXoDOwNPrizTmCACK4BGAYYCw/s1600/600620pr25yo658h2966.jpg" alt=""></p><p><img src="http://4.bp.blogspot.com/-gaz81QmBx3U/WiO49qO49YI/AAAAAAAABxM/s43dljVCJPQuW4mG-xLWKNYL3ASZxveKQCK4BGAYYCw/s1600/uj4n3m2096gy0j630n36.jpg" alt=""></p><p><img src="http://4.bp.blogspot.com/-n7YaIpxlqCM/WiO49pxIT9I/AAAAAAAABxI/JFlnD05kXWsUUTw34K7RtCp4ZI4-Smk6QCK4BGAYYCw/s1600/q2tlx4d0c38y83alhi5z.jpg" alt=""></p><p><img src="http://4.bp.blogspot.com/-vxE1K7NENM0/WiO49u4sXiI/AAAAAAAABxE/cmJxDJZ3Ez0tjvUtLJ7we0JnIKmu7B0wACK4BGAYYCw/s1600/uy9l5f4l4ll56g4f649q.jpg" alt=""></p><hr><!-- TOC --><ul><li><a href="#내가-신입-개발자들의-멘토인-이유">내가 신입 개발자들의 멘토인 이유</a></li><li><a href="#도대체-무엇을-했는-가">도대체 무엇을 했는 가</a></li><li><a href="#2017년-배운-것">2017년 배운 것</a></li><li><a href="#2017년-실패한-이유">2017년 실패한 이유</a></li><li><a href="#실패는-성공의-어머니-solution">실패는 성공의 어머니 Solution</a><ul><li><a href="#마치며">마치며..</a></li></ul></li></ul><!-- /TOC --><hr><h2 id="내가-신입-개발자들의-멘토인-이유"><a href="#내가-신입-개발자들의-멘토인-이유" class="headerlink" title="내가 신입 개발자들의 멘토인 이유"></a>내가 신입 개발자들의 멘토인 이유</h2><p>2017년 개발자로 첫발을 내디딘 첫해를 돌아봤고<br>얼마나 잘못된 개발자가 되었는지 회고를 통해 알 수 있었다</p><p><img src="http://4.bp.blogspot.com/-Zkvs1cyfVvE/WiO8DgkgXfI/AAAAAAAABxY/8PX59e3ORvwcRK3Lidf3Dr35giOq_0IuACK4BGAYYCw/s1600/year-half.jpeg" alt=""></p><p>분명 7월이 시작될 때만 해도 돌아다니는 이 짤방을 보고 불안감을 느꼈지만 개선하지 못한 잘못이 크다.</p><p>뒤늦은 11월쯤부터 서서히 정신을 차리기 시작했지만 결국 너무나 늦어버렸다.</p><p>이 포스팅을 통해 2017년의 나를 분석하고 나 자신을 멘토로 다시 한걸음 나아가길 기원한다. </p><hr><h2 id="도대체-무엇을-했는-가"><a href="#도대체-무엇을-했는-가" class="headerlink" title="도대체 무엇을 했는 가"></a>도대체 무엇을 했는 가</h2><ul><li><p><strong>스터디 (18회)</strong></p><p>수많은 스터디에 참여했다.</p><p>Angular2+, React, Vue, JavaScript, CSS, Git, 비사이드 소프트의 코드스피츠 등등..</p><p>돈을 지불하는 강의형 스터디부터 그룹 스터디까지 수없이 참여했지만</p><p>헛된 노력이 많았고 <code>정말 내 것으로 소화해낸 건 많지 않았다.</code></p><p>중간에 파토난 스터디도 꽤 있었고 많지는 않지만 개인 사정상 불참했던 스터디도 있었다.</p><p>물론 큰 배움을 얻은 스터디도 있었지만 몇몇 스터디는 내 것으로 소화해내지 못했다.</p><p>이에 대한 내용은 밑에서 분석할 예정이다.</p><p>​</p></li><li><p><strong>Seminar &amp; Conference (14회)</strong></p><p>정말 많이 느끼고 배웠다.</p><p>사실 불필요한 부분도 있고 겹치는 내용도 많고 부실한 내용이 있을 때도 있지만</p><p><code>동기부여와 인생의 터닝 포인트라고 느낄 정도의 감명을 받을 때도 있었다.</code></p><p>앞으로도 꾸준히 참가할 생각이다(과도한 참가는 줄이자)</p><p>​</p></li><li><p><strong>독서 (7권)</strong></p><p>한빛 미디어에서 리뷰를 진행한 덕에 강제로 읽은 책도 있고 개인적인 독서는 JavaScript 기본서 위주였다.</p><p>도중에 읽기를 포기한 책도 있지만 처음부터 끝까지 완주한 책은 <code>1년 동안 겨우 7권이다.</code></p><p>이 또한 실속 없이 읽어 무엇이 남았을까 싶다</p><p>​</p></li><li><p><strong>첫 취업 그리고 이직</strong></p><p>개발자의 취업 그리고 취준생 개발자..</p><p>참 준비할 것도 많고 해야할 것도 많다. 이 시기만큼은 스스로 굉장히 많이 터득하고 배웠다.</p><p>​</p></li><li><p><strong>블로그</strong></p><p>2016년 하반기 Java 국비지원을 받으며 TIL을 작성하는 블로그를 만들었다.</p><p>(현재 4번째 블로그 이사로 TIL은 다른 곳에 있는 상태)</p><p>정말 시간을 많이 쏟기도하고 큰 노력을 기울였다. 나를 되돌아보는 데 도움은 되었지만 아쉬운 건</p><p>(과거의 글을 보면서 글을 왜 이렇게 못쓸까 느낀다)</p><p>기술적인 글을 작성한 부분이 거의 없다는 것이다.(개발 실력에 대한 자존감이 바닥이였다)</p><p>앞으로는 개발 기술에 대한 내용을 다뤄보도록 해야겠다. </p></li></ul><hr><h2 id="2017년-배운-것"><a href="#2017년-배운-것" class="headerlink" title="2017년 배운 것"></a>2017년 배운 것</h2><p>2017년 망했지만 실패를 분석하기 전에 그래도 배운 것(잘한 것) 을 되짚어본다.</p><p><img src="http://2.bp.blogspot.com/-qI_jIsbu1Vw/WiPHEmSywcI/AAAAAAAABxw/BUHeppmYl3IIdoaH4oOCkimhaRX9wCacgCK4BGAYYCw/s1600/2017-11-cal.png" alt=""></p><ul><li><p><strong>철저한 일정관리</strong></p><p>회사를 다니며 사이버대학을 다니다 보니 일정관리만큼은 철저하게 해야 한다.</p><p>구글 캘린더 &amp; 구글 keep(Spot Todo 관리) &amp; 회사 맥 &amp; 개인 맥 &amp; 개인 데스크탑 &amp; 스마트폰</p><p>모두 연동하여 일정 별로 (1시간 전 ~ 2시간 전 ~ 3시간 전 ~ 하루 전) 알람을 해놓고 생활했다.</p><p><del>너무 변태스럽지만</del></p><p>머리를 언제 잘랐지 궁금해서 시작했던 게 결국 언제 머리를 잘랐는 지까지 캘린더에 저장하는 습관도 생겼고</p><p>이제는 달력을 수시로 확인하고 일정 관리를 하지 않으면 불안할 때도 있다.</p></li></ul><hr><p>  ​<br>  <img src="http://1.bp.blogspot.com/-JZvbiab5Lr8/WiPx9MbbEXI/AAAAAAAAByA/QSxyC93PJFAzHPt7QSaNUUOO8yKSXiW9QCK4BGAYYCw/s1600/work.png" alt=""><br>  실제 구직할 때 작성하던 시트 :<br>  실제로는 떨어진 회사가 대부분이고 회사의 내용도 담겨있어서 공개할 수 있는 부분이 많지 않다</p><ul><li><p><strong>구직활동</strong></p><p>개발자 구직 활동을 통해 다양한 배움이 있었다.</p><ol><li>개인 명함만 들어 면접 시 명함 교환하기</li><li>자기소개 페이지를 만들어 도메인 달기 (사실 허접한 static HTML 이력서 2페이지였다)</li><li>면접 후 면접 질문 모으고 정리하기</li><li>결과를 통해 면접 실패와 성공을 분석</li><li>시트를 작성하여 어느 회사에 지원했어 어느 회사에 떨어졌고 어떤 이력서를 제출했는지 정리</li><li>지원할 회사를 분석하고 1회사 1이력서 공식 유지 (절대로 같은 회사에 같은 내용을 작성하지 않았다)</li><li>TIL 블로그 만들기</li></ol><p><code>구직활동에 요령이 생겼고 자신을 돌아보는 계기도 되었다.</code><br>​</p></li></ul><ul><li><p><strong>습관 만들기</strong></p><p>예전부터 사소한 습관조차 만들지 못했으나 <code>2017년 습관 만들기</code>에 돌입했고 <code>결국 내 것으로</code> 만들었다.</p><ol><li>회사 출근시 계단으로 출근하기</li><li>하루에 팔굽혀펴기 30개 하기</li><li>회사에서 업무시 1시간에 한번 몸풀기 (스마트폰 알람의 도움을 받는다)</li><li>집 앞 버스 정류장이 아닌 2정거장 전의 버스정류장까지 걸어서 버스타기 (운동)</li></ol><p>정말 아무것도 아닌 것 같지만 습관을 만들 수 있다는 자신감을 가지게 되었다.</p></li></ul><blockquote><p>습관의 재발견 :<br><code>우리는 그동안 “목표는 크게, 높게, 멋있게 잡아야 한다!”는 것을 강요당해 왔다.</code><br>그래서 늘 버거운 목표에 힘겨워 하다 포기하고, 또 포기하고 언젠가부터는 계획조차 세우지 않게 되었다.</p></blockquote><ul><li><p><strong>다양한 Tool 사용</strong></p><p>개인 성향 때문인지 항상 다양한 도구의 활용법에 관심이 많다.</p><p>인텔리J의 모든 단축키를 거의 다 외운다던가 웬만한 플러그인은 전부 설치해서 실행해보고</p><p>그 밖에도 다양한 도구들을 활용하고 접하게 되었고 커스텀하여 고쳐 쓰는 것도 좋아한다.</p><p>사소하지만 lint 같은 도구들도 정말 깊하게 파면서까지 연구해본다.</p><p>(개발을 이렇게 했어야 하는 데 아쉬운 부분이긴 하다.)</p></li></ul><ul><li><p><strong>다양한 커뮤니티 활동과 정보 수집</strong></p><p>우리나라의 웬만한 모든 커뮤니티에는 가입한 상태이기 때문에 다양한 정보를 빠르게 접할 수 있다.</p><p>심지어 모든 정보를 나를 통해 받는 친구들도 있다.</p><p>물론 <code>너무 많은 정보 속에 갈피를 못잡게 된 계기도 생길 수 있다.</code></p><p>(사실 커뮤니티 활동이라 적었지만 낯가림이 심한 눈팅족이다)</p></li></ul><hr><p><img src="http://dontkry.com/images/comics/roommates.png" alt=""><br>출처 : <a href="http://dontkry.com" target="_blank" rel="noopener">http://dontkry.com</a></p><ul><li><p><strong>Front-end 생태계의 이해</strong></p><p><code>Front-end 개발자는 알아야 될 범위가 굉장히 넓고 그 생태계를 이해하는 건 굉장히 중요하다.</code></p><p>사실 지금에 와서 돌이켜본다면 16년 12월부터 Front-end 구직을 시작하여 취업하기까지 </p><p>Front-end 개발자가 될 만큼 실력도 없었고 Front-end 생태계조차 이해하지 못했다.</p><p>물론 지금도 완벽한 수준은 아니지만 Why에 접근하여 생각할 수 있는 것 같다.</p></li></ul><p>  <code>Front-end 생태계를 얼마나 이해하는지 확인할 수 있는 글</code></p><p>  : <a href="http://www.looah.com/article/view/2054" target="_blank" rel="noopener">2016년에 자바스크립트를 배우는 기분</a></p><hr><h2 id="2017년-실패한-이유"><a href="#2017년-실패한-이유" class="headerlink" title="2017년 실패한 이유"></a>2017년 실패한 이유</h2><p>왜 실패했는지 변명이 아닌 Why에 접근해본다.</p><ul><li><p><strong>갑작스러운 Front-end 구직</strong></p><p>비전공에 5개월을 Java에 spring은 세팅하는 수준정도만 배운 흔히 오키에서 국좀이라고 불리우는</p><p>국좀 출신 개발자이다.</p><p>공부할 때는 TIL도 쓰고 열심히 공부했었지만 수료를 앞두고 프로젝트를 진행하며 Java보다는 CSS에 재미가 들었다.</p><p>그리고 Si에 대한 안 좋은 소문들과 글을 보며 내심 고민에 빠지게 되었고 Front-end 개발자가 되어</p><p>스타트업에서 시작한다는 말도 안되는 목표를 세우게 되었다.</p><p><code>국내의 퍼블리셔와 Front-end 개발자의 사이도 착각하게 된 것이다.</code><br>​<br><img src="http://i.imgur.com/wR3ZxfB.jpg?367" alt=""><br>: <a href="http://rebrn.com/re/javascript-466402" target="_blank" rel="noopener">당신은 JavaScript에 대해 얼마나 알고 있는가?</a></p><p><code>SPA가 뭔지도 모르고 JavaScript와 jQuery의 차이도 갓 알게 된 12월 Front-end 구직을 시작</code>했다.</p><p>뒤늦게 AngularJS 책을 여러 권 사서 공부했으나 <code>기본기가 없으니 겉핥기수준</code>이었고</p><p>하지만 운 좋게 취업에 성공했다(학원 강사님 말고는 주변에 말려주는 사람이 없었다.)</p><p>결국… <em>기본 실력 없이 기초 수준의 Java만 배우고 Front-end 개발자로 취직</em></p></li><li><p><strong>시간관리 실패</strong></p><p>일정관리에는 성공했으나 시간관리는 실패했다.</p><p>말도 안 되는 소리이긴 하다.<br>한마디로 말하면 일정은 지켰으나 <code>공부에 대한 시간 계획 및 실천은 없던 것이다</code></p><ol><li>오전에는 느긋하게 일하다가 뒤늦게 <code>야근하면 되지 생각한다.</code></li><li>과도한 스터디로 <code>이동시간을 소비</code>한다. (집은 수원 =&gt; 스터디 및 회사는 서울)</li><li><code>출퇴근에 소요되는 시간</code>이 하루에 3시간 이상이지만 버리기만했 다.</li></ol></li></ul><ul><li><p><strong>멘탈관리 실패</strong></p><p>사내에서 React로 된 서비스를 진행했으나 <code>서비스 실패</code>로 결국 폐지를 하게 되었다.</p><p>때문에 회사에서 불필요한 개발자가 된 것만 같은 기분이 들었고</p><p>사내에 다른 프로젝트는 합류하기엔 기술적으로 거리가 있기 때문에 참여할 수 없는 프로젝트였고..</p><p>결국 몇 개월간 회사에서 뭘했는 지 모르겠다는 생각까지 든다</p><p>​<br>또한 <code>개인적인 문제</code>로 생애 가장 힘든 시기를 마주하게 되었고 결국 한계에 도달하였다.</p><p>일을 하며 아무것도 할 수 없는 스트레스까지 받았을 정도였고 이 시기가 너무 길어</p><p>개인적으로 공부도 손 놓고 아무것도 할 수 없는 지경에 이르렀다.<br>​</p><ol><li><p>사내에 전담으로 맡은 서비스가 폐지된 후 슬럼프에 빠지다.</p></li><li><p>개인적인 사연으로 인한 스트레스 극복 실패 (돈을 빌려주거나 갚을 때 차용증은 선택이 아닌 필수입니다)</p><p>​</p></li></ol></li><li><p><strong>연휴를 놓치다</strong></p><p>5월 그리고 10월 굉장한 연휴를 맞이했고 <code>공부할 시간과 기회도 충분했으나</code></p><p><code>빈둥빈둥 놀기만</code> 했고 그렇다고 멋진 휴가를 다녀온 것도 아니다. 개인적으로는 이것이 가장 안타깝다. </p></li></ul><p>  <em>황금연휴에 공부할 기회를 버리다.</em></p><pre><code>​</code></pre><ul><li><p><strong>공부 방법의 문제</strong></p><p>정말 수 없이 많은 문제가 있었다.</p><p>만약 <code>2017년 회고를 하지 않는다면 2018년에 다시 일어날 기회조차 없이 망했을 것이다.</code></p></li></ul><ol><li><p><strong>러닝 커브 극복 실패</strong></p><p>문제 해결이 필요할 때 깊은 생각은 피하고 외면할 때가 많았다.</p><p>대충 라이브러리로 해결하는 식의 문제 해결이나 </p><p>어떠한 부분에 대한 지식이 부족할 때 <code>추가적인 학습의 러닝 커브를 이겨내지 못하고 포기</code>한 것이다.</p></li><li><p><strong>잘못된 독서</strong></p><p>독서를 하며 졸거나 코드 타이핑을 넘기거나 독서 중 헷갈리거나 모르는 부분이 있을 때</p><p>깊이 파고들기보다는 <code>그러려니 하고 넘기고는 했다.</code></p><p>물론 그러려니 넘기는 경우 책을 2번이고 3번 다시 읽어 소화하는 방식도 있었지만</p><p>2번 이상 읽은 적도 없고 간단한 요약의 독후감만 작성하고 독서를 끝냈다.</p></li><li><p><strong>의식적 무지</strong></p><p>무엇을 모르는지 어떤 부분이 부족한지는 알지만 제대로 된 <code>공부를 시작하여 끝을 본 적이 많지 않다.</code></p></li><li><p><strong>프로젝트를 통해 만든 것이 없다</strong></p><p>수많은 프로젝트와 스터디를 했음에도 불구하고 <code>결과물을 낸 적이 없다.</code></p><p>물론 거의 끝까지 만든 프로젝트도 있었지만.. 결과물을 내는 스터디는 거의 시작부터 망했다.</p><p><code>부담스러운 프로젝트는 스터디원들에게 부작용으로 작용할 때가 있다.</code></p><p>또한 개인적인 토이 프로젝트도 없었으며 겨우 인터넷에 돌아다니는 예제를 따라 만드는 수준이 전부였다.</p></li><li><p><strong>겉핥기 학습</strong></p><p><code>아는 것 많으나 정작 할 줄 아는 건 없다.</code></p><p>지식의 분포도를 따져 봤을 때 다 얇게 퍼져있기만 하고 어느 하나 깊게 파고들지 못한 부분이 아쉽다.</p></li><li><p><strong>Why가 아닌 How</strong></p><p>회사에서 업무를 할때 개인적인 개발이나 공부를 할 때 <code>Why가 아닌 How로 접근</code>하게 되었다.</p><p>이런 부분은 <code>지식에 착각</code>을 일으킨다. 결국 <code>알고 있는 것이 아니기 때문</code>이다.</p><p><code>설명서를 보고 만든 것과 직접 만든 것은 큰 차이</code>가 있듯이 어떻게 했는 지만 알고</p><p>동작 원리나 구동 원리는 전혀 모르는 것이다.</p></li><li><p><strong>유행 따라가기</strong></p><p>Angular, React, Vue =&gt; Front-end 춘추천국 시대이다.</p><p><code>결국 JavaScript</code>구나 Front-end 개발자도 결국 개발자구나..</p><p>라는 걸 깨달을 때까지 누군가 입이 닳도록 설명해봐야 깨닫기는 힘들다.</p><p>고용자에게 Front-end 개발자는 축구에 포지션이 있듯이 결국 포지션일 뿐이라고 생각할 수도 있다.</p><p>결국 <code>기본이 가장 중요하다는 것을 알고 있었으면서도 부정</code>하고 있었다.</p></li><li><p><strong>취업 의식</strong></p><p><code>Front-end 분야는 러닝 커브가 빠르게 올라가고 있다.</code></p><p>분명 16년 12월 구직활동을 할때는 AngularJS가 가장 중요한 자격요건이였으나</p><p>3~4월 다시 이직을 준비할 때는 React로 간단한 Todo App 정도는 만들 줄 알아야 지원할 수 있는 수준이었다.<br>(현재는 그 이상으로 러닝 커브가 올라왔다)</p><p>공부하고 싶고 개발하고 싶어야 하는 데 취업을 위해 어떤 공부를 해야 되는지부터 생각했고</p><p>그 와중에 <code>공부하는 것들에 대한 연관 관계가 말도 안 되게 뒤죽박죽 혼재</code>되었다.<br><img src="http://blog.teamtreehouse.com/wp-content/uploads/2015/08/react-hype.jpg" alt=""></p></li></ol><hr><ul><li><p>마지막. <strong>스터디 실패</strong></p><p>  <code>다양한 스터디에 참여했으나 정말 도움이 되어 내 것이 된 스터디는 15%</code> 정도에 불과하다.</p><p>  실제로 스터디를 다니면서 인터넷 쇼핑을 하거나 딴짓을 하는 분들도 많이 봤다.</p><p>  물론 나는 그 정도는 아니었지만 집중을 못하거나 복습을 못할때가 있었는 데</p><p>  이런 경우 <code>스터디는 안 하는 것보다 못한 것</code> 같은 결과를 초래 할 수있다.</p></li></ul><hr><h2 id="실패는-성공의-어머니-Solution"><a href="#실패는-성공의-어머니-Solution" class="headerlink" title="실패는 성공의 어머니 Solution"></a>실패는 성공의 어머니 Solution</h2><p>이제부터는 실패를 통해 2018년을 계획해본다.</p><p>국비지원을 다니던 시절 말로만 노력하는 동기가 입이 닳도록 하는 말이었다.<br><code>실패는 성공의 어머니! 수료할 때까지 꼭 제 손으로 게시판을 만들겠습니다</code></p><p>적어도 2017년의 나는 그 동기와 다를 바가 없으니 그 동기의 말이 떠오르게 되었다.</p><ul><li><p><strong>기본 실력 없이 기초수준의 Java만 배우고 Front-end 개발자로 취직</strong></p><p>   11월부터 Harvard CS50 공부를 시작했으며 일단 커넥트재단의 CS50 X edwith를 거의 완강한 상태이다.</p><p>   앞으로는 운영체제, 알고리즘, 자료구조, 네트워크, 데이터베이스를 공부할 생각이며</p><p>   18년 1/4분기까지 정보처리기사와 영문 Harvard CS50에 집중하며 알고리즘을 볼 생각이다.</p><blockquote><p>Outsider<br>   : 언어와 프레임워크가 바뀌어도 바뀌지 않을 지식을 공부하자<br>   자바지기 박재성<br>   : 기초레벨 포기하고 공부했다. 초반에는 통했지만 결국은 기초다. 내가 좋아하고 경쟁력 있는 것 그것만 몇 년을 하자.</p></blockquote></li><li><p><strong>오전에는 느긋하게 일하다가 뒤늦게 야근하면 되지 생각한다</strong></p><p>   시간을 버리지 않고 시간별로 무엇을 했는지 기록하는 수단을 찾는다.<br>   (완벽한 공부법을 참고할 예정이다)</p><blockquote><p>칼럼니스트 임백준<br>   : 에너지가 바닥난 사람을 컴퓨터 앞에 앉혀두면 그가 할 수 있는 일은 “잠자코 앉아있기”말고 아무것도 없다.<br>   키보드 위에서 영혼이 담기지 않은 손가락 놀림만 분주하다. </p></blockquote></li><li><p><strong>과도한 스터디로 이동시간을 소비한다</strong></p><p>   불필요한 스터디는 절대 하지 않는다.</p><p>   스터디에 참여하게 되면 노력 없이 나의 지식이 될 것이라고 착각하지 않고 복습과 예습을 통해 적극적으로 참여한다.</p><p>   또한 <code>원격 스터디도 제대로 한다면 오프라인 스터디보다 더 좋은 결과를 낼 수 있다.</code></p></li></ul><ul><li><p><strong>출퇴근에 소요되는 시간이 하루에 3시간 이상이지만 버리기만 했다</strong></p><p>   개발자라는 직업을 가지고 서울에서 일하지 않는 것은 힘든 부분이다.</p><p>   그렇다면 수면시간과 출퇴근 시간을 조율해야 하는 데 이런 시간에 <code>쓸데없이 스마트폰보는 시간은 줄인다.</code></p><p>   졸릴 땐 잔다.</p><p>   졸리지 않다 =&gt; 스마트폰을 절대 보지 않는다 =&gt; 독서를 한다.</p><blockquote><p>우아한 형제들 이종립<br>: 내가 자고 싶은 시간이 아니라 <code>몸이 자고 싶은 시간에 잔다</code></p></blockquote></li><li><p><strong>사내에 전담으로 맡은 서비스가 폐지된 후 슬럼프에 빠지다</strong></p><p>   어떻게든 훌훌 털어내고 회사와 협의 후 빠르게 다른 프로젝트를 준비하도록 한다.</p><blockquote><p>넥슨 박종천 VP    </p><ul><li>한가지 회사가 아닌 어느 회사를 갈 수 있는 역량에 초점을 맞춘다<br>=&gt; <code>능력이 없을 때 생기는 기회는 저주다. 결국 무너지게 된다.</code>  </li><li>사내에서 자기 발전을 위한 방법을 찾는다.<br>=&gt; 내 능력을 키울 수 있는 방법을 찾는다.</li></ul></blockquote></li></ul><ul><li><p><strong>개인적인 사연으로 인한 스트레스 극복 실패</strong></p><p>   이런 경우에는 질질 끌지 않고 어떻게든 자체적인 휴식기를 마련하여 휴식을 가지는 것이 좋을 것 같다.</p><blockquote><p>우아한 형제들 이종립<br>: 힘들 땐 친구 또는 가족과 가벼운 전화통화를 한다.</p></blockquote></li><li><p><strong>황금연휴에 공부할 기회를 버리다</strong></p><p>   강제성을 부여해서 황금 연휴에 맞는 사이즈의 토이 프로젝트를 선정해서 준비한다.</p><blockquote><p>이상한 모임 by minieetea<br>   : 사실 사이드 프로젝트라고 하기에는 투잡에 가까우리만큼 빡빡한 스펙과 일정이었다.<br>   매일 퇴근하고 집으로 달려가 새벽 3-4시까지 작업하고 4시간 남짓을 자며 출근하길 1달.<br>   주말에는 아침에 일어나 새벽 5시까지도 달리는 일이 허다했다.<br>   심지어 해외는 시차가 2시간이나 빨라 한국 새벽반이 눈감을 때쯤 호주 아침반 개발이 시작되어 24시간 개발이 돌아가는 날도 허다했다.<br>   고생했다는 것을 자랑하기보단,<br>   <code>작은 성공의 열매를 맛보았다 얘기하고 싶다.</code><br>   <a href="http://minieetea.com/2017/02/archives/4921" target="_blank" rel="noopener">토이 프로젝트를 완성하려면 얼마나 걸릴까?</a></p></blockquote></li><li><p><strong>잘못된 독서</strong></p><p>   출퇴근 시간에는 인문학 느낌의 개발 서적을 읽고 있다.<br>   자칫 지루하면 스마트폰의 유혹을 이기지 못하기 때문에 코드보단 인문학 느낌의 책을 선택했다.</p><p>   또한 읽은 책은 개인 Wiki에 기록할 준비를 해놨다.</p><blockquote><p>우아한 형제들 이종립<br>   : <code>하루에 3가지 종류(집에서, 지하철에서, 회사에서)</code>의 책을 조금씩 읽고 요약한다<br>   <code>일주일에 35페이지</code>만 읽어도 <code>훌륭한 책을 두 달</code>마다 읽을 수 있다.</p></blockquote></li></ul><ul><li><p><strong>의식적 무지</strong></p><p>   무엇을 모르는지 알면서 공부를 안 하는 저주이지만 다행히도 무엇을 모르는지 알기때문에</p><p>   모르는 부분에 대한 것을 언제 어디서나 수시로 기록할 수 있는 <code>무지 노트를 작성</code>하고 짬이 날 때마다</p><p>   무지 노트의 항목들을 클리어하거나 깊이 공부해서 모아놓고 괜찮은 내용은 블로그에 작성해 지식을 나눈다.</p><blockquote><p>프로그래머의 길 멘토에게 묻다<br>   : <code>무지를 드러내라</code><br>   무지에 맞섬으로 지식을 습득해나가는 모습을 보여줘라</p></blockquote></li><li><p><strong>프로젝트를 통해 만든 것이 없다</strong></p><p>   분기, 반기, 연간 프로젝트를 계획해서 진행한다.</p><p>   <code>감당할 수 있는 범위의 프로젝트만</code> 계획하며 Plan B를 계획한다.</p><p>   작더라도 호기심을 자극하는 재미있는 프로젝트를 진행하자</p><blockquote><p>Velopert<br>   : <code>“매일 12시마다 한 시간씩만 투자해서 사이드 프로젝트를 진행하자!”</code><br>   이 약속을 지키기 위해서, 매일매일 개발 하는 걸, 유튜브에서 라이브 스트리밍을 해서 기록을 남기기로 했다<br>   <a href="https://velopert.com/3465" target="_blank" rel="noopener">가상화폐 모의 투자 / 거래소 개발기</a></p></blockquote></li><li><p><strong>겉핥기 학습 &amp; 유행 따라가기</strong></p><p>   사전에 겉핥기로 봐야 되는 부분과 깊게 고뇌하며 공부해야 할 것이 무엇인지 판단하자</p><p>   만약 공부해야 될 부분이 변하지 않는 지식이라면 절대 겉핥기 식으로 보지 않도록 한다.</p><p>   <code>같은 걸 여러 번 만들어서 실력을 쌓는다</code></p><p>   <code>괴롭더라도 러닝 커브를 극복하고 이겨내며 다음 단계로 넘어가는 방법을 모색해보자</code></p><blockquote><p>토비의 스프링 이일민<br>   : 내가 무엇을 포기할지 먼저 정하자.<br>   새로운 기술이 너무 많아 이것저것 다 하면 아무것도 못한다.  </p></blockquote></li></ul><ul><li><p><strong>Why가 아닌 How</strong></p><p>   프로그래머의 길 멘토에게 묻다를 보면 <code>동기부여가 되는 일을 기억해서 계속 상기</code>시키는 걸 추천한다.</p><p>   러닝 커브를 만나는 나는 도망치는 걸 선호하는 것 같으니 어떻게든 도전하여 쟁취하는 습관과</p><p>   마인드를 갖두도록 해야겠다.</p><blockquote><p>Okky by fender<br>어떻게보다 왜가 궁금했다면 일단 무슨 오류가 왜 발생했는지 읽어라도 보았을 테고,<br>혼자 해결을 못해서 검색으로 답을 찾더라도 왜 그렇게 하면 문제가 해결이 되는지 이해할 수 있을 것입니다.<br>개발자의 실력은 그렇게 느는 것인데, 그 과정을 통째로 생략하고 그냥 이렇게 생긴 메시지가 나오면<br>  어떻게 하는지 <code>찾아 외우겠다는 식으로 접근해선 경력이 아무리 쌓여도 이른바 통밥만 늘지 개발 실력은 제자리걸음</code>이 됩니다. </p></blockquote></li><li><p><strong>취업 의식</strong></p><p>   불안해서 취업만을 생각하는 공부를 하지 않도록 한다.</p><p>   흔들리지 않고 꾸준히만 공부 해나간다면 트렌드에 흔들리지 않을 수 있을 것이다</p><blockquote><p>넥슨 박종천 VP<br>   : <code>새가 부러질 수도 있는 나뭇가지에 앉아 있는 것은 나뭇가지가 부러질 것을 두려워하지 않는 것이 아니라     부러져도 날 수 있는 날개가 있기 때문이다.</code><br>   소프트웨어를 쉽게 개발하는 것이 중요한 것이 아니다. 그 이면에 있는 기술력이 중요하다.<br>   지금부터 착실히 내실을 다지고 그것을 잘 배우며 다른 사람과 충돌하지 않고 착하게 지낼 수 있다면<br>   그것은 그 사람만의 경쟁력이 될 수 있다</p></blockquote></li><li><p><strong>스터디 실패</strong></p><p>   불필요한 스터디는 하지 않는다.</p><p>   스터디를 한다고 그 지식이 모두 내 것이 될 것이라고 착각하지 않는다.</p><p>   감당할 수 있는 시간의 스터디만 한다.</p><p>   나의 부주의로 다른 스터디원에게 피해를 주지 않는다.</p><p>   <code>이제는 스터디를 주도해서 열고 함께 공부하는 법도 배우도록 할 생각이다</code></p><blockquote><p>자바지기 박재성<br>   : 사람을 구하는 방향을 바꾸자. <code>나보다 잘난 사람보다는 나와 성향이 비슷한 사람</code>을 찾자.<br>   나와 성향이 맞는 사람을 찾으려면 <code>나를 드러내야 한다.</code><br>   <code>맞으면 계속 같이 가는 거고, 아니면 그만 보면 된다.</code></p></blockquote></li></ul><hr><h3 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h3><p><strong>이상한모임의 주제는 회고</strong>였고 그 덕분에 2017년 개발자로서의 첫걸음을 분석할 수 있었다.<br>이 회고가 나에게는 너무 큰 도움이 되었고 누군가에게도 도움이 되었으면 좋겠다</p><blockquote><p><code>세상은 넓고 천재는 많다. 똑똑한 개발자도 많고 나보다 더 노력하는 개발자도 많다.</code><br>부족한 점을 깔끔히 인정하고 적절한 자존감을 유지해야 꾸준한 학습을 할 수 있다.<br>2018년에는 2017년보다 더 성장해서 개발자 다운 개발자가 되고 싶다.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2017년을 회고하며 2018년을 약속하기 &amp;amp; 좋은 개발자 되기&lt;/p&gt;
    
    </summary>
    
      <category term="column" scheme="https://devjang.github.io/categories/column/"/>
    
    
      <category term="신입 개발자 멘토" scheme="https://devjang.github.io/tags/%EC%8B%A0%EC%9E%85-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EB%A9%98%ED%86%A0/"/>
    
      <category term="2017 개발자 회고" scheme="https://devjang.github.io/tags/2017-%EA%B0%9C%EB%B0%9C%EC%9E%90-%ED%9A%8C%EA%B3%A0/"/>
    
  </entry>
  
  <entry>
    <title>Vuetiful Korea 세 번째 밋업</title>
    <link href="https://devjang.github.io/2017/12/01/2017-12-01-vuetiful-ko-third-meetup/"/>
    <id>https://devjang.github.io/2017/12/01/2017-12-01-vuetiful-ko-third-meetup/</id>
    <published>2017-11-30T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.867Z</updated>
    
    <content type="html"><![CDATA[<p>Vuetiful Korea 세 번째 밋업 참가 후기!</p><a id="more"></a><p><img src="http://1.bp.blogspot.com/-n9miFD4sKOc/WiGICB5RXvI/AAAAAAAABwE/8G-ylQulbsAZntPsD3ppfjMpjNY9cZNWQCK4BGAYYCw/s1600/20171201_190849.jpg" alt=""></p><ul><li>마루180</li></ul><p><img src="http://3.bp.blogspot.com/-iff45k2g3Io/WiGH7j5hFhI/AAAAAAAABvk/g4RYC6D4FNcVlXGNXH-whDhlBsMz1KVXgCK4BGAYYCw/s1600/IMG_20171201_191027.jpg" alt=""></p><p><img src="http://3.bp.blogspot.com/-VK5CakHnrK4/WiGH7ilZ_NI/AAAAAAAABvg/kuRAfH5tsAsyqbxKkl9Q_Ffptm1loUbBACK4BGAYYCw/s1600/IMG_20171201_191152.jpg" alt=""></p><hr><h3 id="Virtual-dom-to-render-우경화-뉴링크"><a href="#Virtual-dom-to-render-우경화-뉴링크" class="headerlink" title="Virtual dom to render (우경화 @뉴링크)"></a>Virtual dom to render (우경화 @뉴링크)</h3><p><img src="http://1.bp.blogspot.com/-0gvMmsUKVe4/WiGH-j3_nLI/AAAAAAAABv0/cCFCjYx3clAIgsfgzUJbaTQQSdlxxwy0gCK4BGAYYCw/s1600/20171202_013857.jpg" alt=""></p><ul><li><p><strong>DOM and Virtual DOM</strong><br>Document 내부의 태그에 대한 정의와 api를 규격화 한 모델.<br>and<br>DOM을 본따 만든 JavaScript Object.</p></li><li><p><strong>Virtual Dom prevents bad performance</strong><br>Virtual DOM도 결국 DOM에 patch가 되어야 하니 DOM을 직접 제어하는 코드보다 빠를 수 없다.</p></li><li><p><strong>SnabbDom</strong><br>가장 신기했던 부분이었다.<br>기존에 React &amp; Vue에서 제공하는 VirtualDOM을 더 강력하게 만든다.<br>코드는 그렇게 어려워 보이지 않았으며 Hook과 patch function을 활용한 방법이 재미있었다.</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 선택된 모듈과 함께 patch function 초기화</span></span><br><span class="line"><span class="keyword">const</span> snabbdom = <span class="built_in">require</span>(<span class="string">'snabbdom/snabbdom.js'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> patch = snabbdom.init([</span><br><span class="line">  <span class="comment">// 토글 class</span></span><br><span class="line">  <span class="built_in">require</span>(<span class="string">'snabbdom/modules/class'</span>).default,</span><br><span class="line">  <span class="comment">// DOM 요소 프로퍼티 설정</span></span><br><span class="line">  <span class="built_in">require</span>(<span class="string">'snabbdom/modules/props'</span>).default,</span><br><span class="line">  <span class="comment">// 애니메이션을 지원하는 요소 스타일 핸들링</span></span><br><span class="line">  <span class="built_in">require</span>(<span class="string">'snabbdom/modules/style'</span>).default,</span><br><span class="line">  <span class="comment">// 이벤트 리스너 연결</span></span><br><span class="line">  <span class="built_in">require</span>(<span class="string">'snabbdom/modules/eventlisteners'</span>).default</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> oldv = <span class="built_in">document</span>.getElementById(<span class="string">'static_dom'</span>);</span><br><span class="line"><span class="keyword">let</span> vnode = h(<span class="string">'div#static_dom'</span>, &#123;</span><br><span class="line">    class: [ 'classed'],</span><br><span class="line">    style: &#123; <span class="attr">color</span>: <span class="string">'#f00'</span>, <span class="attr">textDecoration</span>: ‘underline’ &#125;,</span><br><span class="line">    on: &#123; <span class="attr">click</span>: changeToButton &#125;</span><br><span class="line">  &#125;, <span class="string">'but changed by virtual dom'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; oldv = patch(oldv, vnode); &#125;, <span class="number">3000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">      tag: <span class="string">'button'</span>,</span><br><span class="line">      data: &#123;</span><br><span class="line">        type: <span class="string">'button'</span>,</span><br><span class="line">        class: &#123; 'btn': true, 'btn-green': true &#125;,</span><br><span class="line">        on: &#123;</span><br><span class="line">          click: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">window</span>.open(<span class="string">'https://kr.vuejs.org/v2/guide/render-function.html'</span>,<span class="string">'_blank'</span>);&#125;</span><br><span class="line">        &#125;&#125;,</span><br><span class="line">      children: <span class="string">'To Vue Blog'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> oldv = <span class="built_in">document</span>.getElementById(‘dom’)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createVNode</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h(<span class="keyword">this</span>.tag, <span class="keyword">this</span>.data, <span class="keyword">this</span>.children)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateObj</span> (<span class="params">oldv, data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> patch(oldv, createVNode.call(data)</span><br><span class="line">&#125;</span><br><span class="line">oldv = updateObj(obj)</span><br><span class="line"></span><br><span class="line"><span class="comment">// obj 내부의 데이터에 setter로 updateObj를 호출 data에 따라 값이 바뀌는 원시 Vue 완성 </span></span><br><span class="line"><span class="comment">// Static DOM =&gt; BUT! changed by Virtual DOM</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>Vue render function</strong><br>vnode는 유일무이해야함</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">render: <span class="function"><span class="keyword">function</span> (<span class="params">h</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> vm = <span class="keyword">this</span> <span class="comment">// this는 현재의 component를 가리킴</span></span><br><span class="line"> <span class="keyword">var</span> myHi = h(<span class="string">'p'</span>, <span class="string">'hi'</span>)</span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> h( <span class="string">'div'</span> ,  … <span class="comment">//tag</span></span><br><span class="line">&#123; … <span class="comment">//data object class, staticClass, style, &#125;⁰,</span></span><br><span class="line">[myHi, <span class="built_in">Object</span>.assign(&#123;&#125;, myHi)¹]) <span class="comment">//children</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>patch function</strong><br>VNode의 변화만 보기 때문에 요소에는 관심이 없다.<br>OLD VNode &amp; NEW VNode로 나뉘게 된다.<br>리렌더링 =&gt; 라이브러리에서 적용한 상태값들이 사라질 수 있음 </p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vnode 생성 핼퍼 함수</span></span><br><span class="line"><span class="keyword">var</span> h = <span class="built_in">require</span>(<span class="string">'snabbdom/h'</span>).default;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> container = <span class="built_in">document</span>.getElementById(<span class="string">'container'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// patch function 사용</span></span><br><span class="line">patch(oldVnode, newVnode);</span><br></pre></td></tr></table></figure><p>  리렌더링이 =&gt; 라이브러리에서 적용한 상태값들이 사라질 수 있음 </p><ul><li><strong>Vue process</strong><br>실데이이터는 get, set으로 쓰임<br>watch에 설정된 경우에만 컴포넌트의 렌더링 관여하는 Watcher 객체 생성</li></ul><p><a href="https://kr.vuejs.org/v2/api/#keep-alive" target="_blank" rel="noopener">keep alive</a>를 주로 활용하였다는 데 <a href="https://kr.vuejs.org/v2/api/#옵션-라이프사이클-훅" target="_blank" rel="noopener">Life Cycle</a>과 관련이 있는 걸로 보인다.</p><blockquote><p><code>마지막 한마디 =&gt; Vue is JavaScript</code><br>결과를 아는 것 &lt; 왜 그렇게 되는 것인지 이해 === Vue를 더 잘 쓸 수 있는 방법</p></blockquote><p>우경화님의 예제 : <a href="https://kellywoo.github.io/vnode" target="_blank" rel="noopener">https://kellywoo.github.io/vnode</a><br>SnabbDom : <a href="https://github.com/snabbdom/snabbdom" target="_blank" rel="noopener">https://github.com/snabbdom/snabbdom</a><br>발표자료 : <a href="https://docs.google.com/presentation/d/1CicMIDXECBg_5Y7TnAf-iF4uXW7PrDoUfAM6hpBCulI/edit?usp=sharing" target="_blank" rel="noopener">https://docs.google.com/presentation/d/1CicMIDXECBg_5Y7TnAf-iF4uXW7PrDoUfAM6hpBCulI/edit?usp=sharing</a></p><hr><h3 id="Vue-js로-Unit-Test하기-박성호-마이리얼트립"><a href="#Vue-js로-Unit-Test하기-박성호-마이리얼트립" class="headerlink" title="Vue.js로 Unit Test하기 (박성호 @마이리얼트립)"></a>Vue.js로 Unit Test하기 (박성호 @마이리얼트립)</h3><p><img src="http://2.bp.blogspot.com/-XhLSJ_Lq6rM/WiGH-oHgAfI/AAAAAAAABv8/_uxvYq00DVYwHQqXpjQYKYWLNFB5NMyOwCK4BGAYYCw/s1600/20171202_013813.jpg" alt=""></p><ul><li><p><strong>TDD를 도입하게 된 계기</strong><br>웹과 앱을 통신하는 복잡한 과정을 개선하기 위해 테스트를 도입하기로 결정</p></li><li><p><strong>테스트 도구 선택</strong><br>다양한 선택 중 VueCLI의 Karma &amp; Mocha를 선택</p></li><li><p><strong>테스트의 종류</strong><br>TDD라고 다 같은 테스트가 아니다.<br>테스트의 종류는 다양하기 때문에 다 하는 게 좋다.</p></li><li><p><strong>컴포넌트 테스트</strong><br>VueCLI의 초기화면 테스트를 예를 들어 보여준 후 간단한 Todo 앱의 컴포넌트 테스트를 보여주었다<br><a href="https://kr.vuejs.org/v2/api/index.html#Vue-nextTick" target="_blank" rel="noopener">Vue.nextTick</a>을 활용할 것을 추천했다.</p></li></ul><p>발표자료 : <a href="https://docs.google.com/presentation/d/1nOcis4xOElGXpuOTq2mSHQVxIWXzgkaIXKppXpbT5w0/edit?usp=sharing" target="_blank" rel="noopener">https://docs.google.com/presentation/d/1nOcis4xOElGXpuOTq2mSHQVxIWXzgkaIXKppXpbT5w0/edit?usp=sharing</a></p><hr><h3 id="PWA-시작하기-최준석-NHN-벅스"><a href="#PWA-시작하기-최준석-NHN-벅스" class="headerlink" title="PWA 시작하기 (최준석 @NHN 벅스)"></a>PWA 시작하기 (최준석 @NHN 벅스)</h3><p><img src="http://1.bp.blogspot.com/-r-Dwf3nNp6M/WiGH-i2jQQI/AAAAAAAABv4/__9GccJaAGYBcAkF4vlHIJuV69j2wcXmACK4BGAYYCw/s1600/20171202_013754.jpg" alt=""></p><ul><li><p><strong>지루한 pwa 설명</strong><br>모든 브라우저 &amp;&amp; 모든 디바이스<br>오프라인 작동 가능 &amp; 앱과 유사하다<br>업데이트 프로세스 =&gt; 최신 상태 유지<br>HTTPS 제공<br>설치 가능<br>레진코믹스나 AWS는 사용 중</p></li><li><p><strong>application shell</strong><br>캐시 사용 =&gt; 빠른 로딩 속도<br>컨텐츠 동적 이용<br>정말 사용해야 하는 기본적인 구성(데이터, 리소스)만 넣어야 한다  </p></li></ul><p>참조 : <a href="https://developers.google.com/web/fundamentals/architecture/app-shell?hl=ko" target="_blank" rel="noopener">https://developers.google.com/web/fundamentals/architecture/app-shell?hl=ko</a></p><ul><li><strong>서비스 워커</strong><br>브라우저가 백그라운드에서 실행하는 스크립트<br>설치<br>푸시 알림<br>백그라운드 동기화  </li></ul><p>참조 : <a href="https://developers.google.com/web/fundamentals/primers/service-workers/?hl=ko" target="_blank" rel="noopener">https://developers.google.com/web/fundamentals/primers/service-workers/?hl=ko</a></p><ul><li><strong>사용하면서 어려웠던 부분</strong></li></ul><ol><li>SWPrecacheWebpackPlugin<br>기본적인 설정 내용에 따라 추가 Service Worker를 자동으로 생성</li><li>기본으로 앱 코드 안에 서비스워커를 등록시켜주는 register &amp; Service Worker 파일 필요</li><li>vue-pwa-template의 dev버전에 register 부분은 없다.</li><li>Production register =&gt; Service Worker를 자동 생성 (설정필요)</li><li>튜토리얼대로만 하면 될 정도로 간단하다고 한다.</li></ol><p>발표자료 : <a href="http://jicjjang.github.io/2017/11/30/vue-pwa-start" target="_blank" rel="noopener">http://jicjjang.github.io/2017/11/30/vue-pwa-start</a></p><hr><h3 id="스폰서-광고"><a href="#스폰서-광고" class="headerlink" title="스폰서 광고"></a>스폰서 광고</h3><p><img src="https://media.rocketpunch.com/images/2017/02/11/08db9c99ca0b.jpg" alt=""></p><ul><li>많은 프론트엔드 개발자의 지원을 기다리고 있다고 한다.<br>(Vuetiful Korea 세 번째 밋업의 간식 후원)</li></ul><hr><h3 id="OX-퀴즈-Bob-Lee"><a href="#OX-퀴즈-Bob-Lee" class="headerlink" title="OX 퀴즈 (Bob Lee)"></a>OX 퀴즈 (Bob Lee)</h3><p><img src="http://3.bp.blogspot.com/-dYTMRjgyOFU/WiGH7l_5esI/AAAAAAAABvc/SxursRZabE0k2_6WX3VCgVwlOJXuy1c4QCK4BGAYYCw/s1600/IMG_20171201_204107.jpg" alt=""></p><ul><li>전체적으로 문제가 너무 어려웠다…</li></ul><p><img src="http://1.bp.blogspot.com/-BzDpz3NrLr0/WiGH7s1fAfI/AAAAAAAABvY/Jq7dLpN9Bo0gZycrWkKDAmNRSU6RgyVggCK4BGAYYCw/s1600/IMG_20171201_205811.jpg" alt=""></p><hr><h3 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h3><ul><li><p><strong>Q :</strong> PWA 개발 후 패키징은 뭐로 하나요? cordova? 같은 걸까요? 요즘 핫한게 뭐가 있는지 궁금합니다.<br><strong>A :</strong> 앱스토어 배포가 필요 없다. 레진코믹스를 예로 설명</p></li><li><p><strong>Q :</strong> PWA의 Push는 firebase를 이용하신 건가요?<br><strong>A :</strong> Yes!</p></li><li><p><strong>Q :</strong> react native처럼 vue로도 native app을 만들수 있는 뭔가가 있다고 들었는데,<br>용어가 기억이 안납니다. 아시는 분 언급좀 부탁드려요!<br><strong>이승민 :</strong> <a href="https://weex.apache.org" target="_blank" rel="noopener">Weex</a>!  </p></li><li><p><strong>Q :</strong> Vue가 Angular에 비해 낫다고 생각하는 점을 설명해주세요<br><strong>이선협 :</strong>  당연히 좋다.<br>TypeScript와 Angular는 어렵고 인기 또한 깃헙 Star까지 Vue가 높다</p></li><li><p>​<strong>Q :</strong> 저희도 Vue.js 하는 사람 뽑아요..<br><strong>A :</strong> 웍스모바일에서 뽑는다고 한다</p></li><li><p>​<strong>Q :</strong> 서비스에 PWA 적용하니 정말 좋나요? 실서비스 사례도 궁금해요<br><strong>최준석 :</strong> pwa 발표자입니다. 실서비스에서 안써봤습니다 흑흑 회사에서 vue 안씁니다…</p></li></ul><hr><h3 id="Vue-한국-사용자-모임"><a href="#Vue-한국-사용자-모임" class="headerlink" title="Vue 한국 사용자 모임"></a>Vue 한국 사용자 모임</h3><ul><li>Github : <a href="https://github.com/vuejs-kr" target="_blank" rel="noopener">https://github.com/vuejs-kr</a></li><li>Facebook : <a href="https://www.facebook.com/groups/1152461054807344" target="_blank" rel="noopener">https://www.facebook.com/groups/1152461054807344</a></li><li>블로그 : <a href="http://vuejs.kr" target="_blank" rel="noopener">http://vuejs.kr</a></li><li>Slack : <a href="https://vuejs-korea.signup.team" target="_blank" rel="noopener">https://vuejs-korea.signup.team</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vuetiful Korea 세 번째 밋업 참가 후기!&lt;/p&gt;
    
    </summary>
    
      <category term="conference" scheme="https://devjang.github.io/categories/conference/"/>
    
    
      <category term="Vuetiful Korea" scheme="https://devjang.github.io/tags/Vuetiful-Korea/"/>
    
      <category term="Vuetiful Korea 세 번째 밋업" scheme="https://devjang.github.io/tags/Vuetiful-Korea-%EC%84%B8-%EB%B2%88%EC%A7%B8-%EB%B0%8B%EC%97%85/"/>
    
      <category term="Vue 한국 사용자 모임" scheme="https://devjang.github.io/tags/Vue-%ED%95%9C%EA%B5%AD-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%AA%A8%EC%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript에 UglifyJs 적용하기</title>
    <link href="https://devjang.github.io/2017/11/30/2017-11-30-ts-uglify/"/>
    <id>https://devjang.github.io/2017/11/30/2017-11-30-ts-uglify/</id>
    <published>2017-11-29T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.867Z</updated>
    
    <content type="html"><![CDATA[<p>TypeScript에 Babel 없이 UglifyJs 적용</p><a id="more"></a><hr><p>Vue에 TypeScript를 적용하던 중 당황스러운 버그에 종착했다.<br>분명히 다양한 Boilerplate를 참고했음에도 불구하고 <code>webpack에서의 빌드는 정상</code>적이지만</p><p><code>Vue App이 브라우저에 올라갈 때</code> 오류가 뜨는 것이다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Failed to compile.</span><br><span class="line"></span><br><span class="line">bundle.js from UglifyJs</span><br><span class="line">Unexpected token: name (urlParts) [bundle.js:12412,4]</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR <span class="keyword">in</span> bundle.js from UglifyJs</span><br><span class="line">Unexpected token: name (urlParts)</span><br></pre></td></tr></table></figure><hr><p>확인해보니 <code>UglifyJS는 ES6를 지원하지 않는다</code>고 한다.</p><p>TS =&gt; JS 변환된 파일을 Babel로 ES5로 변환한 후에 적용하면 된다는 데…</p><p>TypeScript는 <code>컴파일 옵션을 통해 컴파일 타겟을 ES5로 설정</code> 가능하기 때문에 굳이 Babel을 사용할 필요가 없다.</p><p>이 점이 굉장히 찜찜하여 더 검색을 해본 결과</p><p><strong>기본적으로 webpack에서 제공해주는 UglifyJS 플러그인이 아니라 설치를 해서 옵션을 주면 가능하다는 것</strong></p><hr><p>별도의 플러그인을 설치<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -D uglifyjs-webpack-plugin</span><br></pre></td></tr></table></figure></p><p>webpack.config.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UglifyJSPlugin = <span class="built_in">require</span>(<span class="string">'uglifyjs-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line">plugins: [</span><br><span class="line">  <span class="keyword">new</span> UglifyJSPlugin(&#123;</span><br><span class="line">    uglifyOptions: &#123;</span><br><span class="line">      <span class="comment">// 옵션 적용</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><hr><p>허무하게 해결이 되긴 했지만 외국에서는 TypeScript with Babel 문제 의견이 분분하다.<br>TypeScript를 적용할 때 다양한 자료를 참고한다면 최대한 <code>최신 자료를 참고</code>해야 하며<br><code>이슈 목록을 체크</code>해 사전에 삽질을 방지해야 한다.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TypeScript에 Babel 없이 UglifyJs 적용&lt;/p&gt;
    
    </summary>
    
      <category term="programming" scheme="https://devjang.github.io/categories/programming/"/>
    
      <category term="typescript" scheme="https://devjang.github.io/categories/programming/typescript/"/>
    
    
      <category term="TypeScript from UglifyJs" scheme="https://devjang.github.io/tags/TypeScript-from-UglifyJs/"/>
    
      <category term="TypeScript" scheme="https://devjang.github.io/tags/TypeScript/"/>
    
      <category term="UglifyJs" scheme="https://devjang.github.io/tags/UglifyJs/"/>
    
  </entry>
  
  <entry>
    <title>GDG DEVFEST 2017 @Seoul Univ GCP</title>
    <link href="https://devjang.github.io/2017/11/19/2017-11-19-gdg-dev-fest/"/>
    <id>https://devjang.github.io/2017/11/19/2017-11-19-gdg-dev-fest/</id>
    <published>2017-11-18T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.866Z</updated>
    
    <content type="html"><![CDATA[<p>GDG DEVFEST 2017 관람 후기<br><a id="more"></a></p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://1.bp.blogspot.com/-ZzaY1ONZaJI/WhFpfUqsbsI/AAAAAAAABrE/6HOIqS-fjnML7b5PIAW8mQ3XkXAEuhU5gCK4BGAYYCw/s1600/gdg-2017-schedule.png" alt=""></h2><p><img src="http://3.bp.blogspot.com/-o6QBGvuKNtg/WhGLN-lABsI/AAAAAAAABsI/dZ_uzx0hix0-tgwBGTypf0YYGhmyb8NYgCK4BGAYYCw/s1600/20171119_144456.jpg" alt=""><br>두번 다시는 오지 않겠다 다짐했지만 또 오게되었다….</p><hr><!-- TOC --><ul><li><a href="#why-typescript-with-clean-architecture-by-정유진">Why TypeScript with Clean Architecture by 정유진</a></li><li><a href="#프론트엔드-모던-프레임워크-낱낱히-파헤치기-by-한성민">프론트엔드 모던 프레임워크 낱낱히 파헤치기 by 한성민</a></li><li><a href="#해외-취업이야기-by-정승욱">해외 취업이야기 by 정승욱</a></li><li><a href="#특별한-취업이야기-by-김태호">특별한 취업이야기 by 김태호</a></li><li><a href="#리액트와-장고로-만드는-progressive-web-app-빠르고-단단한-웹사이트-제작하기-by-진유림">리액트와 장고로 만드는 Progressive Web App: 빠르고 단단한 웹사이트 제작하기 by 진유림</a></li><li><a href="#사은품">사은품</a></li></ul><!-- /TOC --><hr><h4 id="Why-TypeScript-with-Clean-Architecture-by-정유진"><a href="#Why-TypeScript-with-Clean-Architecture-by-정유진" class="headerlink" title="Why TypeScript with Clean Architecture by 정유진"></a>Why TypeScript with Clean Architecture by 정유진</h4><p><img src="http://1.bp.blogspot.com/-pxpZVZcR_rk/WhGI73M24yI/AAAAAAAABrw/la4cF4w96Lo6G3wfrwnUb74isD7fzUQoACK4BGAYYCw/s1600/gdg-2017-2.png" alt=""></p><blockquote><p>점점 커지는 프로젝트에 관리의 어려움을 느끼기 시작함</p></blockquote><p><iframe src="//www.slideshare.net/slideshow/embed_code/key/7swsgJV2kZCNow" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/ssuser44df45/why-typescript-with-clean-architecture-82371194" title="Why Typescript with Clean Architecture" target="_blank">Why Typescript with Clean Architecture</a> </strong> from <strong><a href="https://www.slideshare.net/ssuser44df45" target="_blank">유진 정</a></strong> </div></p><ul><li><strong>문제의식</strong></li></ul><ol><li>다양한 지식을 통제</li><li>올바른 관점 통일</li><li>실수를 최소화 할 수 있는 개발환경</li></ol><blockquote><p>코드 리뷰가 의미 없는 시간으로 변질되고<br>도메인 간의 관계가 서버에서는 관리가 분산 설계를 통해 관리되지만<br>WEB 환경에서는 굉장히 우려되는 현상을 발견하게 되고<br>Type Safe 기반의 아키텍처를 설계하는 것으로 결정하게 된다.</p></blockquote><ul><li><p><strong>Why TypeScript?</strong><br>수많은 후보들 중 결국 TypeScript를 선택하게 되었다.<br>그 이유는 앞으로 지원할 사람을 위한 측면도 있다고 한다.</p></li><li><p><strong>JavaScript -&gt; TypeScript</strong><br>기존의 기술 스택인 React 환경에서 전환하는 데 큰 어려움은 없었다.<br>특히 DDD (Domain-driven design)에 가장 큰 포커스를 두었으며<br>디렉토리 구조조차 DDD에 상응하는 구조로 설계하여 비즈니스 부분도 고려하였다.</p></li><li><p><strong>TypeScript로 변경한 후기</strong>  </p></li></ul><ol><li>다양하게 혼재되는 관점이 통일되었다.  </li><li>DDD를 적용하여 이제 비즈니스적인 측면이 고려된 설계로 안정감이 더해졌다.</li><li>의미있는 코드리뷰를 진행하게 되었다.</li></ol><blockquote><p>개발환경도 중요하지만 회사의 비즈니스측면을 고려한 면<br>그리고 문제의식을 뭔저 자각하고 큰 실행에 옮긴 점이 대단하게 느껴졌다.<br>마지막으로 TypeScript로 이전하면서 큰 시행착오는 없었다는 부분에 감탄하게되었다.</p></blockquote><hr><h4 id="프론트엔드-모던-프레임워크-낱낱히-파헤치기-by-한성민"><a href="#프론트엔드-모던-프레임워크-낱낱히-파헤치기-by-한성민" class="headerlink" title="프론트엔드 모던 프레임워크 낱낱히 파헤치기 by 한성민"></a>프론트엔드 모던 프레임워크 낱낱히 파헤치기 by 한성민</h4><p><img src="http://3.bp.blogspot.com/-Uzrvl78FYtA/WhGJySwywGI/AAAAAAAABr8/5mEOCi3Ecc8RP95cvQL8IJ4XZtVJz8fWQCK4BGAYYCw/s1600/gdg-2017-3.png" alt=""></p><p><iframe src="//www.slideshare.net/slideshow/embed_code/key/I7YZzlm4zzGawf" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/KennethCeyer/gdg-devfest-2017-seoul-82177288" title=" GDG DevFest 2017 Seoul 프론트엔드 모던 프레임워크 낱낱히 파헤치기" target="_blank"> GDG DevFest 2017 Seoul 프론트엔드 모던 프레임워크 낱낱히 파헤치기</a> </strong> from <strong><a href="https://www.slideshare.net/KennethCeyer" target="_blank">Kenneth Ceyer</a></strong> </div></p><ul><li><strong>JavaScript 라이브러리의 역사</strong></li></ul><p>과거에는 객체 사용이 힘들었지만 commonJS 등장 이후에 모듈 개념이 등장하기 시작<br>그 후 AMD의 철학을 따른 RequireJS가 등장하며 끝으로 nodeJS까지 등장하였다.<br>완전히 모듈 관점의 개발이 진행되기 시작하게 된 계기가 되었다.</p><ul><li><strong>2017 Front-end의 상황</strong></li></ul><p>이제는 배워야할 게 너무나 많다. 절대로 다 배울수는 없다</p><p>중요하다고 생각하는 키워드</p><ol><li>동적렌더링</li><li>모듈링 &amp; 번들링</li><li>타이핑</li><li>테스트 자동화</li></ol><ul><li><strong> 그 와중에 나타난 프레임워크 </strong><br>모든 걸 쉽게 만들어 주는 프레임워크!  </li></ul><p>Angular<br>내장된 기능은 좋으나 러닝커브가 크다.</p><p>React<br>생태계가 넓지만 의존성과 버전에 민감하다. 라이브러리이기때문에 자체적인 기능은 거의 없다.</p><p>Vue<br>러닝커브와 가벼움에 유리한 점이 많다. 규모가 커지면 재활용성이 떨어진다</p><ul><li><strong>코드비교</strong><br>Angular<br>Binding이 강력하다</li></ul><p>React<br>JSX에 로직이 함께한다. 상태관리가 굉장히 중요하다</p><p>Vue<br>Angular + React 느낌도 있지만 AngularJS를 떠올리게 된다</p><ul><li><strong>트렌딩</strong></li></ul><ol><li><p>검색 순위 &amp; 스택오버플로우<br>Angular &gt; React &gt; Vue<br>(AngularJS + Angular의 경우 가장 큰 사용자를 보유한다  )</p></li><li><p>Github Star<br>React &gt; Vue &gt; Angular</p></li></ol><ul><li><strong>진입장벽</strong><br>(쉬움) Vue &gt; React &gt; Angular (어려움)</li></ul><blockquote><p>Angular =&gt; 사전에 프레임워크 경험 권장<br>React =&gt; 상태관리와 생명주기가 상대적으로 어려움<br>AngularJS 사용 경험자는 Vue 학습에 유리하다</p></blockquote><ul><li><p><strong>속도</strong><br>Vue가 가장 빠른 벤치마크를 보인다<br>하지만 Angular에 AOT를 적용한다면 엄청난 퍼포먼스를 보인다</p></li><li><p><strong>컴포넌트</strong>  </p></li></ul><p>Angular<br>대규모 프로젝트에 권장  </p><p>React<br>SSR의 경우에 유리  </p><p>Vue<br>소규모 프로젝트에 권장</p><ul><li><strong>템플릿</strong>  </li></ul><p>Angular<br>체계적이지만 다양한 패턴이 존재하여 어려울때가 많다</p><p>React<br>템플릿 미지원</p><p>Vue<br>간단하고 명시적이다 (AngularJS와 비슷)</p><blockquote><p>개인적인 의견이 많이 들어가긴 한 발표라고 느껴지긴 했다.<br>이제 지겨운 주제라서 보기 싫다는 사람도 많이 봤지만 결국 강당을 다 메울정도로 많은 참가자가 있었다.<br>발표자분께서는 정말 꼼꼼하게 분석해서 좋은 강연을 해주었지만 Vue에 대해서는 약간 부족한 정보가 보였고<br>너무 Vue만 찬밥아니냐는 참가자도 있었던 좋지만 아쉬운 발표였다</p></blockquote><hr><h4 id="해외-취업이야기-by-정승욱"><a href="#해외-취업이야기-by-정승욱" class="headerlink" title="해외 취업이야기 by 정승욱"></a>해외 취업이야기 by 정승욱</h4><blockquote><p>Grab에서 근무하고 계신 정승욱님의 해외취업 경험기<br>한국 개발자들의 많은 지원을 기다린다고 한다.</p></blockquote><ul><li><p><strong>해외취업을 준비하게된 계기</strong><br>오픈소스 활동으로 Linkedin을 통해 다양한 유수의 헤드헌터에 제의가 많이 들어옴</p></li><li><p><strong>해외취업 준비과정</strong><br>다니고 있던 회사를 퇴직 후 반년을 영어공부에 매진하였다.<br>거의 하루에 8시간은 영어 공부를 하며 지냈다고 한다.</p></li><li><p><strong>지원</strong><br>지원은 직접 Apply하였으며 실제로 접촉했던 회사는 AWS, Grab, Shopify</p></li><li><p><strong>채용프로세스</strong><br>운이 좋아 1개월이 조금 넘는 기간만에 취업에 성공한 케이스하고한다.<br>하지만 그 과정은 굉장히 타이트했음을 강조하였다.<br>레퍼런스를 요구하는 등 영어이기때문에 하고 싶은 말도 다 표현할 수 없는 답답한 점까지 있기 때문이다.</p></li></ul><ol><li><p>영어면접<br>열심히 공부하고 준비했지만 굉장한 현실은 상대방의 말이 잘 들리지 않아 큰 고생을 했다고한다.</p></li><li><p>테스트<br><em>구글 독스를 통해 실시간으로 테스트</em>를 보게 되었다고한다.<br>IDE의 지원도 없기 때문에 오히려 한국에서의 테스트보다 더욱 더 힘들 수 밖에 없었으며<br><em>컴퓨터 공학 기초인 자료구조와 알고리즘</em>도 당연하게 확인을 하고는 했다고 한다.</p></li></ol><ul><li><p><strong>해외 개발자 생활</strong><br>이미 다양한 인종의 개발자들과 생활하는 환경이였다<br>특히 인상적인 부분은 같은 언어를 구사함에도 불구하고 너무나 다른 억양으로<br>애로상황이 많기때문에 업무가 지연되기도 한다곻한다</p></li><li><p><strong>Q&amp;A</strong></p></li></ul><ol><li><p>영어는 어느 정도를 해야 가능한지<br>당연히 의사소통이 되야한다. 특히 IELTS 점수가 7점을 필히 넘어야만 지원이 가능하다고 본다.<br>(해외에서 1년 이상 거주한 경험과 사회 경력등까지 반영되는 점수라고 한다.)</p></li><li><p>개발 경력은 어느정도가 되야 해외취업에 적당한지<br>보통 만 3년이상은 되야 지원에 적당하다.<br>특히 인도와 아시아 개발자는 경력에 대한 뻥튀기가 심하기 때문에 그런 인식도 고려해야한다</p></li><li><p>협업을 하며 언어가 잘 통하지 않는 경우 어떻게 대처하였는 지<br>어쩔 수 없다. 이해할 때까지 계속 되 물어야 한다.<br>결국에는 적어서 의사소통을 하는 경우가 있다.</p></li></ol><hr><h4 id="특별한-취업이야기-by-김태호"><a href="#특별한-취업이야기-by-김태호" class="headerlink" title="특별한 취업이야기 by 김태호"></a>특별한 취업이야기 by 김태호</h4><blockquote><p>구글 한국 지사 근무중인 김태호님의 이야기를 들어보았다.</p></blockquote><ul><li><p><strong>구글에 지원</strong><br>재직 중에 직접 지원하게 되었으며 12월에 지원하고 3월에 최종합격하게되었다</p></li><li><p><strong>면접</strong><br>오히려 외국인 면접관이 더욱 편했다.<br>특히 한국인 면접관은 압박 질문을 시도하여 어려울 때가 많았다.<br>기술지원 직무였지만 똑같이 구글 독스를 통해 테스트를 하는 경우가 있다고 한다.<br>한때 유행했던 구글의 신기한 면접방법 (ex. 전 세계의 셔틀버스는? 버스에 들어가는 농구공의 개수는?)<br>이제 그런 질문은 안한다고 하니 걱정하지 말라고 한다.</p></li><li><p><strong>영어공부</strong>  </p></li></ul><ol><li>오버워치 영어로 하기(농담이 아니라 진심임을 강조)</li><li>컨퍼런스 동영상들 많이 보기<br>등등 다양한 시도를 했다</li></ol><ul><li><strong>다양한 문화의 사람들과의 협업</strong><br>굉장히 친하게 지내고 있기때문에 허물없이 잘 지내고 있다.<br>(의사소통이 통하지 않을때 What?!이라고 할 수 있는 정도)</li></ul><hr><h4 id="리액트와-장고로-만드는-Progressive-Web-App-빠르고-단단한-웹사이트-제작하기-by-진유림"><a href="#리액트와-장고로-만드는-Progressive-Web-App-빠르고-단단한-웹사이트-제작하기-by-진유림" class="headerlink" title="리액트와 장고로 만드는 Progressive Web App: 빠르고 단단한 웹사이트 제작하기 by 진유림"></a>리액트와 장고로 만드는 Progressive Web App: 빠르고 단단한 웹사이트 제작하기 by 진유림</h4><p><img src="http://4.bp.blogspot.com/-kysSQDPL5mM/WhGI70AxsuI/AAAAAAAABrs/ZsqSMaKI--8ItnM4IqOfsHpf3kocX_qqACK4BGAYYCw/s1600/gdg-2017-1.png" alt=""></p><p><iframe src="//www.slideshare.net/slideshow/embed_code/key/oTv1Sxf4GeFELz" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/jayjin0427/progressive-web-app-feat-react-django-82499585" title="Progressive Web App (feat. React, Django)" target="_blank">Progressive Web App (feat. React, Django)</a> </strong> from <strong><a href="https://www.slideshare.net/jayjin0427" target="_blank">Jay Jin</a></strong> </div></p><ul><li><strong>PWA 제작 계기</strong></li></ul><ol><li>기존에 운영하던 재고관리 시스템(Boxture)을 앱으로 보게 해달라는 요청을 받음</li><li>다양한 플랫폼 중 변화에 유동적으로 대처할 수 있는 PWA 고려</li><li>IOS와 Safari가 미지원인 점이 아쉽지만 강력한 Service Worker에 감탄하여 적용하게됨<br>(Apple측에서도 지원을 준비하고 있으니 기다려보자)</li></ol><ul><li><strong>PWA 개발에 좋았던 점</strong></li></ul><ol><li>기존에 사용하던 CRA(Create React App)을 사용하여 바로 적용할 수 있었다.</li><li>Service Worker에서 도와주는 부분이 굉장히 많았다.</li><li>쉽게 쉽게 적용할 수 있는 부분이 많았다.</li><li>완벽하지는 않지만 네이티브의 푸쉬도 가능하다.</li></ol><ul><li><strong>PWA 시행착오..</strong></li></ul><ol><li>쉽게 쉽게 할 수 있지만 만만치 않았다. 특히 캐시관련 이슈가 골칫거리였다.</li><li>네이티브 기능의 모든 부분을 대처할수는 없다.</li><li>꼭 필요할때만 적용하자.. 꼭 다양한 관점으로 고려할 것.</li><li>Boxture를 빡쳐라고…</li></ol><blockquote><p>React와 django에 대한 얘기는 거의 없었던 부분이 아쉽긴하지만 굉장히 인상적인 부분이였다.<br>사내시스템이 아닌 실제 소비자에게 넘어가는 프로젝트라면 아직 어렵겠지만 개인 프로젝트를 하며<br>익혀보는 것도 나중을 위해 좋아보인다. PWA의 장점을 확실하게 느낄 수 있는 발표였다.</p></blockquote><hr><h4 id="사은품"><a href="#사은품" class="headerlink" title="사은품"></a>사은품</h4><p><img src="http://1.bp.blogspot.com/-mC7QgeSWDm8/WhGLz8ZqNxI/AAAAAAAABsk/ic386Sx29UQjfxkG1yHpsdMSFuEKLuNvwCK4BGAYYCw/s1600/20171119_144030.jpg" alt=""><br>역시나 엄청난 인파</p><p><img src="http://3.bp.blogspot.com/-lVHjBOmOaOc/WhGLzb2iquI/AAAAAAAABsc/m8Jb79bAzzIpngR8V-33HVlwflv3FBOYACK4BGAYYCw/s1600/20171119_154250" alt=""><br>끊임없이 고생하신…</p><p><img src="http://4.bp.blogspot.com/-mjANMrwPkh4/WhGL29wF6LI/AAAAAAAABss/2r7kqUqbm_QACcW-Wl4LSZY3UFLfXMbVwCK4BGAYYCw/s1600/20171119_154724.jpg" alt=""><br>마우스 &amp; 티셔츠</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GDG DEVFEST 2017 관람 후기&lt;br&gt;
    
    </summary>
    
      <category term="conference" scheme="https://devjang.github.io/categories/conference/"/>
    
    
      <category term="gdg" scheme="https://devjang.github.io/tags/gdg/"/>
    
      <category term="gdg 2017" scheme="https://devjang.github.io/tags/gdg-2017/"/>
    
  </entry>
  
  <entry>
    <title>비전공 학원출신 SI개발자, 유명스타트업 들어간.ssul</title>
    <link href="https://devjang.github.io/2017/11/16/2017-11-16-okky/"/>
    <id>https://devjang.github.io/2017/11/16/2017-11-16-okky/</id>
    <published>2017-11-15T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.866Z</updated>
    
    <content type="html"><![CDATA[<p>35살, 비전공 (철학과), 국비지원 학원에서 개발 공부, 웹에이전시 4년 경력이 전부.</p><p>누가 봐도 ‘좋은 회사’ 들어가기 어려워 보이는 이 스펙을 갖고 있는 개발자는<br>많은 개발자들의 선망의 대상인 우아한형제들에 어떻게 들어갈 수 있었을까요?</p><a id="more"></a><hr><!-- TOC --><ul><li><a href="#노상범-대표님이-작성했던-글">노상범 대표님이 작성했던 글</a></li><li><a href="#어린-시절">어린 시절</a></li><li><a href="#개발공부">개발공부</a></li><li><a href="#회사생활">회사생활</a></li><li><a href="#건강-정신건강">건강, 정신건강</a></li><li><a href="#si-탈출-계획">SI 탈출 계획</a></li><li><a href="#qa">Q&amp;A</a></li><li><a href="#발표자료">발표자료</a></li><li><a href="#그-외에-후기-포스팅">그 외에 후기 포스팅</a></li><li><a href="#이종립님">이종립님</a></li></ul><!-- /TOC --><hr><h4 id="노상범-대표님이-작성했던-글"><a href="#노상범-대표님이-작성했던-글" class="headerlink" title="노상범 대표님이 작성했던 글"></a>노상범 대표님이 작성했던 글</h4><blockquote><p>철학과 졸업 후 아마추어 운동선수, 보험회사 텔레마케터, 보습학원 강사 등의 일을 하다가<br>다소 늦은 나이에 개발을 시작했지만 본인의 환경을 극복하고<br>개발자로서의 새로운 멋진 인생을 펼쳐나가고 있는 개발자 이종립님을 모시고<br>개발공부는 어떻게 공부했고, 보다 나은 개발자가 되기 위해<br>본인은 어떤 노력을 기울였는지에 대한 얘기를 들어보는 시간을 마련했습니다.  </p></blockquote><p><a href="https://okky.kr/article/320736?note=1053695" target="_blank" rel="noopener">https://okky.kr/article/320736?note=1053695</a><br><a href="https://okky.kr/article/423962" target="_blank" rel="noopener">https://okky.kr/article/423962</a></p><hr><h4 id="어린-시절"><a href="#어린-시절" class="headerlink" title="어린 시절"></a>어린 시절</h4><blockquote><p>운동 -&gt; 학원 강사 -&gt; 보험 텔레마케터 -&gt; 학원 강사<br>(사회의 부조리를 알게 해준 직업들만 언급)</p></blockquote><p>어린 시절 운동을 평생 할 줄 알았다<br>하지만 운동을 그만두고 아르바이트를 하다 우연히 학원 강사로 취직<br>강사를 그만두고 대학을 다님 (전공 철학과) 졸업을 하였으나 취직에 실패하여 백수가 됨</p><p>보험 가입 권유를 받았으나 백수라 보험 회사에 취직했으나<br>영업에 소질이 없어 그만두고 다시 학원 강사로 취직<br>100만원 조금 넘는 월급을 받으며 강사에 재능을 보였으나<br>말도 안 되는 부조리한 이유로 잘리게 되었고 다시는 학원 강사가 되지 않겠다는 다짐을 하며<br>앞으로는 앉아서 하는 일을 하게되겠다며 결심하게 된다</p><hr><h4 id="개발공부"><a href="#개발공부" class="headerlink" title="개발공부"></a>개발공부</h4><blockquote><p>결국 개발자 친구에 권유로 국비지원 학원에 다니게 된다.<br>31세, 철학 전공, 통장잔고 50만원<br>돈 부족 -&gt; 가계부 개발<br>시간 -&gt; 시간 활용 궁리<br>경험 부족</p></blockquote><p>전공자가 아니기 때문에<br>개발 상식 부족 -&gt; 여러 사람의 추천서 탐색<br>무엇을 공부해야 할지 모른다 -&gt; 방통대 커리큘럼, 전공과목 소개 참고<br>새롭게 배워야 할 것이 많다 -&gt; 일지 / 레포트 기록</p><p>for문에 파일 입출력만 배운 상태에서 가계부를 개발<br>수면시간을 정해놓고 밥을 먹으면서도 동영상 강의를 시청<br>도서관 및 도서구입을 하며 전공 공부를 꾸준히 하게 됨</p><p>막노동을 하던 시절 막 노동 현장의 단어를 모른다고 무시당했던 생각에<br>개발자가 되어서도 무시하지 않겠다며 개발에 모르는 단어를 무조건 숙지</p><p>학원 수료 후 취직<br>조건은 가장 가깝고 연봉을 많이 주는 곳으로!!</p><hr><h4 id="회사생활"><a href="#회사생활" class="headerlink" title="회사생활"></a>회사생활</h4><p>회사에서 도서 구입을 굉장히 많이 했다<br>프로젝트 중 남는 시간에는 무조건 독서를 했다<br>2주에 한 번은 서점에서 분위기 파악<br>도서관 도서 구입 의뢰를 활용</p><p><strong>독서를 효율적으로 열심히</strong></p><blockquote><p>하루에 3권 (조금씩 읽고 요약)<br>집 - 샘플코드 위주<br>출퇴근길 - 재미<br>학원&amp;회사 - 회사에 도움 되는 책</p></blockquote><hr><h4 id="건강-정신건강"><a href="#건강-정신건강" class="headerlink" title="건강, 정신건강"></a>건강, 정신건강</h4><p>개발자 마인드를 가지려 노력 (정품 사용)<br>-&gt; 라이선스와 자료의 소중함을 깨우친 굉장한 경험<br>꾸준한 청결관리<br>일주일에 한 번은 필히 운동<br>항상 계획을 세웠으며 Plan B도 생각함(모든 계획을 망한다는 전제하에 세움)<br>힘들거나 슬럼프가 왔을 때는 가벼운 전화통화를 한다.</p><blockquote><p><strong>Code Complete 2/E 을 처음 본 게 굉장한 도움과 믿음을 가지게 되었다</strong><br>프로그래밍 책을 두 달마다(일주일에 35페이지) 읽을 수 있는 용기를 주었다  </p></blockquote><p>독서 중 잠이 올 때는 아예 책을 타이핑해서 베껴버렸다..<br>그러던 중 손가락에 관절염이 생겨 Vim으로 코딩하게 되었다.<br>결국 Vim 플러그인 제작 후 깃헙 순위에 2위까지 올라간 뿌듯한 기억</p><hr><h4 id="SI-탈출-계획"><a href="#SI-탈출-계획" class="headerlink" title="SI 탈출 계획"></a>SI 탈출 계획</h4><blockquote><p>경직된 수직구조의 회사에 파견..<br>정부기관 파견 당시 말도 안 되는 계약관계와 예산에 충격에 PM과 다툼<br>파견 중 정부기관에 오래 일한 사람에게 커피를 주고 개발 환경 개선에 큰 도움을 줌<br>마구잡이로 공부하다 결국 파견이 가기 싫어 이직에 유리한 방향으로 공부 방법을 바꾸기 시작</p></blockquote><p><em>내 실력을 정직하게 드러낼 수 있는 곳을 이직의 목표로 잡게 된다</em></p><p>지원 회사 리스트 작성 =&gt;<br>합격률이 높은 곳부터 지원하며 면접 정리</p><p>우연한 기회에 헤드헌터와 연락이 되고<br>우아한 형제들에 지원하게 됨 =&gt;<br>코딩테스트 중 문제당 각 10개씩 테스트 케이스 돌고 다양한 언어를 사용<br>(JS,SQL,Java,Scala)<br>라스칼라코딩단에 우아한형제들의 사람들이 있다는 소문을 들었다는..</p><p>TDD에 빠져있던 때인데 TDD의 얘기만 1시간 가량하다 합격!</p><hr><ul><li><strong>책을 보고 요약하는 습관</strong>  </li></ul><p>공부에 일지와 주별로 자기 자신에게 제출하는 리포트를 작성  </p><p><strong>좋은 프로그래머란, 일방통행 도로에서도 양쪽을 모두 보고 건너는 사람이다.</strong></p><p>팀플레이 : 다른 사람을 도울 방법<br>작은 도구를 만드는 습관 : 같은 일을 수작업으로 처리하지 않는다.<br>기억력을 보관하는 습관 : 블로그/개인 위키를 작성하고 관리한다<br>좋은 음식과 충분한 수면<br>항상 플랜B 준비<br>알상 생활에서도 최적화 고민</p><hr><h4 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h4><ol><li><p><strong>SI에서의 습관 지속 방법</strong><br>-&gt; 연봉과 술 그리고 공부를 방해하지 않는 회사만 입사<br>유지 보수할 때는 회사에서 자동화 프로그램을 만들어주며 공부</p></li><li><p><strong>유지 보수 회사에서 자동화 프로그램을 만들어주고 나서의 오히려 요구는 어떻게 대응했는지?</strong><br>-&gt; 친분이 되었을 때만 도구를 만들어줌. 만들어준 도구에 대해서 설명을 해주고 다 해줌</p></li><li><p><strong>(전공에 1년 경력) 취업 준비 중이며 스터디를 하며 낙방을 통해 자신의 한계를 알게 됨<br>공부를 더 할지 하향지원을 할지…</strong><br>-&gt; 이직이 단 한 번이라 조언이 힘들다. 나였다면 낮은 회사를 가서 배울 거 다 배우고 이직하겠다.<br>프로그래머의 길 멘토에게 묻다라는 책을 읽어보길 권장한다</p></li><li><p><strong>코딩 테스트 대비를 어떻게 했는지.. 알고리즘 공부 방법</strong><br>-&gt; 사람마다 공부의 방법은 다르다. 본인은 불안함이 가득해서 빠르게 답을 보고 공부한다.<br>무조건 소스를 많이 본다 상황마다 방법은 다른 것이다</p></li><li><p><strong>책만 읽는다고 공부가 되느냐… 언어는 어느 정도 공부하고 다른 공부를 공부하느냐</strong><br>-&gt; 언어를 마스터하는 건 불가능하다. 적당히 하고 딴거 하자 파고들면 끝이 없다.<br>언어의 특징과 대표적인 부분을 파악하는 것도 도움이 된다. 언어를 사용하는 문화가 다르다.<br>패러다임만 파악해도 비슷한 부분은 굉장히 빠르기 익힐 수 있다.<br>최소 3개의 다른 언어를 파악하는 것도 좋다. 매년 1월 1일 새로운 언어를 하고 있다.<br>책은 아무리 사소한 코드라도 코드 타이핑을 한다</p></li><li><p><strong>좋은 개발자와 다양한 경험</strong><br>-&gt; 질투가 너무나 심하고 불안하기 때문에 누구보다 잘하려고 노력했다.<br>문제를 1등으로 풀지 못하면 정말 질투가 나서 더 공부했다.</p></li></ol><hr><blockquote><h4 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h4><ol><li>비전공자이지만 엄청난 계획을 그대로 행동하고 실천하였다.</li><li>항상 플랜B가 있었다. 이렇게 해서 안되면 이렇게 하지 뭐 아 그래 저렇게 해볼까?</li><li>꽤나 치밀한 전략으로 우아한 형제들 입사에 큰 작용을 하게 되었다.</li><li>결국 미친 듯한 노력을 보였다.</li><li>자기 관리에 투철한 점이 돋보였다.  </li><li>엄청난 독서량을 소화하며 다양한 미니 프로젝트를 통해 꾸준히 코딩했다.</li><li>기록과 리포팅을 통해 독서를 요약했다.</li><li>이런 삶을 SI에서 일하며 4년 이상 유지했다.</li></ol></blockquote><hr><h4 id="발표자료"><a href="#발표자료" class="headerlink" title="발표자료"></a>발표자료</h4><p>: <a href="https://www.slideshare.net/ssuser69b63d1/ss-82150195" target="_blank" rel="noopener">https://www.slideshare.net/ssuser69b63d1/ss-82150195</a></p><h4 id="그-외에-후기-포스팅"><a href="#그-외에-후기-포스팅" class="headerlink" title="그 외에 후기 포스팅"></a>그 외에 후기 포스팅</h4><p>:<br><a href="https://okky.kr/article/425700" target="_blank" rel="noopener">https://okky.kr/article/425700</a><br>:<br><a href="https://okky.kr/article/425800" target="_blank" rel="noopener">https://okky.kr/article/425800</a></p><h4 id="이종립님"><a href="#이종립님" class="headerlink" title="이종립님"></a>이종립님</h4><ul><li>깃헙 : <a href="https://github.com/johngrib" target="_blank" rel="noopener">https://github.com/johngrib</a></li><li>블로그 :<br><a href="https://johngrib.github.io" target="_blank" rel="noopener">https://johngrib.github.io</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;35살, 비전공 (철학과), 국비지원 학원에서 개발 공부, 웹에이전시 4년 경력이 전부.&lt;/p&gt;
&lt;p&gt;누가 봐도 ‘좋은 회사’ 들어가기 어려워 보이는 이 스펙을 갖고 있는 개발자는&lt;br&gt;많은 개발자들의 선망의 대상인 우아한형제들에 어떻게 들어갈 수 있었을까요?&lt;/p&gt;
    
    </summary>
    
      <category term="conference" scheme="https://devjang.github.io/categories/conference/"/>
    
    
      <category term="okky" scheme="https://devjang.github.io/tags/okky/"/>
    
      <category term="이종립" scheme="https://devjang.github.io/tags/%EC%9D%B4%EC%A2%85%EB%A6%BD/"/>
    
  </entry>
  
  <entry>
    <title>러닝 자바스크립트</title>
    <link href="https://devjang.github.io/2017/08/13/2017-08-13-learning-js/"/>
    <id>https://devjang.github.io/2017/08/13/2017-08-13-learning-js/</id>
    <published>2017-08-12T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.866Z</updated>
    
    <content type="html"><![CDATA[<p>ES6로 제대로 입문하는 모던 자바스크립트 웹 개발! 러닝 자바스크립트 리뷰</p><a id="more"></a><hr><blockquote><h3 id="책-정보"><a href="#책-정보" class="headerlink" title="책 정보"></a>책 정보</h3><p>출판사 : 한빛미디어<br>저자 : 이선 브라운<br>역자 : 한선용<br>출간 : 2017-07-11<br>페이지 : 464<br>ISBN : 9788968483387<br>가격 : 28,000원</p></blockquote><ul><li>자세한 정보<br>: <a href="http://book.naver.com/bookdb/book_detail.nhn?bid=12181869" target="_blank" rel="noopener">http://book.naver.com/bookdb/book_detail.nhn?bid=12181869</a><br>: <a href="http://www.hanbit.co.kr/store/books/look.php?p_code=B2328850940" target="_blank" rel="noopener">http://www.hanbit.co.kr/store/books/look.php?p_code=B2328850940</a></li></ul><h3 id="소개"><a href="#소개" class="headerlink" title="소개"></a>소개</h3><p>ES6로 JavaScript를 입문!<br>정말 이 책의 부제와 어울리는 내용과 구조의 책이다.<br>번역에 대한 악평이 꽤나 많은 데 번역이나 내용이나 만족스러웠으며<br>매끄러운 책으로 번역에 걱정이 있으신 분들은 걱정하실 필요가 없을 듯하다.</p><p>입문으로 볼 수는 있지만 아예 프로그래밍에 대한 지식이 없거나<br><code>프로그래밍 언어에 대한 학습이 전무하다면 이 책은 어려울 수가 있다.</code></p><h3 id="ECMA-Script-2015로-접할-수-있는-JavaScript의-세계"><a href="#ECMA-Script-2015로-접할-수-있는-JavaScript의-세계" class="headerlink" title="ECMA Script 2015로 접할 수 있는 JavaScript의 세계"></a>ECMA Script 2015로 접할 수 있는 JavaScript의 세계</h3><p>요즘 JavaScript 서적은 ES6 이전과 이후로 나눌 수 있을 정도로 내용 차이가 굉장히 크다.<br>하지만 ES6 이후에 나온 책들은 너무 ES6에 대한 설명과 레퍼런스로 가득하다.</p><p>러닝 자바스크립트는 ES6에 집중하기보다는 포함된 입문 서적의 느낌이다.<br>지나치게 ES6가 많지도 않고 너무 적지도 않고 ES6 이외의 내용까지 적절하게 섞여있다.<br>때문에 요즘 JavaScript가 <code>어떤 JavaScript인지 알고 접근할 수 있다.</code></p><p>또한 책 디자인부터 설명까지 세부적인 요소까지 따라주니 지루할 수 없이 술술 익힌다.</p><h3 id="Front-end-맛보기"><a href="#Front-end-맛보기" class="headerlink" title="Front-end 맛보기"></a>Front-end 맛보기</h3><p>Front-end 입문이 가장 어려운 이유는 너무나 빠르게 변하고 없어지기 때문이다.<br>Webpack, Gulp, Git 등 수많은 개발도구에 시달리기에 시작도 전에 지쳐 쓰러질 수가 있다.<br>러닝 자바스크립트에서는 천천히 그리고 꽤나 <code>꼼꼼하게 개발 도구들에 대해서 설명</code>을 해놓았고<br>막상 따라 해보니 초보자들도 쉽게 따라 하며 자신감을 가질 수 있겠다는 생각이 들었다</p><h3 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h3><p>너무나 마음에 드는 책이었다.<br>JavaScript를 입문하려는 사람도 많아졌으며 JavaScript를 통해 개발에 입문하려는 사람도 많아졌다.<br>때문에 누군가에게 자바스크립트에 대한 책을 추천하거나 학습을 추천할 때<br>ES5 이전 버전보다는 차라리 ES6부터 학습을 하길 권장했었는데 이 책이 정말 제격이 아닐까 싶다.</p><blockquote><h3 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h3><ul><li><strong>장점</strong></li></ul><ol><li>입문서까지는 아니지만 처음 JavaScript를 접하는 사람도 쉽게 접근할 수 있다.</li><li>일명 <code>코뿔소</code> <a href="http://book.naver.com/bookdb/book_detail.nhn?bid=10338797" target="_blank" rel="noopener">자바스크립트 완벽 가이드</a>만큼은 방대하지는 않지만 <code>ES6 코뿔소</code>라고 볼 수 있다</li><li>정규표현식, 비동기, NodeJS, jQuery까지 친절히 다룬다.</li><li>챕터 2 자바스크립트 개발 도구 부분이 심플하지만 입문자들에게 도움이 될 것 같다.</li></ol><ul><li><strong>단점</strong></li></ul><ol><li>챕터별로 다르지만 깊이나 설명이 부족한 부분이 간혹 나온다.</li><li>순수하게 ES2015만 다룬다고 기대하면 실망할 수 있다. ES2015 환경 속의 JavaScript 책이다.</li></ol></blockquote><p><strong>이 서평은 한빛미디어를 통해 제공받은 서적을 토대로 작성된 리뷰입니다.</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ES6로 제대로 입문하는 모던 자바스크립트 웹 개발! 러닝 자바스크립트 리뷰&lt;/p&gt;
    
    </summary>
    
      <category term="book" scheme="https://devjang.github.io/categories/book/"/>
    
      <category term="programming" scheme="https://devjang.github.io/categories/book/programming/"/>
    
      <category term="javascript" scheme="https://devjang.github.io/categories/book/programming/javascript/"/>
    
    
      <category term="러닝 자바스크립트" scheme="https://devjang.github.io/tags/%EB%9F%AC%EB%8B%9D-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/"/>
    
      <category term="javascript es6" scheme="https://devjang.github.io/tags/javascript-es6/"/>
    
      <category term="es6 코뿔소" scheme="https://devjang.github.io/tags/es6-%EC%BD%94%EB%BF%94%EC%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>앵귤러 첫걸음</title>
    <link href="https://devjang.github.io/2017/07/14/2017-07-14-first-step-angular/"/>
    <id>https://devjang.github.io/2017/07/14/2017-07-14-first-step-angular/</id>
    <published>2017-07-13T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.865Z</updated>
    
    <content type="html"><![CDATA[<p>개발 환경 설정부터 컴포넌트 테스트까지 다양한 예제로 익히는 Angular! 앵귤러 첫걸음 리뷰!</p><a id="more"></a><hr><blockquote><h3 id="책-정보"><a href="#책-정보" class="headerlink" title="책 정보"></a>책 정보</h3><p>출판사 : 한빛미디어<br>저자 : 조우진<br>출간 : 2017-06-01<br>페이지 : 488<br>ISBN : 9788968486807<br>가격 : 28,000원</p></blockquote><ul><li>자세한 정보<br>: <a href="http://book.naver.com/bookdb/book_detail.nhn?bid=12096305" target="_blank" rel="noopener">http://book.naver.com/bookdb/book_detail.nhn?bid=12096305</a><br>: <a href="http://www.hanbit.co.kr/store/books/look.php?p_code=B3348481708" target="_blank" rel="noopener">http://www.hanbit.co.kr/store/books/look.php?p_code=B3348481708</a></li></ul><h3 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h3><p>이 책은 이미 베타 리딩을 통해 접해본 경험이 있는 책이었다.<br>처음 원고를 보고는 실망을 했었지만 직접 보면서 예제 부분이 맘에 들었던 책으로<br>굉장히 디테일하게 베타 리딩 소감을 전달했던 것이 기억난다.</p><p>일단 한빛에서는 “첫걸음” 이라는 책 제목을 요새 많이 쓰지만 첫걸음으로는 무리가 있다.<br>왜냐하면 요새 앵귤러나 리액트를 공부하려는 경우 개발자들도 많지만<br>퍼블리셔들도 있을 뿐만 아니라 개발을 접하는 입문자들이 다양하기 때문이다.</p><p>때문에 Angular나 React를 위해서는 JavaScript뿐만 아니라<br><code>Webpack, Babel, TypeScript, EcmaScript2015+</code>를 습득해야 하는 데<br>이 책에서는 간단히 부록 형식으로만 다루기 때문이다.</p><p>하지만 기초 수준의 이론을 설명하고 예제로 시작하는 흔한 과정이 아닌<br>예제를 통해 앵귤러를 접할 수 있는 책이다</p><p><code>예제만 잘 따라 하다 보면 어느새 실력이 쌓여있는 것을 볼 수 있을 것이다</code></p><hr><p><img src="https://2.bp.blogspot.com/-OQOscVmk38U/WXSao_OgRVI/AAAAAAAABkY/aaBabX96bAoXClE9h2aglQacqO7iZyylQCK4BGAYYCw/s1600/20170723_213039.jpg" alt="">  </p><ul><li>저자는 도식화에 꽤나 많은 신경을 쓴다</li></ul><hr><h3 id="독특하지만-현실적인-예제-위주의-서적"><a href="#독특하지만-현실적인-예제-위주의-서적" class="headerlink" title="독특하지만 현실적인 예제 위주의 서적"></a>독특하지만 현실적인 예제 위주의 서적</h3><p>베타 리딩을 할 때는 몰랐지만 저자분께서 실제 현업에서 앵귤러를 접하며<br>습득한 것을 알게 되었고 어쩐지 예제가 독특하지만 대충 만든 예제가 아닌 깊이 있는<br>예제들로 빼곡하다는 걸 알 수 있었다.</p><p>보통 Udemy 같은 동영상이나 실제 레퍼런스를 참조하며 공부했었는 데<br>Udemy에서 참신한 예제를 볼 때마다 역시 외국물은 다르구나 생각하고는 했는데</p><p>이 책에 있는 예제들 또한 이에 전혀 뒤처지지 않는다.</p><p>왜냐하면 국내에는 Firebase를 다룬 서적이 아직 없는 걸로 알고 있는 데<br>이 책에서는 Firebase도 다루고있다.<br>물론 굉장히 크게 다루는 건 아니지만<br>Angular와 Firebase는 모두 구글에서 제공하는 서비스와 프레임워크이기 때문에<br>연동하여 학습하기 굉장히 좋다.</p><p>특히 해외에서는 Angular를 학습할 때 Firebase가 빠지지 않고 등장한다</p><p>또한 구조를 도식화하여 자주 설명해준다.<br><code>Componont 구성은 중요하기 때문에 저런 구조를 시각화해서 보여준다는 것은필수라고 볼 수 있다</code></p><hr><p><img src="https://3.bp.blogspot.com/-Vn2j8CtofLs/WXSb1q4ur9I/AAAAAAAABkk/G3T1QA5Keg0At3ulPzXxRe4t9HNQ4dq_ACK4BGAYYCw/s1600/20170723_213100.jpg" alt=""></p><ul><li>코드를 알아보는 데에 불편함이 없었다.</li></ul><hr><h3 id="기초와-입문을-프로젝트를-통해-경험한다"><a href="#기초와-입문을-프로젝트를-통해-경험한다" class="headerlink" title="기초와 입문을 프로젝트를 통해 경험한다"></a>기초와 입문을 프로젝트를 통해 경험한다</h3><p>입문 또는 기초를 위해서라면 어쩔 수 없이 ES6, TypeScript, JavaScript 등등<br>배워야 하는 건 산더미이다.</p><p>하지만 “앵귤러 첫걸음”과 함께라면 믿고 예제 위주로 습득을 하며<br>필요하거나 헷갈리는 부분을 찾아가며 공부하는 것도 굉장히 효율적이며<br>빠르다고 생각이 든다.</p><p>어떻게 사전 학습 없이 앵귤러를 공부 할 수 있을까?<br>싶지만 그걸 위해서 지루하게 ES6와 TypeScript의 기초를 습득하다가<br>흥미를 잃기보다는 이렇게 <code>예제 위주로 시작</code>하는 것도<br>충분히 좋은 학습방법이라는 것을 알 수 있다</p><hr><p><img src="https://2.bp.blogspot.com/-YLerNHdzXTw/WXSdj-4sAsI/AAAAAAAABk0/eGh6RqyKGlI6HSwJ4mZKuc3Uu0pavsBJACK4BGAYYCw/s1600/20170723_213121.jpg" alt="">  </p><ul><li>심화 예제가 꽤나 알차다</li></ul><hr><blockquote><h3 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h3><ul><li><strong>장점</strong></li></ul><ol><li>재미있고 참신한 예제가 다양하게 있다.</li><li>국내에 Firebase를 배울만한 책은 없기 때문에 좋은 기회인 것 같다.</li><li>예제마다 도식화에 굉장히 친절하다.</li></ol><ul><li><strong>단점</strong></li></ul><ol><li>TypeScript &amp; ES2015+ 등 기본적인 부분을 모르면 보기는 어려울 것 같다.</li><li>정신없이 타이핑하다 보면 흐름이 끊길 때가 있는 데 구성이 헷갈릴때가많다.</li><li>직접 세팅을 하는 부분도 있으면 좋을 텐데 AngularCLI 환경에서만 실습한다.</li></ol></blockquote><p><strong>이 서평은 한빛미디어를 통해 제공받은 서적을 토대로 작성된 리뷰입니다.</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;개발 환경 설정부터 컴포넌트 테스트까지 다양한 예제로 익히는 Angular! 앵귤러 첫걸음 리뷰!&lt;/p&gt;
    
    </summary>
    
      <category term="book" scheme="https://devjang.github.io/categories/book/"/>
    
      <category term="programming" scheme="https://devjang.github.io/categories/book/programming/"/>
    
      <category term="framework" scheme="https://devjang.github.io/categories/book/programming/framework/"/>
    
    
      <category term="앵귤러 책 추천" scheme="https://devjang.github.io/tags/%EC%95%B5%EA%B7%A4%EB%9F%AC-%EC%B1%85-%EC%B6%94%EC%B2%9C/"/>
    
      <category term="앵귤러 예제책" scheme="https://devjang.github.io/tags/%EC%95%B5%EA%B7%A4%EB%9F%AC-%EC%98%88%EC%A0%9C%EC%B1%85/"/>
    
      <category term="앵귤러 첫걸음" scheme="https://devjang.github.io/tags/%EC%95%B5%EA%B7%A4%EB%9F%AC-%EC%B2%AB%EA%B1%B8%EC%9D%8C/"/>
    
  </entry>
  
  <entry>
    <title>나는 자바스크립트 개발자다 by JSDev.KR &amp; React Korea The 1st MeetUp</title>
    <link href="https://devjang.github.io/2017/03/15/2017-03-15-jsdev-react-1st-meetup/"/>
    <id>https://devjang.github.io/2017/03/15/2017-03-15-jsdev-react-1st-meetup/</id>
    <published>2017-03-14T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.865Z</updated>
    
    <content type="html"><![CDATA[<p>JSDev.KR &amp; React Korea The 1st Meet up 관람기!</p><a id="more"></a><p><img src="https://4.bp.blogspot.com/-ZlVvGtO6A6c/WM1ENtKmX6I/AAAAAAAABd4/41fnzI-FylY-OF5xVQAyYrgfq-vmj4l0wCLcB/s640/20170315_184635.jpg" alt=""></p><hr><!-- TOC --><ul><li><a href="#이종은">이종은</a></li><li><a href="#신정규">신정규</a></li><li><a href="#김종광">김종광</a></li><li><a href="#김동우">김동우</a></li><li><a href="#질의응답시간">질의응답시간</a></li><li><a href="#자바스크립트-개발자-포럼-jsdevkr">자바스크립트 개발자 포럼 (JSDev.KR)</a></li><li><a href="#react-korea-facebook-group">React Korea (Facebook Group)</a></li></ul><!-- /TOC --><hr><h4 id="이종은"><a href="#이종은" class="headerlink" title="이종은"></a>이종은</h4><p><img src="https://2.bp.blogspot.com/-CFnDDWGqhUw/WM0-dAMtK1I/AAAAAAAABdI/B7e4YRv25wcqggrP-QO0z7jNlnBDcvT7ACLcB/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA%2B2017-03-18%2B%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE%2B11.04.17.png" alt=""><br>React Native 번역서의 저자</p><p><img src="https://1.bp.blogspot.com/-w49Ghk0H54E/WM1E8f94z4I/AAAAAAAABeY/UpH0OHy6oncNswXZHXg7_4JWpyUAGJTmACK4B/s640/IMG_20170315_193006.jpg" alt=""></p><p><strong>나는 자바스크립트 개발자다.</strong><br>한 가지 언어로 개발한다면 본인은 자바스크립트로 한다!</p><p><strong>사랑</strong><br>자바스크립트를 안다고 생각하면 안된다!<br>호기심을 가지고 자바스크립트를 알고 이해해야 한다.<br>Kyle Simpson =&gt; You Don’t KnowJS<br>자바스크립트 완벽가이드</p><p><img src="https://4.bp.blogspot.com/-pOhhJrYjWws/WM1GFz29OCI/AAAAAAAABeo/xBnRBpvDQlITGJcYEP0JIvmnwjCO8S6ewCK4B/s1600/IMG_20170315_194325.jpg" alt=""><br>JS 커뮤니티는 그전부터 존재했으니 많은 사랑을 부탁했다.</p><p><strong>커뮤니티란</strong><br>같은 관심과 의식으로 환경을 공유하는 사회 집단이다 or 광장<br>같은 관심사를 가진 누구나 묻고 답하고 나누는 공간이 되었으면 한다.  </p><blockquote><ul><li><strong>나는 커뮤니티를 통해</strong></li></ul><ol><li>질문을 해본 적이 있다</li><li>답변을 해준 적이 있다</li><li>다른 사람이 내가 궁금한 질문을 하는 것을 본 적이 있다.</li></ol></blockquote><blockquote><ul><li><strong>질문 또한 다른 사람에게 도움을 주는 행동이다</strong></li></ul><ol><li>질문은 자세한 정보로 정중하게</li><li>답변은 친절하게</li><li>질문에 답변을 받고 글을 지우지 말자</li></ol></blockquote><hr><h4 id="신정규"><a href="#신정규" class="headerlink" title="신정규"></a>신정규</h4><p><img src="https://1.bp.blogspot.com/-AkAP4KIs8g4/WM0-1bJhP1I/AAAAAAAABdM/IL_z8kAcKW4Uix6zAMPpHKvREDs7zOkQgCLcB/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA%2B2017-03-18%2B%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE%2B11.05.11.png" alt="">  </p><p>React의 JSX에 분노하여 폴리머를 선택하여 개발한 후기를 공유했다.</p><p><img src="https://1.bp.blogspot.com/-7W-2O2yhyEs/WM1GPlzj3OI/AAAAAAAABew/dMGBWuDXND0CF-2PkCJv5RzJL_lNwCpCQCK4B/s1600/IMG_20170315_195055.jpg" alt="">  </p><ul><li><p>문제의식이 무엇인지 생각하자<br>문서? 런타임?</p></li><li><p><strong>충돌 : 종교 전쟁의 시작</strong><br>W3C<br>WHATWG</p></li><li><p>2007~2012<br>HTML5로 양 집단의 정의</p></li><li><p><strong>현재</strong>  </p></li></ul><ol><li>기업이 개발하는 브라우저<br>크롬 / 엣지  </li><li>기업 외 브라우저<br>파이어폭스</li><li>IOS<br>자기의 길을 걷는다</li></ol><ul><li><strong>런타임 플랫폼의 현재</strong>  </li></ul><ol><li>HTML Import</li><li>Shadow DOM</li><li>Custom Elements</li><li>Templates  </li></ol><ul><li><p><strong>Post-mobile era</strong><br><strong>모바일의 미래</strong><br>후진국형 모바일 시장  </p></li><li><p><strong>런타임 플랫폼적 요소 (미래)</strong><br>WebUSB / WebBluetooth / WebMIDI<br>Native Clients<br>WebGL<br>WebAssembly<br>WebPayments<br>Streams<br>RequestldleCallback<br>Passive event listener<br>ResourceHints<br>ImageBitmap<br>MediaRecorder<br>CSS Variable<br><em>모두 크롬북을 만들다 만들어진 것이다</em></p></li><li><p><strong>Web Components</strong><br>HTML Import<br>Shadow DOM<br>Custom Element<br>Templates  </p></li></ul><p><em>하지만 크롬에서만 지원을 해준다</em><br><strong>WebComponent.js</strong><br>polyfill 지원<br>Lite 버전도 있다.</p><p><img src="https://2.bp.blogspot.com/-tyztgUj66EQ/WM1GXnuAHLI/AAAAAAAABfA/71OP0qy534gxvBF1rO34uGW8OPXxCEPhQCK4B/s1600/IMG_20170315_201652.jpg" alt=""><br>우리는 구글신이 만든 걸 가져다 쓰기만 했다는 것을 강조</p><ul><li><strong>Polymer library</strong>  </li></ul><ol><li>HTML5 Component Library</li><li>Web component 기민함</li><li>재사용 가능</li><li>구글의 모든 부분에 담겨있다</li></ol><ul><li><strong>요약</strong></li></ul><ol><li>Polyfill 브라우저가 안되는 부분을 도와준다</li><li>양방향 바인딩</li><li>템플릿 + 스타일 + Component 상속지원(정확하게 말하면 메서드 바인딩)</li><li>직관적인 구조</li></ol><ul><li><strong>장점</strong></li></ul><ol><li>올인원 솔루션  </li><li>WebComponent.js에 공헌  </li><li>Component-driven  </li><li>크롬 부라우저에서는 네이티브 지원</li></ol><ul><li><strong>단점</strong></li></ul><ol><li>크고 무겁다</li><li>DOM Element 의존성 체크 오버헤드</li><li>불안정 (버전업으로 인한 Component 변화가 심하다)</li></ol><ul><li><strong>관련 접근</strong></li></ul><ol><li>Progressive Web App<br>웹을 앱처럼<br>NodeJS에서 Service Worker 오프라인 지원</li><li>PRPL 패턴<br>초기에는 중요한 Component들만 푸시<br>첫 루트를 그림</li></ol><hr><h4 id="김종광"><a href="#김종광" class="headerlink" title="김종광"></a>김종광</h4><p><img src="https://4.bp.blogspot.com/-cnSpipvDCOU/WM0_7lBLlSI/AAAAAAAABdY/iqVSu1US5pwn3K2MMex-L_cd5YVslr8PgCLcB/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA%2B2017-03-18%2B%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE%2B11.10.26.png" alt="">  </p><p><img src="https://4.bp.blogspot.com/-gfUvaaWnyWo/WM1GjvyyrOI/AAAAAAAABfQ/42GvpFpEpecIqA_H0SexSi3PW-3klynFQCK4B/s640/IMG_20170315_203603.jpg" alt=""><br>자투리 시간을 이용하여 VPN을 시도하였으나…. 실패</p><blockquote><ul><li><strong>Ext JS</strong></li></ul><ol><li>Angular나 React와는 다르게 Web Component가 하나 더 있다.</li><li>Grid가 강력하다 (다양한 적용 가능)</li><li>유행이 지난 기술은 분명하다! 하지만 유용한 부분이 아직 존재한다.</li></ol></blockquote><p><img src="https://3.bp.blogspot.com/-BVA-Y4XHxbM/WM1G77IQrkI/AAAAAAAABfg/aNAiCZteNk4Y59QBl4oU0aDmzJWoFU0wACK4B/s640/IMG_20170315_204147.jpg" alt="">  </p><hr><h4 id="김동우"><a href="#김동우" class="headerlink" title="김동우"></a>김동우</h4><p><img src="https://4.bp.blogspot.com/-f4yllHGxxL0/WM1AKRVCQUI/AAAAAAAABdc/Hl4N_bK0x8U5F7cIApYV56Om3y1g2uvVQCLcB/s1600/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA%2B2017-03-18%2B%25E1%2584%258B%25E1%2585%25A9%25E1%2584%2592%25E1%2585%25AE%2B11.11.30.png" alt=""><br><img src="https://3.bp.blogspot.com/-PQctA5sa_AQ/WM1HE_nsTRI/AAAAAAAABfo/szX7z09fVLcswHP7Oje1rV9Foo7qG4EIQCK4B/s640/IMG_20170315_211056.jpg" alt=""><br><img src="https://4.bp.blogspot.com/-CDSrRXezXm8/WM1EcuLCGhI/AAAAAAAABeA/3mmyISe2BbE829NqOiVBUkoZZVcy3W05ACK4B/s640/20170315_192901.jpg" alt="">  </p><ul><li><strong>스타트업 시작</strong><br>비전공으로 시작한 개발자 누군가의 설득에 스타트업을 시작해버렸다..<br>스타트업이 잘 되지 않았다</li></ul><p><img src="https://4.bp.blogspot.com/-v2CfLUUQiX0/WM1HmBoso5I/AAAAAAAABf4/aeSDapak004Zp13-Ns-3vAxkLW8mkMCLACK4B/s1600/IMG_20170315_212220.jpg" alt=""><br>행운아처럼 보이는 뉴비</p><ul><li><strong>스타트업은 모바일앱</strong></li></ul><ol><li>앱을 만들기 시작</li><li>네이티브 역량이 되지 않아 JS모바일 앱 만들기 시작</li><li>Titanium &amp; NodeJS &amp; ParseServer를 시작</li><li>3개월 만에 앱 제작 성공! (이름은 학원 어디가)</li><li>Web 시작 =&gt; React로 시작</li></ol><p><img src="https://2.bp.blogspot.com/-zVPDCvbNdWY/WM1Hf32TjsI/AAAAAAAABfw/IGGpwq3wOGoH0FU9n9H-bi0tdO-oMkV1QCK4B/s1600/IMG_20170315_211024.jpg" alt="">  </p><blockquote><ul><li><strong>JavaScript의 확장성</strong></li></ul><ol><li>데스크탑 : 일렉트론</li><li>게임 : 유니티</li><li>IoT &amp; Robot : NodeBots101, Cylon.JS</li></ol></blockquote><p><img src="https://1.bp.blogspot.com/-YcTU78-u_Fc/WM1HsGPBCcI/AAAAAAAABgA/txa0LmoT0Cow1CbMFpLbD289Bgedp3oUwCK4B/s1600/IMG_20170315_212303.jpg" alt=""><br>잘 만들어졌다고 생각하는 하이브리드 앱</p><hr><h4 id="질의응답시간"><a href="#질의응답시간" class="headerlink" title="질의응답시간"></a>질의응답시간</h4><p><img src="https://1.bp.blogspot.com/-IxALl-QHRXk/WM1LI_TepXI/AAAAAAAABgY/-BPSy6YdArsUkwgi78DUuHvyxYSLfs8XgCLcB/s1600/FB_IMG_1489620037392.jpg" alt=""><br>출처 : 자바스크립트 개발자 포럼</p><hr><ol><li><p><strong>React 네이티브로 IOS &amp; Android 빌드 및 확장성?</strong><br>=&gt; 이종은<br>: 웹이 React로 되어있다면 무조건 React 네이티브가 좋다. React 개발자가 있다면 더 좋다.<br>=&gt; 게스트<br>: 충분히 상관없다. 속도도 괜찮다. 하지만 네이티브 코드가 늘어난다면 React 네이티브를 사용할 이유가 없다.  </p></li><li><p><strong>동적인 기능이나 Page가 많아지면 퍼포먼스가 어떤지 JS코드에 무리가 갈 것 같다.</strong><br>=&gt; 게스트<br>: 페이지가 70개고 D3를 사용했지만 성능적인 이슈를 겪은 적이 없다.<br>=&gt; 이종은<br>: React는 가상DOM에서 바뀐 부분만 변하기 때문에 크게 걱정할 필요는 없다.</p></li><li><p><strong>React 네이티브 팀원 구성이 어떤지 (이종은)</strong><br>=&gt; JS와 ES6를 알면 React를 배울 때 어려운 점이 없다. 구조도 쉬우며 만드는 데 어려움을 느끼지 못했다.</p></li><li><p><strong>모든 걸 자바스크립트로 할 때 김동우님이 뉴비와 단둘히 개발하면서 어떻게 관리해야 할지</strong><br>=&gt; 뉴비는 Java 국비지원에 안드로이드 조금 배운 수준으로 JS 활용하여 아주 작은 TodoList 만들 수 있는 수준이었다.<br>하지만 서로의 위치를 알려주는 어플을 타이타늄을 활용하여 스터디 차원에서 만들어보았다.<br>개인 스터디 2주 시간 부여 / 코드 기여 50%<br>결론적으로 뉴비도 할 수 있지만 IOS &amp; Android에 대한 러닝커브가 심하다  </p></li><li><p><strong>React 네이티브의 JSX 문법을 포기하고 AngularJS를 해왔기때문에 Angular2를 해보려는 데 괜찮은 게 생각하는지 확인받고 싶다</strong><br>=&gt; 게스트<br>: 장단점 명확하다! Angulr는 코드가 잘 분리되어 있다(로직자체가 백엔드 개발자가 접하기 좋다)<br>하지만 React는 그렇지 않다. 뷰에 초점을 둔다면 React &lt;=&gt; 로직이 중요하다면 Angular<br>=&gt; 게스트2<br>: JSX가 싫은 개발자들이 Angular로 넘어가는 데 Polymer를 보고 JSX도 중요하다 생각한다 꾹 참고 써보자<br>=&gt; 이종은<br>: Angular 경험은 없지만 Backbone 경험은 있다. 결국 의식의 흐름에 대한 차이라고 생각한다.<br>Backbone은 데이터를 고민하며 React는 화면에 어떻게 뿌리는 지가 생각한다.<br>이렇게 단순하게 생각하니 생각하기 좋다.</p></li><li><p><strong>JS 개발자분들 중 테스트 코드 작성하시는 분이 얼마나 되는지 궁금하다</strong><br>=&gt; 1 / 10 정도였다.</p></li><li><p><strong>React의 UI 테스트는 어떻게 하나</strong><br>=&gt; 이종은<br>: NodeJS에서 서버사이드 렌더링 후 비교해주는 테스트를 본 적이 있다.<br>UI 테스트는 명확하지가 않으며 너무나 변수가 많다.<br>=&gt; 게스트<br>: Jest라는 것이 있다고 들었다.<br>=&gt; 게스트2<br>: UI 단은 Component Level에서만 할 수 있는 것 같다. E2E는 힘들 것 같다.<br>테스트 코드 작성 시간이 굉장히 오래 걸린다. 하지만 그 테스트 코드로 데모를 하기는 굉장히 좋다.</p></li><li><p><strong>React로 개편을 준비 중인데 SEO서비스가 중요한 서비스이라 고민이 많다.</strong><br>=&gt; 김동우<br>: 검색엔진에 대한 고민을 많이 해봤지만 결론적으로 서버사이드 렌더링이 중요하다.<br>검색엔진은 결국 String이다. 라이브러리 Helmet를 이용해서 세팅해놓으면 다 도와준다.<br>구글은 화면까지 읽어주고 네이버는 Meta TAG까지 읽어주더라.<br>Helmet만 이용하면 고민이 없다.</p></li><li><p><strong>React Router 3 to 4 넘어가면서 변화가 너무 많은 데 서버사이드 렌더링을 어떻게 하는 것이 좋은지</strong><br>=&gt; 게스트<br>: React Korea에 Tip을 올렸었는데 Redux를 사용해서 Ajax의 Promise를 담았다가<br>Store에 넣은 다음에 렌더링에 전달해주는 방식을 사용했었다.<br>=&gt; 김동우<br>: Redux를 Connect를 사용하였다.</p></li></ol><hr><p><img src="https://2.bp.blogspot.com/-3wvzP0KqWog/WM1ItVJN-LI/AAAAAAAABgM/muyb6jkyjOA7awhgP2ktOxrqGbZk-_lCgCK4B/s400/IMG_20170315_190240.jpg" alt=""><br>맛있었던 샌드위치</p><hr><h4 id="자바스크립트-개발자-포럼-JSDev-KR"><a href="#자바스크립트-개발자-포럼-JSDev-KR" class="headerlink" title="자바스크립트 개발자 포럼 (JSDev.KR)"></a>자바스크립트 개발자 포럼 (JSDev.KR)</h4><p>자바스크립트 개발자 포럼은 JS, Parse, React, Titanium 등 다양한 주제로 포럼을 운영하고 있습니다.<br>자바스크립트에 관심 있는 개발자라면 누구나 참여 가능합니다.<br><a href="https://jsdev.kr" target="_blank" rel="noopener">https://jsdev.kr</a></p><h4 id="React-Korea-Facebook-Group"><a href="#React-Korea-Facebook-Group" class="headerlink" title="React Korea (Facebook Group)"></a>React Korea (Facebook Group)</h4><p>React Korea는 국내외 React 소식과 팁을 공유할 뿐만 아니라 질의응답도 가능한 자유로운 공간입니다.<br><a href="https://www.facebook.com/groups/react.ko" target="_blank" rel="noopener">https://www.facebook.com/groups/react.ko</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JSDev.KR &amp;amp; React Korea The 1st Meet up 관람기!&lt;/p&gt;
    
    </summary>
    
      <category term="conference" scheme="https://devjang.github.io/categories/conference/"/>
    
    
      <category term="react" scheme="https://devjang.github.io/tags/react/"/>
    
      <category term="김동우" scheme="https://devjang.github.io/tags/%EA%B9%80%EB%8F%99%EC%9A%B0/"/>
    
      <category term="김종광" scheme="https://devjang.github.io/tags/%EA%B9%80%EC%A2%85%EA%B4%91/"/>
    
      <category term="나는 자바스크립트 개발자다" scheme="https://devjang.github.io/tags/%EB%82%98%EB%8A%94-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%8B%A4/"/>
    
      <category term="신정규" scheme="https://devjang.github.io/tags/%EC%8B%A0%EC%A0%95%EA%B7%9C/"/>
    
      <category term="이종은" scheme="https://devjang.github.io/tags/%EC%9D%B4%EC%A2%85%EC%9D%80/"/>
    
      <category term="자바스크립트 개발자 포럼" scheme="https://devjang.github.io/tags/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EA%B0%9C%EB%B0%9C%EC%9E%90-%ED%8F%AC%EB%9F%BC/"/>
    
      <category term="angular" scheme="https://devjang.github.io/tags/angular/"/>
    
      <category term="JSDev.KR" scheme="https://devjang.github.io/tags/JSDev-KR/"/>
    
      <category term="React Korea" scheme="https://devjang.github.io/tags/React-Korea/"/>
    
  </entry>
  
  <entry>
    <title>만약 헤밍웨이가 자바스크립트로 코딩한다면</title>
    <link href="https://devjang.github.io/2017/02/24/2017-02-24-js-book/"/>
    <id>https://devjang.github.io/2017/02/24/2017-02-24-js-book/</id>
    <published>2017-02-23T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.865Z</updated>
    
    <content type="html"><![CDATA[<p>만약 헤밍웨이가 자바스크립트로 코딩한다면 피보나치, 팩토리얼, 행복수, 소수, 메서드 체인에 대한 문학 거장들의 기발한 해법 리뷰!</p><a id="more"></a><hr><blockquote><h3 id="책-정보"><a href="#책-정보" class="headerlink" title="책 정보"></a>책 정보</h3><p>출판사 : 한빛미디어<br>저자 : 앵거스 크롤<br>역자 : 김나솔<br>출간 : 2016-11-14<br>페이지 : 196<br>ISBN : 9788968484742<br>가격 : 19,000원</p></blockquote><ul><li>자세한 정보<br>: <a href="http://book.naver.com/bookdb/book_detail.nhn?bid=11213895" target="_blank" rel="noopener">http://book.naver.com/bookdb/book_detail.nhn?bid=11213895</a><br>: <a href="http://www.hanbit.co.kr/store/books/look.php?p_code=B7118865707" target="_blank" rel="noopener">http://www.hanbit.co.kr/store/books/look.php?p_code=B7118865707</a></li></ul><h3 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h3><p>프로그래밍이 화두인 만큼 그에 따라 굉장히 다양한 스타일의 서적이 늘어나고 있다.</p><blockquote><p>ex.<br>Bible, Cookbook, 입문서부터 고급서, 개발 프로세스, 라이브러리 or 프레임워크 가이드 등등</p></blockquote><p>이 책은 그중에서도 가장 눈에 띄지 않을까 싶다.<br>그 이유로는 제목부터 표지 그리고 책 한 장 한 장 어느 하나 눈에 띄지 않는 곳이 없으며<br>이런 튀는 요소 속에 다양한 문학 거장들을 JavaScript로 표현해내는 <code>재미있는 책</code>이다.<br>기술적으로는 피보나치, 팩토리얼 등 기술적인 부분도 놓치지 않으려 한다.</p><p>이 책의 흐름은 이렇다.</p><ol><li>작가의 프로필</li><li>작가의 작품 설명이나 성장배경 등 스토리</li><li>작가의 스타일에 맞춘 재미있는 코드</li></ol><p>한결같은 흐름이지만 다양한 개성의 25명의 문학 작가들을 모두 담아냈고<br>그에 따른 <code>다양한 개성의 코드들</code>을 볼 수 있다.  </p><h3 id="한-권의-책으로-다양한-코드-스타일을-맛보다"><a href="#한-권의-책으로-다양한-코드-스타일을-맛보다" class="headerlink" title="한 권의 책으로 다양한 코드 스타일을 맛보다"></a>한 권의 책으로 다양한 코드 스타일을 맛보다</h3><p>보통의 개발 서적은 언어 또는 시대적인 권장 코딩 스타일 혹은<br>작가의 스타일에 따라 책에 담겨있는 코드가 다르다.<br>한마디로 한 권의 책에서 다양한 스타일의 코드를 본다는 것은 굉장히 드문 일이다.</p><p>이 책에서는 개성이 강한 다양한 작가들을 JavaScript 코드로 설명하려 하기 때문에<br>다양한 JavsScript의 코드를 이 얇은 한 권의 책으로 맛볼 수 있다.<br><code>뭐 이런 병맛같은 코드가 다 있지...생각이 들때도 있다.</code></p><p>또한 책 디자인부터 설명까지 세부적인 요소까지 따라주니 지루할 수 없이 술술 익힌다.</p><h3 id="재미에-비하여-부족한-설명"><a href="#재미에-비하여-부족한-설명" class="headerlink" title="재미에 비하여 부족한 설명"></a>재미에 비하여 부족한 설명</h3><p>다양한 개성을 코드로 담으려다 보니 변수명조차 <code>이해가기 힘든 코드가 많았다.</code><br>(절대 쉬운 책은 아니다)<br>챕터 별로 코드에 대한 설명이 부족하거나 또는 충분하거나 격차가 많이 있었기 때문이다.<br>해당 챕터에 해당하는 작가의 작품에 대해 알거나 이해도가 있다면 재미가 더해지지 않을까 싶다</p><p>위에서 술술 읽힌다고 했지만 이것은 어디까지나 내용에 대한 이야기이고<br>코드 같은 경우에는 JavaScript의 이해도가 있는 개발자들에게나 해당되는 이야기이다.<br>아직 JavaScript 기초가 부족하신 분들에게는 힘들 수 가있다.</p><blockquote><h3 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h3><ul><li><strong>장점</strong></li></ul><ol><li>JavaScript의 다양한 코드들과 알고리즘을 부담 없이 재미있게 접할 수 있다.</li><li>보는 눈이 즐거울 정도로 책의 디자인이나 구성이 흥미롭다.</li><li>인문학적 요소 &amp; 알고리즘 기법 &amp; JavaScript 삼박자가 어우러진다</li></ol><ul><li><strong>단점</strong></li></ul><ol><li>가격이 저렴하지는 않다.</li><li>분량이 아쉽다. 타이핑을 하지 않고 훑어보면 1시간 내에 다 볼 수 있다.</li></ol></blockquote><p><strong>이 서평은 한빛미디어를 통해 제공받은 서적을 토대로 작성된 리뷰입니다.</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;만약 헤밍웨이가 자바스크립트로 코딩한다면 피보나치, 팩토리얼, 행복수, 소수, 메서드 체인에 대한 문학 거장들의 기발한 해법 리뷰!&lt;/p&gt;
    
    </summary>
    
      <category term="book" scheme="https://devjang.github.io/categories/book/"/>
    
      <category term="programming" scheme="https://devjang.github.io/categories/book/programming/"/>
    
      <category term="javascript" scheme="https://devjang.github.io/categories/book/programming/javascript/"/>
    
    
      <category term="만약 헤밍웨이가 자바스크립트로 코딩한다면" scheme="https://devjang.github.io/tags/%EB%A7%8C%EC%95%BD-%ED%97%A4%EB%B0%8D%EC%9B%A8%EC%9D%B4%EA%B0%80-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A1%9C-%EC%BD%94%EB%94%A9%ED%95%9C%EB%8B%A4%EB%A9%B4/"/>
    
      <category term="javascript 인문학" scheme="https://devjang.github.io/tags/javascript-%EC%9D%B8%EB%AC%B8%ED%95%99/"/>
    
      <category term="알고리즘" scheme="https://devjang.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
  </entry>
  
  <entry>
    <title>인사이드 자바스크립트</title>
    <link href="https://devjang.github.io/2017/02/10/2017-02-10-js-book/"/>
    <id>https://devjang.github.io/2017/02/10/2017-02-10-js-book/</id>
    <published>2017-02-09T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.865Z</updated>
    
    <content type="html"><![CDATA[<p>핵심 개념과 원리를 정확하게 jQuery Node.js 클로저의 개념까지! 리뷰!</p><a id="more"></a><hr><blockquote><h3 id="책-정보"><a href="#책-정보" class="headerlink" title="책 정보"></a>책 정보</h3><p>출판사 : 한빛미디어<br>역자 : 송형주, 고현준<br>출간 : 2014-01-12<br>페이지 : 284<br>ISBN : 9788968480652<br>가격 : 18,000원</p></blockquote><ul><li>자세한 정보<br>: <a href="http://book.naver.com/bookdb/book_detail.nhn?bid=7400243" target="_blank" rel="noopener">http://book.naver.com/bookdb/book_detail.nhn?bid=7400243</a></li></ul><h3 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h3><p>JavaScript 입문 도서로 자주 언급되지만 개인적으로는 절대 아니라고 생각한다.<br>또한 JavaScript의 모든 부분을 설명하고 있는 책도 아니다.<br>필자는 기초가 부족한 상태에서 읽어서 굉장히 어렵기도 했고<br>결국 자신의 JavaScript 수준을 판단하고 부족한 점이 무엇인지 알 수 있는 책이었다.<br>아마 소개를 굳이 할 필요 없이 필자가 느낀 책의 방향과 저자가 소개하는 책의 코멘트와<br>정확히 일치하기 때문에 밑에 그대로 긁어왔다.</p><blockquote><p>이 책의 목적은 자바스크립트의 핵심 원리, 언어적 특성을 정확하고 알기 쉽게 설명하는 것이다.<br>물론 이 책이 자바스크립트의 모든 것을 다룬 바이블은 아니다.<br>그러나 자바스크립트를 제대로 공부하고자 하는 개발자에게 여러 자바스크립트 응용 기술들을 소화할 수 있는<br>기초 체력을 기를 수 있게 도와주는 좋은 가이드가 될 것이다.[인터넷 교보문고 제공]</p></blockquote><h3 id="알차고-또-알찬-굉장한-개념서"><a href="#알차고-또-알찬-굉장한-개념서" class="headerlink" title="알차고 또 알찬 굉장한 개념서"></a>알차고 또 알찬 굉장한 개념서</h3><p>이 책의 방식은 굉장히 일관적이기 때문에 때로는 지루하기까지 하다.</p><ol><li>해당 개념 설명</li><li>예제 코드 제공</li><li>예제 코드 리뷰</li><li>예제 코드 그림으로 설명</li></ol><p>개념 설명이 자세하며 학습에 도움이 되는 예제 코드가 많다.<br>웬만하면 이 책의 예제를 모두 이해하고 넘어가는 것이 좋다고 생각한다<br><code>(하지만 Legacy 코드도 많다)</code><br>만약 이해가 되지 않는다면 이해하도록 노력하고 잘 이해되더라도<br>꼭 예제 타이핑을 해보는 것이 좋다고 생각된다.</p><p>또한 이 책의 저자는 JavaScript의 모든 부분을 담지 않는 대신 어느 부분이<br>정말 중요한지 잘 알고 그 개념과 예제들을 책에 가득 채워주었고 이해시켜주려 노력한다.</p><h3 id="JavaScript는-너무-빠르게-변하고-있다-amp-NodeJS는-어디에"><a href="#JavaScript는-너무-빠르게-변하고-있다-amp-NodeJS는-어디에" class="headerlink" title="JavaScript는 너무 빠르게 변하고 있다. &amp; NodeJS는 어디에?"></a>JavaScript는 너무 빠르게 변하고 있다. &amp; NodeJS는 어디에?</h3><p>당장 이 책의 예제가 좋으니 타이핑하며 보라고 추천했지만 최신 코드는 아니다.<br>현재 ECMAScript2015+가 나온지 오래된 상황인데 <code>이 책은 ES3</code>로 추정된다.<br>아마 14년에 나온 책이라고 하지만 거의 13년도에 나왔다고 봐도 된다.<br>약간은 아쉬운 부분이다.</p><p>또한 NodeJS에 대하여 배울 수 있다는 느낌을 주는 제목이지만<br><code>NodeJS 내용은 거의 없다</code>고 봐도 된다.<br>jQuery를 원하는 독자도 jQuery 분량은 굉장히 적으니 기대하면 실망이 크다.<br>(대신 jQuery에 대하여 깊게 파고들어 설명해주는 데 내용이 좋다)</p><blockquote><h3 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h3><ul><li><strong>장점</strong></li></ul><ol><li>JavaScript를 입문을 통해 기초적인 학습을 한 후 개념을 한번 다시 돌아보기 좋은 개념서</li><li>책의 분량이나 두께에 비해 내용이 알차고 부족함이 없어 휴대하며 읽기도 좋다.</li><li>깊게 파고들며 공부하는 스타일에 굉장히 알맞춤이다 깊게 들어가기 때문에 개념 확립에 도움이 된다</li></ol><ul><li><strong>단점</strong></li></ul><ol><li>입문서로 추천되지만 어렵다.</li><li>제목과는 다르게 NodeJS 내용이 거의 없다.</li><li>오래된 코드다. ES3</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;핵심 개념과 원리를 정확하게 jQuery Node.js 클로저의 개념까지! 리뷰!&lt;/p&gt;
    
    </summary>
    
      <category term="book" scheme="https://devjang.github.io/categories/book/"/>
    
      <category term="programming" scheme="https://devjang.github.io/categories/book/programming/"/>
    
      <category term="javascript" scheme="https://devjang.github.io/categories/book/programming/javascript/"/>
    
    
      <category term="인사이드 자바스크립트" scheme="https://devjang.github.io/tags/%EC%9D%B8%EC%82%AC%EC%9D%B4%EB%93%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/"/>
    
  </entry>
  
  <entry>
    <title>W3C HTML5 대한민국 관심그룹 45차회의</title>
    <link href="https://devjang.github.io/2017/01/24/2017-01-24-w3c-html5-45/"/>
    <id>https://devjang.github.io/2017/01/24/2017-01-24-w3c-html5-45/</id>
    <published>2017-01-23T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.864Z</updated>
    
    <content type="html"><![CDATA[<p>HTML5 대한민국 관심그룹 45차회의 React와 Meteor 활용 관람기</p><a id="more"></a><hr><!-- TOC --><ul><li><a href="#react-기반-앱-개발-방법-김대성님">React 기반 앱 개발 방법 (김대성님)</a></li><li><a href="#meteorjs--cordova-하이브리드-앱-개발-meteorjs-startup-진정원-cto">Meteor.js + Cordova, 하이브리드 앱 개발 (Meteor.js Startup 진정원 CTO)</a></li></ul><!-- /TOC --><hr><p><img src="https://3.bp.blogspot.com/-jO4ANbTWwd0/WKsTwnPM9kI/AAAAAAAABZ8/5evLp0gMCP8JMxOR4BWEqdLqrbLj01BJgCLcB/s640/react.png" alt=""></p><h4 id="React-기반-앱-개발-방법-김대성님"><a href="#React-기반-앱-개발-방법-김대성님" class="headerlink" title="React 기반 앱 개발 방법 (김대성님)"></a>React 기반 앱 개발 방법 (김대성님)</h4><p>야후 -&gt; 삼성 -&gt; React 공부를 하고 있다. </p><blockquote><ul><li><strong>React</strong></li></ul><ol><li>프레임워크 X -&gt; View를 위한 JavaScript 라이브러리(MVC의 V는 아님) </li><li>하지만 View를 제외한 나머지 영역은 개발자의 몫 </li><li>Flux / Redux / RxJS / GraphQL / Relay / Apollo과 연동<br><em>MVVM에서 View Layer만 담당한다</em></li></ol></blockquote><p><img src="https://3.bp.blogspot.com/-lqGoIA4AWVo/WKsUHAU9-xI/AAAAAAAABaA/SxZmyxmkOcImPH8LhCxL2DifnHZSykUFwCLcB/s1600/figure1.png" alt="">  </p><ul><li><strong>Component</strong></li></ul><ol><li>View를 표시하고 조작하는 JavaScript Class</li><li>JSX를 활용한다 -&gt; Babel을 통해 변한된다 - 단일 Root노드, 계층구조</li></ol><ul><li><strong>Component Lifecycle</strong><br>초기화 -&gt; 상태 변경 -&gt; Unmount</li></ul><ul><li><strong>Props</strong></li></ul><ol><li>Component 초기설정</li><li>Readonly : 계층을 생성한다</li><li>defaultValue 정의가능 : propsTyes를 통해 Interface 대체가능</li><li>변수에 할당하거나 다른 Component에서 사용가능</li></ol><ul><li><strong>State</strong></li></ul><ol><li>동적인 Components 상태를 객체로 정의<br>ex) this.state</li><li>React의 데이터를 관리한다.</li></ol><ul><li><strong>만들기</strong></li></ul><ol><li>Static View 구현</li><li>계층구조확인 </li><li>자식 Component에 제공할 props정의</li><li>render() 완성</li><li>완성된 view확인</li><li>Component계층 구조 검증</li><li>View Update 구현</li><li>Unit 테스트 확인</li></ol><blockquote><ul><li><strong>요약</strong></li></ul><ol><li>디자인부터 분석할 필요가 있다.</li><li>정적인 마크업파일과 CSS준비</li><li>정적인 React Component 준비</li><li>Props &amp; State 결정</li><li>Component 계층화</li></ol></blockquote><hr><h4 id="Meteor-js-Cordova-하이브리드-앱-개발-Meteor-js-Startup-진정원-CTO"><a href="#Meteor-js-Cordova-하이브리드-앱-개발-Meteor-js-Startup-진정원-CTO" class="headerlink" title="Meteor.js + Cordova, 하이브리드 앱 개발 (Meteor.js Startup 진정원 CTO)"></a>Meteor.js + Cordova, 하이브리드 앱 개발 (Meteor.js Startup 진정원 CTO)</h4><blockquote><ul><li><strong>Meteor.js 플랫폼 개발환경 소개 </strong></li></ul><ol><li>Meteor는 쉽게 접근하여 배울 수 있다. </li><li>Meteor는 Angular &amp; Ionic과 연동하여 사용할 수 있다. 프레임워크는 아니다</li><li>전 영역에서 JavsScript 단 한가지 언어만 사용한다.</li><li>NodeJS &amp; MongoDB &amp; BSON &amp; Cordova 사용</li><li>Meteor + Ionic = meteoric</li></ol></blockquote><p><img src="https://1.bp.blogspot.com/-E83m6P-cANU/WKsUfzXrVTI/AAAAAAAABaI/4dcj9Fy-oNYlaLV2B5MEUHoX-oI61MJEQCLcB/s640/%25E1%2584%2589%25E1%2585%25B3%25E1%2584%258F%25E1%2585%25B3%25E1%2584%2585%25E1%2585%25B5%25E1%2586%25AB%25E1%2584%2589%25E1%2585%25A3%25E1%2586%25BA%2B2017-02-21%2B%25E1%2584%258B%25E1%2585%25A9%25E1%2584%258C%25E1%2585%25A5%25E1%2586%25AB%2B1.08.06.png" alt=""></p><ul><li><strong>장점</strong></li></ul><ol><li>DDP와 웹소켓을 사용하여 리프레시가 빠르다</li><li>리액티브를 기반으로 동기화하여 DB의 변화를 감지한다</li></ol><ul><li><strong>단점</strong></li></ul><ol><li>한글 자료와 문서가 거의 없다.</li><li>리액티브 남발시 리소스 낭비가 너무 심하다. 업데이트가 빠르다 (장점이기도 하다) </li></ol><ul><li><p><strong>하이브리드 프레임워크란</strong><br>Ionic / Framework7<br>Mobile AngularUI / OnsenUI Sent Touch / Famo.us<br>DUNAMIS / Antena -&gt; XML 사장되었다 (변화대응 실패 / 자유롭지 않다)<br>Cordova</p></li><li><p><strong>하이브리드 장점</strong>  </p></li></ul><ol><li>한가지로 여러가지 플랫폼  </li><li>Configuration Less  </li><li>Server Framework -&gt; 설정이 없다.</li></ol><ul><li><strong>하이브리드 단점</strong>  </li></ul><ol><li>네이티브의 기능을 모두 수용하려면 굉장히 힘들다</li><li>Limited Component / Functionality -&gt; 제한된 컴포넌트와 제한된 기능<br>(특히 안드로이드는 다양한 제조사로 인하여 애로상황이 많다)</li><li>Data Binding (클라이언트 &amp; 서버에서 추적관리가 가능하다) 흔하게 쓰지 않는 기능들은 Bug가 많다.</li></ol><hr><p><img src="https://3.bp.blogspot.com/-gxQFEDSYGE4/WKsTkttq-QI/AAAAAAAABZ4/2b4oFo6MRTAXQMaqEaB4plBvQigVZpDVwCLcB/s400/w3c_wonsuk.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTML5 대한민국 관심그룹 45차회의 React와 Meteor 활용 관람기&lt;/p&gt;
    
    </summary>
    
      <category term="conference" scheme="https://devjang.github.io/categories/conference/"/>
    
    
      <category term="hybrid framework" scheme="https://devjang.github.io/tags/hybrid-framework/"/>
    
      <category term="meteor" scheme="https://devjang.github.io/tags/meteor/"/>
    
      <category term="react" scheme="https://devjang.github.io/tags/react/"/>
    
      <category term="W3C HTML5" scheme="https://devjang.github.io/tags/W3C-HTML5/"/>
    
      <category term="W3C HTML5 대한민국" scheme="https://devjang.github.io/tags/W3C-HTML5-%EB%8C%80%ED%95%9C%EB%AF%BC%EA%B5%AD/"/>
    
      <category term="W3C HTML5 대한민국 관심그룹 45차회의" scheme="https://devjang.github.io/tags/W3C-HTML5-%EB%8C%80%ED%95%9C%EB%AF%BC%EA%B5%AD-%EA%B4%80%EC%8B%AC%EA%B7%B8%EB%A3%B9-45%EC%B0%A8%ED%9A%8C%EC%9D%98/"/>
    
  </entry>
  
  <entry>
    <title>누구나 쉽게 배우는 자바스크립트</title>
    <link href="https://devjang.github.io/2017/01/20/2017-01-20-js-book/"/>
    <id>https://devjang.github.io/2017/01/20/2017-01-20-js-book/</id>
    <published>2017-01-19T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.864Z</updated>
    
    <content type="html"><![CDATA[<p>놀면서 배우는 프로그래밍! 누구나 쉽게 배우는 자바스크립트 리뷰!</p><a id="more"></a><hr><blockquote><h3 id="책-정보"><a href="#책-정보" class="headerlink" title="책 정보"></a>책 정보</h3><p>출판사 : 비제이퍼블릭<br>저자 : 닉 모건<br>역자 : 김태곤, 이미령<br>출간 : 2015-09-16<br>페이지 : 320 쪽<br>ISBN : 9791186697030<br>가격 : 28,000원</p></blockquote><ul><li>자세한 정보<br>: <a href="http://book.naver.com/bookdb/book_detail.nhn?bid=9530957" target="_blank" rel="noopener">http://book.naver.com/bookdb/book_detail.nhn?bid=9530957</a></li></ul><h3 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h3><p>JavasScript 입문서 그 자체이지만 부담 없는 책이라고 설명할 수 있다.<br>일단 추천할 수 있는 부분은 이 책의 역자가 김태곤 님과 이미령 님이라는 것이며<br>특히 독자의 이해를 위해 변수명과 코드에도 한글이 많다는 점이 특이했다.<br><code>100% 풀 컬러</code>책이면서 다양한 그림으로 이해를 돕기 때문에 흥미 유발과 동기부여 효과가 있다.<br>(해외 원판은 Kids용 책이라는 데 어린아이가 보기에는 어려울 것 같다.)</p><h3 id="프로그래밍-개발-을-완전히-처음-접하는-책으로는-최고의-입문서"><a href="#프로그래밍-개발-을-완전히-처음-접하는-책으로는-최고의-입문서" class="headerlink" title="프로그래밍! 개발!을 완전히 처음 접하는 책으로는 최고의 입문서"></a>프로그래밍! 개발!을 완전히 처음 접하는 책으로는 최고의 입문서</h3><p>이 책에는 JavsScript가 주인공이지만 HTML &amp; CSS &amp; jQuery를 살짝 맛보게 한 후<br>간단한 동작의 시각적인 예제를 할 수 있도록 유도한다.<br>그뿐만 아니라 앞서 설명했듯이 책 자체에 굉장히 이해 요소가 필요하지 않을 정도로 쉬운 컨텐츠를 가득하게 채웠다.<br>뿐만 아니라 객체와 함수 등 개념이 중요한 부분을 대충 넘어가지 않았다.</p><p>그리고 앞서 언급했듯이 100% 풀컬러이며 재미있는 예제도 많이 존재한다.<br>특히 <code>시각적인 예제</code>가 대부분이기때문에 재미와 흥미 유발에는 학습효과가 확실하다</p><h3 id="입문서로는-좋으나-이-한권으로"><a href="#입문서로는-좋으나-이-한권으로" class="headerlink" title="입문서로는 좋으나 이 한권으로?"></a>입문서로는 좋으나 이 한권으로?</h3><p>그렇다. 이 책으로 개발에 입문한다면 정말 산뜻하고 쉽게 시작할 수 있을 것이다.<br>하지만 분량에 비하여 가격은 착하지 않다.<br>거기다가 간단하게라도 <code>서비스적인 요소의 예제가 없다</code>보니<br>그런 부분을 기대한 독자들에게는 부족할 수밖에 없다.</p><p>확실히 해외에서는 Kids용으로 존재하는 책이기때문에 같은 입문자(또는 초보자)여도 호불호가 갈릴 수 있다.</p><blockquote><h3 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h3><ul><li><strong>장점</strong></li></ul><ol><li>개발에 입문해보고 싶지만 부담감과 어려움에 시작을 못하는 입문자에게 흥미 유발을 시킬 수 있다.</li><li>100% 풀컬러에 한글을 활용하는 코드가 많기 때문에 거부감이 없다.</li><li>UI 및 캔버스를 활용한 예제가 많아 동기부여가 된다.</li></ol><ul><li><strong>단점</strong></li></ul><ol><li>Kids용으로 나온 책이기 때문에 책의 구성이 낯설고 포지션이 애매하게 느껴진다.</li><li>서비스적인 요소의 예제는 존재하지 않는다.</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;놀면서 배우는 프로그래밍! 누구나 쉽게 배우는 자바스크립트 리뷰!&lt;/p&gt;
    
    </summary>
    
      <category term="book" scheme="https://devjang.github.io/categories/book/"/>
    
      <category term="programming" scheme="https://devjang.github.io/categories/book/programming/"/>
    
      <category term="javascript" scheme="https://devjang.github.io/categories/book/programming/javascript/"/>
    
    
      <category term="누구나 쉽게 배우는 자바스크립트" scheme="https://devjang.github.io/tags/%EB%88%84%EA%B5%AC%EB%82%98-%EC%89%BD%EA%B2%8C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/"/>
    
      <category term="자바스크립트 입문 책" scheme="https://devjang.github.io/tags/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%9E%85%EB%AC%B8-%EC%B1%85/"/>
    
      <category term="javascript 입문" scheme="https://devjang.github.io/tags/javascript-%EC%9E%85%EB%AC%B8/"/>
    
      <category term="Javascript for kids" scheme="https://devjang.github.io/tags/Javascript-for-kids/"/>
    
  </entry>
  
  <entry>
    <title>GDG DEVFEST 2016 @Seoul Univ GCP</title>
    <link href="https://devjang.github.io/2016/11/05/2016-11-05-gdg-devfest-seoul-2016/"/>
    <id>https://devjang.github.io/2016/11/05/2016-11-05-gdg-devfest-seoul-2016/</id>
    <published>2016-11-04T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.864Z</updated>
    
    <content type="html"><![CDATA[<p>GDG DEVFEST 2016 관람 후기!!<br><a id="more"></a></p><!-- TOC --><ul><li><a href="#행사정보">행사정보</a></li><li><a href="#행사장-방문">행사장 방문</a></li><li><a href="#boot-camp--초보개발자들을-위한-웹-프론트엔드-개발-101-0">Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #0</a></li><li><a href="#boot-camp--초보개발자들을-위한-웹-프론트엔드-개발-101-1">Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #1</a></li><li><a href="#boot-camp--초보개발자들을-위한-웹-프론트엔드-개발-101-2">Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #2</a></li></ul><!-- /TOC --><hr><h4 id="행사정보"><a href="#행사정보" class="headerlink" title="행사정보"></a>행사정보</h4><p><img src="https://1.bp.blogspot.com/-WBAGrmzf6xU/WCXcHn2hfOI/AAAAAAAAAy8/fyNmfrYyROYSoCnOiphOlnm8nLjttU6twCLcB/s1600/1.png" alt=""><br><img src="https://3.bp.blogspot.com/-zUed2GuSD2c/WCXcZwEzEFI/AAAAAAAAAzA/H3PoiAtEqxYy7v4RY-btupK7XDWN0JgZACLcB/s1600/2.png" alt=""><br><img src="https://2.bp.blogspot.com/-cRgmXMfvDNs/WCXc-iTkBzI/AAAAAAAAAzE/2w8FAEpHtwUsONkLson68C2FJn-8LlVyQCLcB/s1600/3.png" alt=""><br>Boot Camp: 초보개발자들을 위한 웹 프론트엔드 개발 101<br>Angular2 어디까지 왔을까<br>Firebase<br>특히 인기가 많았던 걸로 기억이난다.</p><p><img src="https://3.bp.blogspot.com/-ukgw1WyPYJQ/WCXdGhkFRtI/AAAAAAAAAzI/RBHMpyal2-QeAVzmtHUN3EH5yMnDd5-SgCLcB/s1600/4.png" alt=""><br><img src="https://1.bp.blogspot.com/-PKB-bOEuILc/WCXda5jxdTI/AAAAAAAAAzM/HoQzJbhN1n83gkan8UbGO-72tPCJpDlwwCLcB/s1600/5.png" alt=""></p><h4 id="행사장-방문"><a href="#행사장-방문" class="headerlink" title="행사장 방문"></a>행사장 방문</h4><p><img src="https://2.bp.blogspot.com/-M1SeDk0cvX0/WCXeBfZo8gI/AAAAAAAAAzQ/Lg9i7moF-P8EcVe3IsBpmfejrK_fPhPcgCLcB/s1600/20161105_134643.jpg" alt=""><br><img src="https://2.bp.blogspot.com/-gdmZkcBfGyE/WCXeNwriHpI/AAAAAAAAAzY/iXQrX72gfUMuGulX2qiZvAlZvC_U3pvigCLcB/s1600/20161105_134735.jpg" alt=""><br><img src="https://3.bp.blogspot.com/-q-lKpPuhEf8/WCXezlhCm-I/AAAAAAAAAzc/miIs1BCQeycC34Wc8p3t1_zDgdTdGJp5gCLcB/s1600/20161105_161149.jpg" alt=""><br><img src="https://4.bp.blogspot.com/-pxV1vYGHRxo/WCXe-Jft_LI/AAAAAAAAAzg/h1ZZH9eiZRIlhbt4thAFO8kHyHYiOtkTACLcB/s1600/20161105_161112.jpg" alt=""><br>자리가 없던 세션..</p><hr><h4 id="Boot-Camp-초보개발자들을-위한-웹-프론트엔드-개발-101-0"><a href="#Boot-Camp-초보개발자들을-위한-웹-프론트엔드-개발-101-0" class="headerlink" title="Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #0"></a>Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #0</h4><p>사실 이전에 진행이 된 ServiceWorker도 보긴 했지만<br>뒤늦게 참석하게 하는 바람에 후기를 쓸 정도의 참가를 못해서 쓸 수가 없게 되었다.</p><p>일단 굳이 이런 좋은 발표자료가 있는 데 작성하기보다는<br>발표해주신 개발자분들의 발표자료를 삽입하고 현장에서 중요하다고 생각했던<br>부분만 요약 정리하게되었다</p><p><img src="https://3.bp.blogspot.com/-A3NCbY9o_M8/WCXizf2QN6I/AAAAAAAAAz8/HJKNUCgmgD8AEtZhe-IVmt2Funtrqw5_ACLcB/s1600/Cap%2B2016-11-12%2B00-24-32-936.jpg" alt=""></p><ul><li>프로필<br><a href="https://festi.kr/festi/speaker/cwdoh" target="_blank" rel="noopener">https://festi.kr/festi/speaker/cwdoh</a></li></ul><p><img src="https://4.bp.blogspot.com/--_-JFbxv95Q/WCXv_DqZS0I/AAAAAAAAA1A/75tDXSYoLBAFfY86QnIoUEJYOQDu0DzjQCLcB/s1600/IMG_20161105_144311.jpg" alt=""><br><img src="https://1.bp.blogspot.com/-dXlDzkHVHFs/WCXwEOSn7yI/AAAAAAAAA1E/6YJbitKE4iIZpY7WoRt39qEL-9uAg0yBACLcB/s1600/IMG_20161105_143815.jpg" alt=""></p><iframe src="//www.slideshare.net/slideshow/embed_code/key/FuqgTKqq2Z626y" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/cwdoh/frontend-101-intro" title="초보 개발자를 위한 웹 프론트엔드 개발 101" target="_blank">초보 개발자를 위한 웹 프론트엔드 개발 101</a> </strong> from <strong><a href="https://www.slideshare.net/cwdoh" target="_blank">Chang W. Doh</a></strong> </div><br><br>아무래도 이전 WorkShop에서 이미 ServiceWoker부분 발표를 1시간정도 하셔서<br>간단하게 하고 그 후에 더 좋은 개발자분들의 발표가 있다고 강조했다.<br><br>- <strong>버전관리에 관하여</strong><br>GitHub에 있는 오픈소스로 HTML5사이트 번역한 적이 있다고 했다.<br>장점으로는 한국어로 번역을 해도 외국인이 한국어를 모르기때문에<br>제대로 된 피드백을 하지 못한다는 유머가 포인트였다.<br>HTML5 ROCKS<br>: <a href="https://www.html5rocks.com/ko" target="_blank" rel="noopener">https://www.html5rocks.com/ko</a><br>&gt;개인적인 생각이지만 Git을 하지 않는 곳은 가지 않는 것이 좋다.<br><br><em>Boilerplate</em> =&gt; 굉장히 잘 쓰이는 단어다. 꼭 기억합시다<br><br>- <strong>W3School은 좋지 않다</strong><br>제발 지양하자. 굉장히 오래된 곳이며 관리와 업데이트가 부실하여<br>오류를 범하는 부분에 상당히 많다.<br>W3Fools라는 안티 사이트가 있을 정도이다.<br><br>- <strong>대체 공부방법</strong><br>1. MDN<br>2. Web Fundamentals (단. 구글느낌이 강하다)<br>3. W3C 규격문서를 자주 읽자 (<a href="http://techhtml.github.io" target="_blank" rel="noopener">http://techhtml.github.io</a>)<br>4. webplatform.org (관심있는 토픽만 봐도 큰 도움이 된다)<br>5. Magic googling: site:스택오버플로 =&gt; 필터를 걸어서 검색하자<br>6. caniuse.com (브라우저 호환여부를 체크할 수 있다)<br><br>- <strong>개발 프로세스</strong><br>기술 블로그를 운영하는 사이트를 참조하자<br>=&gt; 이런 회사에 들어가자 본인의 기술 발전을 위해서 최선의 선택이다<br><br>- <strong>라이브러리</strong><br>라이브러리를 사용할때는 이해를 하고 쓰는 것이 좋다<br>예를 들면 http:// 와 https:// 의 단순한 차이도 알고 있자<br><br>—<br><br>#### Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #1<br><br><img src="https://1.bp.blogspot.com/-WhfoYnwD_DI/WCXmfEj0F2I/AAAAAAAAA0M/NivG99Rh3Ugs96zRz04h6FmQn2s6egSCwCEw/s1600/Cap%2B2016-11-12%2B00-40-01-153.jpg" alt=""><br>- 프로필<br><a href="https://festi.kr/festi/speaker/choeun" target="_blank" rel="noopener">https://festi.kr/festi/speaker/choeun</a><br><br><img src="https://3.bp.blogspot.com/-E2n3HZ8M9eo/WCXvoeDkaYI/AAAAAAAAA08/O4bnbgxIx-4bczXQYHwnc3KERfZHKVrWACLcB/s1600/IMG_20161105_151244.jpg" alt=""><br><br><iframe src="https://drive.google.com/file/d/0B6UpaSZyNjEmd1BMMFRIR043aE0/preview" width="640" height="480"></iframe><ul><li><strong>한줄 요약</strong></li></ul><ol><li>잊지 말자 모든 문서는 html을 권장한다</li><li>항상 index.html을 기본적으로 챙기자</li><li>HTML 문서 구조를 이해하자</li><li>HTML은 점점 진화한다.</li><li>User-scalable을 막지 않는 것이 좋다. (항상 클라이언트를 생각하자)</li><li>Grouping과 Sections의 차이를 이해하자</li><li>Table Layout은 지양하자</li><li>Block요소는 3줄로 시작한다</li><li>기본 font지원 굵기가 있는 데 이를 무시하고 설정하지 말자.</li><li>Generic-font를 써야 다양한 OS 및 브라우저를 지원할 수 있다.</li></ol><ul><li><strong>학습추천</strong></li></ul><ol><li>css-tricks.com<br>CSS 가이드 및 예제</li><li>Alistapart<br>CSS 개발 패러다임</li><li>MDN</li></ol><hr><h4 id="Boot-Camp-초보개발자들을-위한-웹-프론트엔드-개발-101-2"><a href="#Boot-Camp-초보개발자들을-위한-웹-프론트엔드-개발-101-2" class="headerlink" title="Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #2"></a>Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #2</h4><p><img src="https://3.bp.blogspot.com/-25F9OinV0aQ/WCXr7OLqCkI/AAAAAAAAA0k/w7PqgczZeRs45z5GdYA44NZgQ1nLLN1SgCLcB/s640/Cap%2B2016-11-12%2B01-01-40-773.jpg" alt=""></p><ul><li>프로필<br><a href="https://festi.kr/festi/speaker/kjy2143" target="_blank" rel="noopener">https://festi.kr/festi/speaker/kjy2143</a></li></ul><p><img src="https://3.bp.blogspot.com/-KoUjNa31SM8/WCXvf--ke7I/AAAAAAAAA04/IpAzyiaGzQIfXvfRHVOzQEfejok8eXmRwCLcB/s1600/IMG_20161105_162417.jpg" alt=""></p><p>백엔드 출신이라고 한다.<br>프론트엔드 이직상담 요청을 많이 받는 다고 하시는 데<br>주로 이직하지 말라고 답변하신다는…:scream::scream:</p><p><iframe src="//www.slideshare.net/slideshow/embed_code/key/4jE1V2wlnSDFVf" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/kjy2143/hitchhikers-guide-to-the-frontend" title="Hitchhiker&#x27;s guide to the front end development" target="_blank">Hitchhiker&#x27;s guide to the front end development</a> </strong> from <strong><a href="https://www.slideshare.net/kjy2143" target="_blank">정윤 김</a></strong> </div></p><p>프론트엔드개발자들이 하는 일들</p><ul><li><p><strong>과거하던 일</strong><br>HTML + CSS + Javascript + jQuery ?</p></li><li><p><strong>2016</strong></p></li></ul><ol><li>CSS 확장</li><li>Task Runners</li><li>JavaScript dependency 관리</li><li>이미지 압축</li><li>로딩 최적화</li><li>테스팅</li><li>자동화</li></ol><p>기술 &amp; 경험 &amp; 운영까지 아주 좋은 강연이었다.</p><hr><p><img src="https://2.bp.blogspot.com/-4aXDGb5bJdU/WCXwxOX6m2I/AAAAAAAAA1Y/i3eeowNONissyD6ie8Y2cw4CmHL98WJWwCLcB/s640/20161105_165609.jpg" alt=""><br>너무나 혼잡스러웠다</p><p><img src="https://3.bp.blogspot.com/-OUIkZsHV-Ms/WCXwMm4P6NI/AAAAAAAAA1I/-gzw1Axn1Mo60W9gtx_Us7Bf3ShzPTHcACLcB/s1600/20161111_233653.jpg" alt=""><br>스티커 득템</p><p><img src="https://3.bp.blogspot.com/-WXVQprI1Hts/WCXwMoyM9BI/AAAAAAAAA1M/EnPCZ7oi1Bcq76cS8iLVPPyzY312wD2AgCLcB/s1600/20161111_233741.jpg" alt=""></p><p><img src="https://1.bp.blogspot.com/-WK3s6n11LEw/WCXwMwSm85I/AAAAAAAAA1Q/GPi-pVZha7sfzZhIUAT9gd5jD42uzqPggCLcB/s1600/20161112_010231.jpg" alt=""><br>잠옷 득템</p><p><img src="https://4.bp.blogspot.com/-dxJANcTPDgY/WCXwNYYsG8I/AAAAAAAAA1U/kce9Cbn2rY8a0aelNoTaPliMeSP_9xzTACLcB/s1600/20161112_010248.jpg" alt=""><br>그나마 무난해서 다행…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GDG DEVFEST 2016 관람 후기!!&lt;br&gt;
    
    </summary>
    
      <category term="conference" scheme="https://devjang.github.io/categories/conference/"/>
    
    
      <category term="김정윤" scheme="https://devjang.github.io/tags/%EA%B9%80%EC%A0%95%EC%9C%A4/"/>
    
      <category term="도창욱" scheme="https://devjang.github.io/tags/%EB%8F%84%EC%B0%BD%EC%9A%B1/"/>
    
      <category term="조은" scheme="https://devjang.github.io/tags/%EC%A1%B0%EC%9D%80/"/>
    
      <category term="초보개발자들을 위한 웹 프론트엔드 개발 101" scheme="https://devjang.github.io/tags/%EC%B4%88%EB%B3%B4%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%93%A4%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%9B%B9-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C-101/"/>
    
      <category term="devfest2016" scheme="https://devjang.github.io/tags/devfest2016/"/>
    
      <category term="gdg" scheme="https://devjang.github.io/tags/gdg/"/>
    
      <category term="GDG DevFest Seoul 2016" scheme="https://devjang.github.io/tags/GDG-DevFest-Seoul-2016/"/>
    
      <category term="gdgkr" scheme="https://devjang.github.io/tags/gdgkr/"/>
    
  </entry>
  
  <entry>
    <title>난 정말 JAVA를 공부한 적이 없다구요</title>
    <link href="https://devjang.github.io/2016/09/17/2016-09-17-java-book/"/>
    <id>https://devjang.github.io/2016/09/17/2016-09-17-java-book/</id>
    <published>2016-09-16T15:00:00.000Z</published>
    <updated>2018-08-13T11:26:44.863Z</updated>
    
    <content type="html"><![CDATA[<p>난 정말 JAVA를 공부한 적이 없다구요 리뷰!</p><a id="more"></a><hr><blockquote><h3 id="책-정보"><a href="#책-정보" class="headerlink" title="책 정보"></a>책 정보</h3><p>출판사 : 오렌지미디어<br>저자 : 윤성우<br>출간 : 2009-08-12<br>페이지 : 875 쪽<br>ISBN : 9788996094029<br>가격 : 28,000원</p></blockquote><ul><li>자세한 정보<br>: <a href="http://book.naver.com/bookdb/book_detail.nhn?bid=6056781" target="_blank" rel="noopener">http://book.naver.com/bookdb/book_detail.nhn?bid=6056781</a></li></ul><h3 id="후기"><a href="#후기" class="headerlink" title="후기"></a>후기</h3><p>Java 초보용으로 굉장히 많은 인기를 얻고 있는 책이다.<br>일명 코딩 붐이 일어나면서 IT 관련 서적이 쏟아지고 있는 데<br>특히 Java 기본서는 굉장히 많이 나오고 있어 그만큼 묻혀버리는 Java 기본서도 많다.<br>이 책은 예전부터 지금까지 꽤나 오랜 기간 인기를 끌고 있는 데<br><code>수많은 Java 기본서 중 거의 부동의 1위를 다투는 책이다.</code><br>제목은 왜 이리 특이한지 표지도 좀 오래되어 보이고…. 뭐 결론은 내용이 꽤나 좋다.<br>875페이지에 달하는 꽤나 두꺼운 책이지만 가격은 뭐 적당한 정가 28,000원이다.<br>또한 <a href="http://www.orentec.co.kr" target="_blank" rel="noopener">http://www.orentec.co.kr</a>에서 회원가입만 하면 저자의 동영상 강의를<br>볼 수 있으니 책이 없어도 내용이 궁금하신 분들은 참고해도 좋을 것 같다.</p><blockquote><p>자바의 정석과 비교하는 분들이 많은 데 자바의 정석은 딱딱하고 정적인 느낌이라면 이 책은 이해에 노력을 기울인다.</p></blockquote><h3 id="유기적인-내용과-핵심을-잘-알고있는-기본서"><a href="#유기적인-내용과-핵심을-잘-알고있는-기본서" class="headerlink" title="유기적인 내용과 핵심을 잘 알고있는 기본서"></a>유기적인 내용과 핵심을 잘 알고있는 기본서</h3><p>개인적인 생각일 수 있지만 내용의 흐름이 꽤나 잘 연결된다는 느낌을 받을 수 있었다.<br>또한 다른 책에 비하여 중요한 부분은 항상 중요하게 다루고 넘어간다.<br>말 그대로 기본서로 있을 건 다 있기 때문에 개념을 잡고 이해하는 데 굉장히 좋다.  </p><h3 id="네트워크가-왜-없을까"><a href="#네트워크가-왜-없을까" class="headerlink" title="네트워크가 왜 없을까.."></a>네트워크가 왜 없을까..</h3><p>이상하다. 한창 Java로 채팅 만들기 공부를 할 때 책을 뒤적였는데<br>정말 없는 것이다. 대신 Swing이 들어가 있다……<br>이 책의 출시연도는 <code>2009년도</code>이기때문에 개정판이 나와야 해결될까 싶다.<br>물론 네트워크가 필요 없는 분들도 있겠지만 Java 기본서에서 네트워크 부분을 익히지 않고<br>JSP &amp; Servlet으로 넘어간다면 초반에 이해도가 떨어지지 않을까 싶다.</p><blockquote><h3 id="요약"><a href="#요약" class="headerlink" title="요약"></a>요약</h3><ul><li><strong>장점</strong></li></ul><ol><li>설명이 굉장히 좋기 때문에 이해에 도움이 되었다.</li><li>개념을 놓치지 않으려고 노력한 흔적이 돋보인다(예를 들면 OOP 부분)</li><li>분량이 굉장히 많다 공부하기에 굉장히 좋은 양을 가지고 있다.</li></ol><ul><li><strong>단점</strong></li></ul><ol><li>네트워크 &amp; 통신을 전혀 다루지 않는다는 부분이 굉장히 치명적이다.</li><li>출간일이 오래되었다. 물론 학습에는 전혀 지장이 없지만 곧 개정판이 나오지 않을까 싶다.</li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;난 정말 JAVA를 공부한 적이 없다구요 리뷰!&lt;/p&gt;
    
    </summary>
    
      <category term="book" scheme="https://devjang.github.io/categories/book/"/>
    
      <category term="programming" scheme="https://devjang.github.io/categories/book/programming/"/>
    
      <category term="java" scheme="https://devjang.github.io/categories/book/programming/java/"/>
    
    
      <category term="자바 입문 서적" scheme="https://devjang.github.io/tags/%EC%9E%90%EB%B0%94-%EC%9E%85%EB%AC%B8-%EC%84%9C%EC%A0%81/"/>
    
      <category term="자바 입문용" scheme="https://devjang.github.io/tags/%EC%9E%90%EB%B0%94-%EC%9E%85%EB%AC%B8%EC%9A%A9/"/>
    
      <category term="자바 초보 책" scheme="https://devjang.github.io/tags/%EC%9E%90%EB%B0%94-%EC%B4%88%EB%B3%B4-%EC%B1%85/"/>
    
      <category term="난 정말 JAVA를 공부한 적이 없다구요" scheme="https://devjang.github.io/tags/%EB%82%9C-%EC%A0%95%EB%A7%90-JAVA%EB%A5%BC-%EA%B3%B5%EB%B6%80%ED%95%9C-%EC%A0%81%EC%9D%B4-%EC%97%86%EB%8B%A4%EA%B5%AC%EC%9A%94/"/>
    
  </entry>
  
</feed>
