{"meta":{"title":"Begginer Developer","subtitle":null,"description":"Begginer Front-end Developer Blog","author":"DevJang","url":"https://devjang.github.io"},"pages":[{"title":"","date":"2018-08-13T11:26:44.860Z","updated":"2018-08-13T11:26:44.860Z","comments":true,"path":"404.html","permalink":"https://devjang.github.io/404.html","excerpt":"","text":"#bg { position: fixed; top: -50%; left: -50%; width: 200%; height: 200%; z-index: 100; } #bg img { position: absolute; top: 0; left: 0; right: 0; bottom: 0; margin: auto; min-width: 50%; min-height: 50%; }"}],"posts":[{"title":"(번역) 멋진 ES6 - var, let 그리고 const를 깊이 살펴보다","slug":"2018-11-25-var-let-and-const","date":"2018-11-24T15:00:00.000Z","updated":"2018-12-02T15:08:20.041Z","comments":true,"path":"2018/11/25/2018-11-25-var-let-and-const/","link":"","permalink":"https://devjang.github.io/2018/11/25/2018-11-25-var-let-and-const/","excerpt":"이 글에서 ES6의 몇 가지 멋진 것들에 대해 탐구할 것입니다.(고전적인 var에 상반된 let, const에 대해) 시작합시다!","text":"이 글에서 ES6의 몇 가지 멋진 것들에 대해 탐구할 것입니다.(고전적인 var에 상반된 let, const에 대해) 시작합시다! JavaScript 변수는 데이터의 값을 저장하는 컨테이너(그릇, 용기)입니다. 일반적으로 JavaScript에서 새로운 변수를 어떻게 만들까요?좋아요. 저는 이 질문이 바보같은 질문이라는 걸 압니다. (우리는 모두 “var“ 를 사용합니다) Var12var firstVar; // firstVar 의 기본값을 선언하세요 - undefinedvar secondVar = 2; // secondVar 변수를 선언하고 2를 할당하세요. 누군가를 위해 설명하자면 var는 영어로 “변수”를 의미합니다 (확실히 😆). 많은 현대 언어와 마찬가지로 JavaScript는 유연함을 제공하므로 변수를 선언할 때 특정 타입을 결정할 필요가 없습니다. 정수형? 문자열? 객체? 함수? … — 모두 var 하나면 딱 다음과 같은 상황을 만나기 전까지는 어렵지 않습니다. 12345678var increment = 1;if (increment === 1) &#123; var increment; // 기본값을 사용하여 increment를 다시 선언합니다. // 무엇이든 해보세요.&#125;console.log(increment); // 무엇이 출력될까요? 도대체 무슨 일이 벌어지고 있는 걸까요? 우선 호이스팅에 대해 언급할 필요가 있습니다. 호이스팅 면밀하게 관찰하기 호이스팅은 모든 변수 및 함수 선언을 코드가 작성된 위치와 관계없이 실행 컨텍스트의 컴파일 단계 중에 먼저 메모리에 저장되는 JavaScript의 기본 동작을 말합니다. 좀 더 일반적으로 설명하자면 모든 선언을 현재 스코프의 맨 위 로 이동시키는 JavaScript의 동작입니다. (물리적인 코드 변경은 전혀 없으며) 다른 모든 작업보다 먼저 처리됩니다. 위의 예제를 살펴보면 컴파일 단계에서 코드는 다음과 같이 이해할 수 있습니다. 123456789var increment;var increment;increment = 1;if (increment === 1)&#123; ...&#125;console.log(increment); // 1 또 다른 예제:123456789var x = 0;y = 1;console.log(sumOf(x, y));var y;function sumOf(a, b) &#123; return a + b;&#125; 다음과 같이 처리됩니다: 1234567891011var x;var y;function sumOf(a, b) &#123; return a + b;&#125;x = 0;y = 1;console.log(sumOf(x,y)); 주의사항JavaScript의 호이스팅은 선언이 _아닌_ 할당에만 적용됩니다.모든 값 할당은 코드에 작성 또는 위치하는 곳과 같은 위치에서 처리며 다음 결과를 얻습니다. 1234console.log(x); x = 3; var x = 1; console.log(x); 1, 3 출력을 예상할 수 있지만 출력 결과는 undefined, 1 입니다. 또한 위에서 언급한 실행 컨텍스트는 (JavaScript 문서에 따르면) 선언된 var 변수의 스코프입니다.그렇다면 var 변수 선언 &amp; 할당에 어떤 영향을 미칠까요? 실행 컨텍스트는 무엇일까요?실행 컨텍스트는 Javascript 코드가 실행 / 평가되는 환경입니다. 다음 중 하나가 될 수 있습니다. 전역 — 기본 환경 함수 — 함수 내부 환경 Eval — eval 함수 내부 환경 따라서 여기서 var 변수의 스코프는 함수 내부 또는 전역 컨텍스트에 있습니다. 다른 모든 블록 컨텍스트 - {} 중괄호, 문, 표현식 등의 내부 코드 블록을 의미합니다…-위에서 정의한 3가지 유형이 아닌 경우 언급된 변수의 스코프에는 영향을 미치지 않습니다. 결과적으로 코드 문 블록, 표현식 (if…else … 문, 반복문 등) 에서 변수를 선언하는 것은 컴파일러 / 작성 단계의 맨 위에 선언하는 것으로 이해할 수 있습니다. 12345678function testMe() &#123; while(true) &#123; var x = 2; break; &#125; console.log(x); // while 문 내부에 x가 선언되어 있음에도 불구하고 2 가 출력됩니다&#125; 이게 바로 var입니다.보시다시피 이 var 문은 개발자에게 필요한 모든 유연성을 제공합니다 (하지만 남용해서는 안됩니다!). 그렇다면 왜 ES6에서는 두 개의 문(let 과 const)을 더 도입하려고 애쓸까요?자 이제 알아봅시다. Letvar와 유사하게 변수를 선언하고 값을 할당할 수 있습니다(선택적으로).그러나 var와 달리 변수 선언이 블록 스코프 내부의 값으로만 선언됩니다. 이것은 변수가 표현식 또는 문, 블록 ({}) 내부에서만 선언되고 존재하도록 제한되며 일반적인 실행 컨텍스트 외에 하위 블록에서도 사용할 수 있음을 의미합니다. (둘러쌓인 함수 등) 따라서 위 예제의x는 대부분의 언어와 마찬가지로 while 블록 스코프 내에서 제한되지 않지만 var를 let로 바꾸면 결과가 변경됩니다 1234567function testMe() &#123; while(true) &#123; let x = 2; break; &#125; console.log(x); //ReferenceError: x는 정의되지 않았습니다.&#125; 네. undefined가 아닌 null이 아닌 2가 아닌 대신 ReferenceError입니다. 이렇게하면 변수의 지역성 이 보장되므로 이전에 같은 이름으로 선언된 변수를 실수로 변경하지 않으므로 안심할 수 있습니다. 이 상황에서와 같이 : 12345var x = 1;&#123; let x = 3;&#125;console.log(x); // 여전히 1 Yippie (hippie와 New Left의 중간을 자처하는 미국의 젊은이), 🐛가 숨겨질 기회가 줄어듭니다! 잠깐! 더 있습니다. 블록 스코프로 제한되기 때문에 마침내 클로저의 도움없이 private 멤버을 구현할 수 있습니다. 123456789101112var Person;&#123; let name; Person = function(_name)&#123; name = _name; &#125;; Person.prototype.getName = () =&gt; name;&#125;var person = new Person('Maya');console.log(name); // 아무것도 출력되지 않습니다console.log(person.getName()); // Maya var와 다른 중요한 차이점은 변수 호이스팅이 let에는 적용되지 않는다는 점입니다.즉 컴파일 단계에서 let 선언은 현재 위치에 그대로 유지되고 다른 코드에서 먼저 처리되지 않습니다.(일명 var처럼 컨텍스트의 맨 위로 이동하지 않습니다.) 따라서 이 예제를 실행할 때12345x = 5;y = 2;let y; var x; y에 ReferenceError를 다시 나타내지만 x에는 그렇지 않습니다. 마지막으로 let을 전역 컨텍스트에서 사용할 때 var와는 달리 전역 객체 대한 프로퍼티를 생성하지 않습니다.우연이라도 전역 객체를 어지럽히지 않습니다!!! 🚀 1234567var x = 5;let y = 4;console.log(this.x); // 5console.log(window.x); // 5console.log(this.y); // undefinedconsole.log(window.y); // undefined var와 달리 let 변수를 다시 선언하면 SyntaxError가 발생합니다. x에 대한 SyntaxError 따라서 let를 사용할 때 var 선언의 일반적인 방법보다 더 많은 제한 / 한계(더 좋게 말하면)가 있을 것입니다. const는 어떨까요? Const예를 들어 템플릿, 기본 메시지 등과 같은 데이터 변수가 있습니다.(상수로 사용하기 위함) JavaScript를 사용하여 애플리케이션 전체에서 이러한 데이터가 변경되지 않도록 하려면 어떻게 해야할까요? ES6 이전 한 가지 방법 - 작성하는 것에 주의하세요(또는 다른 개발자가 상수에 사용하는 네이밍 컨벤션을 알아채고 이해하도록 기도하라). ES6 이후 (하나님 감사합니다) 우리는 const를 가집니다. const - let과 동일하게 지역 블록 스코프 변수를 선언하고 초기화할 수 있습니다.따라서 let에는 다음과 같은 모든 제한이 있습니다: 선언된 변수는 일반적인 실행 컨텍스트 외에 표현식, 문 코드의 {} 블록 내부에서만 사용할 수 있습니다. const에 호이스팅이 적용되지 않습니다. 전역 컨텍스트에서 사용될 때 전역 객체에 프로퍼티가 생성되지 않습니다. 선언된 변수를 다시 선언할 수 없습니다. 또한 누구나 추측할 수 있듯이 const는 상수를 뜻합니다: 선언된 변수는 값으로 초기화해야 합니다. 1const myConstants; // SyntaxError: const 선언에 초기화 누락 선언된 변수는 한 번의 값으로만 할당할 수 있습니다. 재할당 없음(상수 값에 대한) 하지만 한 가지 단점은 할당된 값 자체가 객체(객체, 배열 등)의 형태일 경우에도 여전히 수정할 수 있다는 것입니다. 예:1234567891011const myConstant = &#123;name: \"Constant\"&#125;;myConstant = &#123;name: \"new Constant\"&#125;; // 오류myConstant.name = \"new Constant\"; // 좋아요console.log(myConstant.name); // 새로운 상수const arr = [1, 2];arr = [2,3]; // 오류arr[0] = 2; // 좋아요console.log(arr); //[2,2] 확실하고 이해하기 쉽지 않습니까? 일반적으로 이 새로운 문이 가져다주는 장점을 알아차렸을 것입니다.그러니 요약해 봅시다. let 그리고 const의 장점 오염 방지 - 불필요한 프로퍼티를 지닌 전역 객체 숨겨진 🐛 피하기 - 실수로 상수 값을 수정하거나 서로 다른 범위 블록에 있지만 동일한 이름으로 선언된 잘못된 변수를 업데이트 등 불필요한 호이스팅 피하기 더 많은 제한을 추가하여 보다 안정적이고 체계적이며 읽기 쉬운 코드(var로 선언된 변수가 const가 되어야할 경우를 알 수 있습니까??). 결론실제로 let과 const가 var에 비해 얼마나 많은 장점을 가지고 var를 대체하기 위한 것이 아니라 더 많은 강제 사항를 JavaScript에 제공하고 개발자의 코드 리뷰와 읽기에 드는 시간을 절약하는 데 도움이 됩니다. 기억하세요 - 저의 조언은 항상 그렇듯이 먼저 필요한 것을 분석한 다음 작은 변수조차도 적절한 선언문을 선택하라는 것입니다.많은 작고 하찮은 것들에 대해 처음부터 주의를 기울이지 않는다면 언젠가는 커다랗고 무서운 악몽으로 이어질 수 있습니다. 결국 깨끗하고 안전한 코드를 작성하는 것을 좋아하지 않는 사람이 있을까요? 😃 이 아티클(ES6 cool stuffs —var, let and const in depth)은 원작자 MayaShavin의 동의를 얻어 번역되었습니다.","categories":[{"name":"programming","slug":"programming","permalink":"https://devjang.github.io/categories/programming/"},{"name":"javascript","slug":"programming/javascript","permalink":"https://devjang.github.io/categories/programming/javascript/"}],"tags":[{"name":"es6","slug":"es6","permalink":"https://devjang.github.io/tags/es6/"},{"name":"var","slug":"var","permalink":"https://devjang.github.io/tags/var/"},{"name":"let","slug":"let","permalink":"https://devjang.github.io/tags/let/"},{"name":"const","slug":"const","permalink":"https://devjang.github.io/tags/const/"}]},{"title":"신입 프론트엔드 개발자들의 구직을 위한 소소한 팁","slug":"2018-11-11-new-fed-begginer-tip","date":"2018-11-10T15:00:00.000Z","updated":"2018-12-02T15:05:10.368Z","comments":true,"path":"2018/11/11/2018-11-11-new-fed-begginer-tip/","link":"","permalink":"https://devjang.github.io/2018/11/11/2018-11-11-new-fed-begginer-tip/","excerpt":"(우아한형제들과는 관계가 없습니다) 프론트엔드 개발자로 취업하려면 어떻게 해야 할까?그때는 어떤 때일까, 프론트엔드 꿈나무들의 고통과 외침","text":"(우아한형제들과는 관계가 없습니다) 프론트엔드 개발자로 취업하려면 어떻게 해야 할까?그때는 어떤 때일까, 프론트엔드 꿈나무들의 고통과 외침 언제부터인지 다양한 루트로 신입 프론트엔드 구직에 대한 질문을 받고 있습니다. 질문을 받고 멘토링을 하며 느낀 점은 제가(현재 2년차를 마무리하고 있는 부족한 실력의 주니어 개발자인 시점)과연 이런 질문을 받아도 될까? 였지만결국 그로부터 한 달에 한 분 정도 구직에 대한 멘토링을 하고 있습니다. 루트는 다양하지만 질문을 주는 그들의 꿈과 희망은 일치했었습니다.(물론 눈에 보이는 것이 전부는 아닙니다. 즉: 꿈과 희망은 일치하지만 욕망이 다른 경우도 있습니다.) 부족했던 제가 취직했던 과정과 변해가는 프론트엔드 구직 시장 그리고 멘토링을 하며 느꼈던 모든 것을 종합해보며신입 프론트엔드 구직을 하고자 하는 구직자분들에게 조금이나마 보탬이 되고자 이렇게 아티클을 작성합니다. 자아성찰하기프론트엔드 개발자가 되고 싶은 사람들은 다양합니다. 하지만 하나의 타겟에 다양한 지원군을 포함하고 있습니다. SI 주니어 백엔드 개발자 경력 퍼블리셔 (가장 많은 분포도) 디자이너 대학생 이 밖에도 더 많은 케이스가 존재하지만 대부분은 위와 같은 케이스입니다. 하지만 대부분 프론트엔드 개발자를 모르거나 구체적으로 알고 있지 못합니다. 리액트나 뷰하면 프론트엔드 개발자 아닌가요…? HTML + CSS에서 JavaScript 좀 잘하면 되는 거 아닌가요…? 어쩌면 위와 같은 말도 달리 생각해보면 완전히 틀린 말은 아닙니다.하지만 더 많은 것을 알고 있어야만 프론트엔드 개발자가 될 수 있습니다. 결국 프론트엔드 개발자가 되고 싶다면 질문을 해야 합니다(자기 자신에게) 왜 프론트엔드 개발자가 되고 싶은 건지 프론트엔드 개발자는 무엇이고 어떤 일을 하는 건지 자격요건과 우대사항으로 자아성찰하기 원티드 신입 FE 채용 필터링: https://www.wanted.co.kr/wdlist/518/669?years=0 위의 링크를 보며 자격 요건보다 부족한 점이 있다면 현실적으로 파악한 후 리스트 업하여 스터디 플랜을 만들어야합니다. 결국은 자신의 상태를 그 누구보다 잘 알고 진단하느냐가 중요합니다. 좋은 회사의 기준좋은 회사의 기준은 절대적일 수도 있지만 상대적일 수도 있는 부분입니다. 워라밸 연봉 사용할 수 있는 스킬 및 회사에서 지향하는 개발 사람 복지 회사에서의 나의 존재감 자유도 다양한 가치관과 조건이 존재하기 때문입니다 하지만 안타깝게도 구직자의 수준에 따라 갈리는 경우도 있습니다. 가령 예를 들어 설명해보겠습니다 A라는 회사를 두고1번 구직자: 내 실력에 A 회사 정도면 최고의 회사야! 라고 생각할 수 있겠지만2번 구직자: 아.. 내 실력에 A 회사는 너무 하향 지원인데 조금 더 공부하면서 구직을 노려보자 사실 위와 같은 상황은 경력자에게도 마찬가지입니다. 좋은 회사를 추천해달라는 질문을 많이 받고는 하는데 그전에 본인의 역량을 파악해야 합니다. 자격요건은 되어야 이력서를 넣을 수 있고우대사항이 되어야 면접을 보러 갈 수는 있겠구나 생각하는 것도 적당합니다. 이를 판단하는 방법은 일단 이력서를 넣고 실패해보며 피드백을 받는 것이 가장 확실하고 빠른 방법입니다. 디테일의 중요성빠른 입사 지원은 지양합시다 기본적인 CS나 알고리즘 테스트를 통한 실력을 중점으로 하는 입사 프로세스로 지원하는 경우가 아닐 때는이력서에 많은 시간을 할애할 것입니다. 이때 가장 주의해야 할 점과 알아두면 좋은 점은 결국 버릴 건 버리는 심플함과 센스 있는 디테일입니다. 심플함 불필요한 자격증은 기입하지 않기 운전면허를 넣는 경우도 봤습니다. TMI(Too Much Information) &amp; TMT(Too Much Talker) 버리기 너무 많은 내용은 담지 않는 것이 좋습니다. 관계없는 내용은 더더욱 담지 않는 것이 좋습니다. 문단 정리하기 타이틀, 서브타이틀, 컨텐츠 등으로 문단을 정확히 나눕니다. 강조할 건 강조합니다. (예: 강조, 강조, 강조, 강조) 디테일 HWP…DOC…PPT…가 아닌 PDF PDF는 첨부가 아닌 클라우드를 활용한 링크 공유를 합시다 (단축 URL은 센스) 누구든 어디서나 몰래 볼 수 있는 정적 페이지 만들기 핸드폰으로 이력서를 읽는 인사 담당자분도 봤습니다. 깃헙 페이지나 파이어베이스를 사용하셔도 좋습니다. 이미 만들어진 html resume template를 활용해도 좋습니다. 회사 이름이라도 넣자 이력서 or 자기소개서에 회사에 관한 내용이나 연관성이 전혀 없다면 실력이 충분하더라도 감점 요소입니다. 이력서 양식에 지원 회사 시그니처 컬러 or 지원 회사의 시그니처 폰트를 적용하는 센스 전략 세우기“적을 알고 나를 알면 백 번을 싸워도 위험하지 않다” 손자병법의 한 구절 말 그대로 취업은 나를 알고 회사를 알아가는 과정입니다. 이미 준비된 실력이라면 당장 쟁쟁한 회사의 테스트를 뚫고 합격할 수 있겠지만아쉽게도 신입 개발자들을 위한 자리보다는 높은 연차의 개발자들을 원하는 곳이 대부분… 다른 포지션의 개발자 또한 마찬가지겠지만 FE 직군의 경우 더욱 양극화되어있으며국비지원 수강생과 기타 유료 학원 수강생들을 포함하면 분기별로 최소 100명 이상의 신입 FE 취준생이 쏟아질 것으로 예상됩니다.(개인적인 추측) 당연히 뛰어난 실력을 갖춰야 이런 경쟁 속에서 수월해지겠지만 더 유연하게 대처할 필요가 있습니다.그나마 신입 구직자일때 개발 실력외에 다른 강점을 보여줄 수 있기때문이죠. 탑 - 다운 ? 다운 - 탑? 지원하고 떨어지고 반복하다 보면 자신의 수준을 자각할 수 있습니다. 저 같은 경우는 위와 같은 시트로 구직 현황을 관리하고는 했었는데 굉장히 큰 도움이 되었습니다.또한 본인이 판단하는 가치와 예상 합격률을 잘 고민하여 등급을 나눠보는 것이 좋습니다. 그렇게 나눈 등급을 통하여 탑(합격률 낮음) - 다운(합격률 높음) 순으로 지원하시는 것을 추천합니다. 탑 - 다운 장점 취업이 급할 때 유리하다. 자신의 수준을 빠르게 캐치할 수 있다. 단점 면접을 통한 실력 향상을 누리지 못할 수 있다. 면접 및 서류 광탈로 멘탈이 터지거나 자존감이 떨어질 수 있다. 다운 - 탑 장점 장기적인 구직 레이스에 적합하다. 당장은 취업이 어려운 회사에 차후 적합한 핏과 면접 경험을 살려 지원할 수 있다. 단점 공백 기간이 길어질 수 있다. 잦은 이직을 하게 될 수도 있다. 꼭 신입 구직이 아니더라도 1 ~ 2년 차와 상시 모집 정도는 지원해보는 것이 좋습니다.1차 2차 3차 면접 프로세스가 길어질수록 프로세스가 유효한 시점을 살려 즉각 자신에게 부족한 점을 보충해야 합니다. 활동량을 높인다다양한 컨퍼런스 및 채용 행사를 통해 회사의 정보와 얻을 수 있습니다. 운 좋은 경우는 CTO 또는 인사 담당자와 1 대 1로 Q&amp;A 시간을 가지는 경우도 있으니 다양한 활동에 참여하는 것을 권장합니다. 네트워크를 이용하자다양한 스터디와 실제 친분을 통하여 적절한 정도의 정보를 얻어보는 것도 방법입니다. 운 좋은 입사는 없다간혹 운 좋게 자신의 실력에 비해 빠르게 구직에 성공할 수 있습니다. 의심해 볼 수 있는 포인트 퇴사율이 높은 회사 FE에 대한 이해도가 굉장히 낮아 보이는 면접관이 대부분일 때 빨리 들어와서 빨리 좀 도와달라는 모습을 보일 때 개발 자체를 전혀 모르는 사람들이 면접관일 때 취업 시 내가 1인 개발자인 회사 정보처리기사가 우대 사항인 경우 이 밖에도 다양한 방법과 경험을 살려 자신에게 맞는 구직 플랜과 꾸준한 학습 &amp; 프로젝트 진행을게을리하지 않는다면 험난한 구직 시장에서도 굉장한 성장을 이룰 수 있습니다. 면접도 공부다면접은 정말 피드백이 확실한 공부 방법입니다. 간혹 마음에 드는 회사가 아니라며 서류 합격 이후 면접에 불참하는 경우가 있는데그런 경우에도 필히 면접에 참가하여 자신의 실력을 갈고닦는 것이 좋습니다. 면접을 통해 공부하는 방법은 여러 가지가 있습니다. 면접 이후 필히 면접 문제를 회사별로 정리한다. 가능하다면 본인이 떨어진 이유를 피드백 받도록 한다. (피드백이 없다면 요청하는 것도 방법) 각종 자료를 통해 이미 정리된 면접 문제를 보는 것도 좋지만 면접 문제를 따로 정리한다. 면접관의 표정이 안 좋을 때와 좋을 때를 기억하여 어떤 포인트에서 자신의 장점과 단점이 났는지 정리한다. 구직 중에도 뭔가 꾸준히 한다. (예: TIL, 알고리즘 문제 풀기, 사이드 프로젝트 등) 위와 같은 정리를 통해 나온 자신의 단점을 파악하여 보완하는 시간을 가진다. 다양한 면접과 구직을 통해 공부해야 하지 말아야 할 것이 보인다면 망설임 없이 그것에는 시간을 할애하지 않는다. 도움 되는 멘토를 찾아 현실적인 조언을 받아 그것을 실행한다. 정리위와 같은 내용을 정리하자면 결국 개발자 구직이라는 것입니다.때문에 당연하게도 CS 기본 소양과 알고리즘이 탄탄하다면 더 좋은 결과를 얻을 수 있습니다. 하지만 누군가에게는 합격을 누군가에게는 가난하고 힘든 기간이 될 수 있으니 적당한 긴장 즉각적인 피드백을 통한 단점 보충 꾸준함 다양한 활동 위의 세 가지를 잊지 않는다면 좋은 결과와 좋은 성장을 이룰 수 있습니다. 마지막으로 입사 지원 대비 서류 합격률이 10%도 되지 않는다면 이력서를 완전히 다시 작성하는 것도 좋습니다. 요즘 뛰어난 신입 개발자분들과 학생 개발자분들 보며 굉장한 자극과 영감을 받고는 합니다.하지만 이와 다르게 상대적으로 실력이 부족한 구직자분들에게는 구직 기간이 스트레스가 될 수 있습니다.그럴 때일수록 오히려 구직 과정을 역이용해 스트레스가 아닌 성장을 하는 계기를 가졌으면 좋겠습니다.","categories":[{"name":"column","slug":"column","permalink":"https://devjang.github.io/categories/column/"}],"tags":[{"name":"신입 프론트엔드","slug":"신입-프론트엔드","permalink":"https://devjang.github.io/tags/신입-프론트엔드/"},{"name":"신입 개발자","slug":"신입-개발자","permalink":"https://devjang.github.io/tags/신입-개발자/"},{"name":"신입 프론트엔드 개발자","slug":"신입-프론트엔드-개발자","permalink":"https://devjang.github.io/tags/신입-프론트엔드-개발자/"}]},{"title":"VS 코드 콘솔에서 TypeScript 실행하기","slug":"2018-04-29-run-simple-ts","date":"2018-04-28T15:00:00.000Z","updated":"2018-08-13T11:26:44.869Z","comments":true,"path":"2018/04/29/2018-04-29-run-simple-ts/","link":"","permalink":"https://devjang.github.io/2018/04/29/2018-04-29-run-simple-ts/","excerpt":"타입스크립트 개발 환경없이 작성하기","text":"타입스크립트 개발 환경없이 작성하기 타입스크립트를 작성하다 보면 간단히 콘솔로 코드를 찍어보고 싶을 때도 있고 컴파일 없이 작업하고 싶은데 그렇지 못해 답답할 때가 있습니다 자바스크립트는 개발자 도구에서 간편하게 작성해볼 수 있으니 접근성이 이 엄청나기 때문에 비교가 될 수 있죠. 이러한 부분 때문에 포기하시는 분들을 위한 자료를 준비했습니다. Front-end Playground 활용하기기본 설정으로 타입스크립트를 제공하는 웹서비스를 이용할 수 있습니다. CodePen 설정 &gt; JavaScript Preprocessor &gt; TypeScript 너무나 유명한 서비스인만큼 이미 되어있는 템플릿으로 간단히 사용 가능합니다. JS Bin JavaScript 탭 선택 &gt; JavaScrip 클릭 &gt; TypeScript 선택 마찬가지로 몇번의 클릭만으로 사용가능합니다. JSFiddle JavaScript 클릭 &gt; TypeScript 선택 마찬가지로 몇번의 클릭만으로 사용가능합니다. TypeScript Playground 별도의 설정과 도구없이 JS코드로 바로 컴파일 되어 비교할 수 있기 때문에 학습에는 가장 좋다고 생각이 듭니다. 타입스크립트의 코드가 자바스크립트의 어떤 코드로 변환되는지 항상 볼 수 있기에 흥미로우며 Run 버튼을 활용하여 브라우저에서 실행해볼 수 있습니다. VS 코드가 내장되어 VS 코드에 익숙한 사용자분들은 IntelliSense와 단축키를 그대로 사용할 수 있습니다. CodeSandbox Create Sandbox 클릭 &gt; New Sandbox &gt; Vanilla 선택 기본적인 Parcel 번들러 프로젝트가 생성됩니다 &gt; Add Dependency 클릭 TypeScript 검색 &gt; 검색된 TypeScript 설치 index.js를 .ts로 변경 (index.html내에 삽입된 스크립트도 마찬가지) 설정이 완료된 후 바로 TS 코드를 작성할 수 있습니다 VS code의 IntelliSense 간단한 플레이그라운드 그 이상으로 다양한 기능을 지원합니다. 또한 위에 이미 설명한 서비스들 보다 간편하지는 못하고 무겁다는 단점이 있지만 Github 연동, 로컬 파일 연동, Live(유료), npm 가능, 번들러 및 실제 파일 관리 가능 엄청난 확장성이 존재합니다. 한마디로 모듈화 및 파일을 나누고 싶을때 온라인에서 간단히 사용할 수 있습니다(이럴 거면 그냥 로컬이 낫다고 판단될 수도…) VS 코드가 내장되어 VS 코드에 익숙한 사용자분들은 IntelliSense와 단축키를 그대로 사용할 수 있습니다. 에디터 활용하기VS code이번에는 에디터로 넘어와 VS code에서 간단한 콘솔 출력을 방법을 알아보겠습니다. Code Runner 확장 플러그인 설치 ts-node 설치1$ npm i -g ts-node // 전역 설치를 하시면 됩니다 (-g 또는 -global) 마우스 우클릭 &gt; Run Code 클릭 또는 단축키 Ctrl + Alt + n(기본 단축키가 다른 플러그인과 겹치는 경우가 많습니다) 위와 같은 출력 결과를 간단하게 볼 수 있습니다. 주의사항간혹 설정에 문제가 있는 경우 아래와 같은 옵션을 확인해주시면 됩니다123\"code-runner.executorMap\" : &#123; \"typescript\": \"ts-node\"&#125; 모던 자바스크립트를 접하며 혼란스러운 것들 중 하나는 환경설정일 것입니다.물론 알고 넘어가야 하지만 입문자의 경우 이런 다양한 방법을 통해 학습하시는 것도초반에 러닝 커브를 이겨내는 데 큰 도움이 될 수 있을 것 입니다.","categories":[{"name":"programming","slug":"programming","permalink":"https://devjang.github.io/categories/programming/"},{"name":"typescript","slug":"programming/typescript","permalink":"https://devjang.github.io/categories/programming/typescript/"}],"tags":[{"name":"intellij","slug":"intellij","permalink":"https://devjang.github.io/tags/intellij/"},{"name":"visual studio code","slug":"visual-studio-code","permalink":"https://devjang.github.io/tags/visual-studio-code/"},{"name":"CodePen","slug":"CodePen","permalink":"https://devjang.github.io/tags/CodePen/"},{"name":"JS Bin","slug":"JS-Bin","permalink":"https://devjang.github.io/tags/JS-Bin/"},{"name":"JSFiddle","slug":"JSFiddle","permalink":"https://devjang.github.io/tags/JSFiddle/"},{"name":"CodeSandbox","slug":"CodeSandbox","permalink":"https://devjang.github.io/tags/CodeSandbox/"},{"name":"typescript","slug":"typescript","permalink":"https://devjang.github.io/tags/typescript/"},{"name":"run console","slug":"run-console","permalink":"https://devjang.github.io/tags/run-console/"}]},{"title":"이것이 자바다","slug":"2018-04-12-this-is-java","date":"2018-04-11T15:00:00.000Z","updated":"2018-08-13T11:26:44.868Z","comments":true,"path":"2018/04/12/2018-04-12-this-is-java/","link":"","permalink":"https://devjang.github.io/2018/04/12/2018-04-12-this-is-java/","excerpt":"신용권의 Java 프로그래밍 정복! 이것이 자바다","text":"신용권의 Java 프로그래밍 정복! 이것이 자바다 책 정보출판사 : 한빛미디어저자 : 신용권출간 : 2015.01.06페이지 : 1224ISBN : 9788968481475가격 : 30,000 원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=8589375: http://www.hanbit.co.kr/store/books/look.php?p_code=B1460673937 이것이 자바다 카페: http://cafe.naver.com/thisisjava 3강까지만 제공되는 샘플 영상: https://www.youtube.com/playlist?list=PLVsNizTWUw7FPokuK8Cmlt72DQEt7hKZu 소개이전에 국비 지원으로 Java 교육을 5개월가량 받을 때를 제외하고 Java와는 남남처럼 지내고 있었는데 한빛미디어의 은총으로 오랜만에 Java 기본서를 펴보게 되었다. 처음 이것이 자바다를 받아봤을 때는 이미 Java 기본서를 여러 번 접해봤기때문에 뭐 별거 있겠어? 싶었다. JavaScript 같은 경우에는 워낙 다양한 스타일과 종류가 있고 언어 자체가느슨하기 때문에 저자의 스타일에 따라 코드 내용이 다르기도 하지만 Java같은 경우에는 컨셉과 목차 스타일 그리고 코드를 풀어나가는 느낌과 개념 설명 말고는 큰 차이를 알기는 어려웠다. (물론 책마다 완성도는 큰 차이가 있다) 입문부터 깊이까지 초보자부터 숙련자까지큰 기대는 없었다. 워낙 Java 기본서는 책의 가짓수만 해도 어마어마하고 그나마 유명한 책 중 난 정말 JAVA를 공부한 적이 없다구요, 헤드퍼스트 Java, Java의 정석을 읽은 적이 있다(꼼꼼하게 공부하지 못했는지 기억이 잘나지 않는다….) 난 정말 JAVA를 공부한 적이 없다구요: 개념 설명이 쉽게 되어 읽기 좋고 가장 Java를 깨우치는 도움이 되었던 책이지만 구성이 좀 부실했다. (대신 동영상 제공) 헤드퍼스트 Java: 재미있는 책이다. 구성도 마음에 들고 책 설명처럼 뇌를 자극하는 느낌이지만…. 너무 산만하고 레거시하다는 생각도 들었다. Java의 정석: 정말 정적이고 딱딱하다는 느낌을 받았다. 개념에 충실한 정말 교과서 같은 기본서다. 지루해서 읽다가 포기했던 기억이 있다. 현업에서 Java를 하고 있지도 않고 시간이 부족해서 동영상도 보지 못했고 한빛미디어와의 약속이 있기때문에 이것이 자바다는 중요 개념과 궁금한 내용 위주로 읽어 나갔다. 챕터를 마치고 꼭 확인을 한다 이것이 자바다를 보고 느낀 건 정말 완전체 같다는 느낌이였다.1000페이지가 넘는 분량인데 뭐하나 빠지는 게 없고 입문하기에 어렵지도 않으며 나름 딥하기까지하다. 또한 개념 설명은 꼭 짚고 넘어가며 연습문제도 있고 코드 설명이 너무나 친절하다. 영상을 보지는 못했지만 함께한다면 효과는 더 크지 않을까 싶다. Java 개념다른 언어들도 마찬가지이겠지만 Java를 통해 얻을 수 있는 것들이 굉장히 많다. OOP, 인터페이스, 클래스, 다형성 등등 코딩만으로는 해결되지 않는 이러한 개념에 대한 이해가 Java 학습에 있어서 큰 허들이 될 수 있다. 이것이 자바다에서 인상적인 부분은 정말 꼼꼼하게 개념 요소들을 챙긴다.놓치는 게 없다고 볼 수 있을 정도였다. API사실 이 책에 API까지 있을거라고는 생각도 못했고 기본 API정도 밖에는 나오지 않지만 API를 이렇게 쉽게 설명해주는구나…. 감동이였다. API 설명 후기정말 독자를 세심하게 챙긴다는 것을 알 수 있다. 독자를 세심하게 챙기며개념은 꼼꼼하게 놓치지 않고설명은 도식화하여 이해시키려 노력한다. 누군가 Java 책을 추천해달라고 하면 입문일 때는 이 책 언제는 저 책상황에 따라 나눠서 추천했었겠지만 이제는 이것이 자바다 한 권으로 기본을 확실하게 넘어가라고 권하고 싶다. 카페에 가보니 직딩들을 위한 목차가 있었다. 프로그래밍에 처음 입문해도 Java를 처음 배워도 Java를 깊이 있게 보고 싶어도 이것이 자바다 하나로 해결 가능하지 않을까 생각이 들었다. 이 서평은 한빛미디어를 통해 제공받은 서적을 토대로 작성된 리뷰입니다.","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"},{"name":"java","slug":"book/programming/java","permalink":"https://devjang.github.io/categories/book/programming/java/"}],"tags":[{"name":"자바 입문 책","slug":"자바-입문-책","permalink":"https://devjang.github.io/tags/자바-입문-책/"},{"name":"이것이 자바다","slug":"이것이-자바다","permalink":"https://devjang.github.io/tags/이것이-자바다/"},{"name":"신용권","slug":"신용권","permalink":"https://devjang.github.io/tags/신용권/"}]},{"title":"Hello Coding 프로그래밍","slug":"2018-02-18-hello-coding-programming","date":"2018-02-17T15:00:00.000Z","updated":"2018-11-12T04:57:14.228Z","comments":true,"path":"2018/02/18/2018-02-18-hello-coding-programming/","link":"","permalink":"https://devjang.github.io/2018/02/18/2018-02-18-hello-coding-programming/","excerpt":"개념부터 처음 배우는 프로그래밍! Hello Coding 프로그래밍 리뷰","text":"개념부터 처음 배우는 프로그래밍! Hello Coding 프로그래밍 리뷰 책 정보출판사 : 한빛미디어저자 : Pope Kim출간 : 2018.01.02페이지 : 352ISBN : 9791162240342가격 : 19,800원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=12877969: http://www.hanbit.co.kr/store/books/look.php?p_code=B6832340619 소개포프TV로 유명한 유튜버 김포프님의 입문 서적이다. (책에 대한 포프님의 설명)때문에 포프님이 좋아하는 C#을 기본으로 한 책이며 수준은 입문 수준이다 목차부터 심상치 않다 기존의 틀과는 다른 입문 서적보통의 프로그래밍 입문 서적이라면 하나의 언어를 처음부터 끝까지 가르쳐주거나언어에 얽매이지 않고 전체적인 개발의 모든 것을 담기 위한 서적이거나스크래치부터 설명하는 책이거나 보통은 이런 방향이다. 하지만 이 책의 경우에는 개발에 입문하고자 C#을 사용하는 느낌이라고 볼 수 있다.프로그래밍의 개념을 설명하는 방식이 다른 책들과 확연히 다르다는 느낌을 알 수 있었다. 그저 프로그래밍 입문에만 초점을 맞춘 것이 아닌 코드를 어떻게 짜야 하는지 무엇을 주의해야 하는지 의식에 흐름과 방향성까지 놓치지않고 제시해주는 점은 긍정적인 부분이었다. 그런 이유로 그런 건지는 잘 모르겠지만 위의 목차만 봐도 어떠한 언어를 배울 때 주로 볼 수 있는 입문 서적의 목차와는 다르다..일반적인 입문 서적이라면 언어의 개론 =&gt; 변수 =&gt; 흐름 제어 =&gt; 반복문 =&gt; 함수 =&gt; 좀 더 딥하게 를 상상할 수 있다. 친절한 구성 이해를 돕기 위한 도식화와 그림 그리고 폰트 어느 하나 부족함을 느낄 수 없다.포프님의 책이기 때문에 어렵겠지? 이해에 초점을 두지는 않겠지? 생각했으나 큰 오산이었으며한빛답게 정말 친절하고 꼼꼼한 편집으로 책을 즐겁고 편안하게 볼 수 있었다. 기초를 단련하기 위한 문제들 문제는 각 챕터마다 꾸준히 등장하며 기초 문제 &amp; 심화 문제로 이루어져 있다.프로그래밍에 완전히 처음 입문하는 사람들에게는 후반부로 갈수록 점점 어려움을 느낄 수 있지만확실히 실력 향상과 습득에 도움이 된다는 것을 느낄 수 있다. 후기 결국 각 챕터를 완독하고 문제를 풀며 실습을 하게 되고 간단한 게임을 만들게 된다 포프님이 의도한 책의 방향이 이거구나 싶었다 완전히 프로그래밍에 처음 입문하는 사람들에게는 약간 어려울 수는 있으나기존의 프로그래밍 언어적인 개념에 접근한 입문 서적이 아닌 프로그래밍에 대한 개념과 생각에 접근하도록 유도하는 서적이라고 볼 수 있다. 또한 책과 각 챕터마다 나오는 문제를 통해 직접 체험하고 습득하는 재미도 느낄 수 있으며C#을 처음 접하는 사람들도 부담없이 코딩할 수 있는 정말 친절한 구성을 가지고 있다. 한빛미디어에서 Hello Coding 시리즈를 통해 다양한 입문자들의 학습을 돕겠다는 취지가 느껴진다.앞으로도 이와 같은 방향의 책이 많이 출간되었으면 좋겠다. 이 서평은 한빛미디어를 통해 제공받은 서적을 토대로 작성된 리뷰입니다.","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"}],"tags":[{"name":"Hello Coding 프로그래밍","slug":"Hello-Coding-프로그래밍","permalink":"https://devjang.github.io/tags/Hello-Coding-프로그래밍/"},{"name":"c# 입문 책","slug":"c-입문-책","permalink":"https://devjang.github.io/tags/c-입문-책/"},{"name":"김포프","slug":"김포프","permalink":"https://devjang.github.io/tags/김포프/"}]},{"title":"프로그래머의 길, 멘토에게 묻다","slug":"2017-12-30-apprenticeship-patterns","date":"2017-12-29T15:00:00.000Z","updated":"2018-08-13T11:26:44.868Z","comments":true,"path":"2017/12/30/2017-12-30-apprenticeship-patterns/","link":"","permalink":"https://devjang.github.io/2017/12/30/2017-12-30-apprenticeship-patterns/","excerpt":"소프트웨어 개발 분야 새내기를 위한 프로그래머 가이드! 프로그래머의 길, 멘토에게 묻다 리뷰","text":"소프트웨어 개발 분야 새내기를 위한 프로그래머 가이드! 프로그래머의 길, 멘토에게 묻다 리뷰 책 정보출판사 : 인사이트저자 : 데이브 후버, 애디웨일 오시나이역자 : 강중빈출간 : 2010.07.26페이지 : 288ISBN : 9788991268807가격 : 14,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=6332442: http://www.insightbook.co.kr/book/individual/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%9D%98-%EA%B8%B8-%EB%A9%98%ED%86%A0%EC%97%90%EA%B2%8C-%EB%AC%BB%EB%8B%A4 소개많은 사람들이 추천해주는 책으로 유명하기에 구입을 하게 되었다.물론 최근 들었던 이종립님의 발표를 듣고 꼭 읽어봐야겠다 싶었고 출퇴근길을 이용해 읽기 좋은 부담 없는 두께였다. 숙련된 소프트웨어 개발자가 되기위한 길에 아낌없는 조언을 받는 느낌이었다 이 책의 설명 그대로 개발자로 가는 험난한 여정의 지침서 그 자체였다. 어떤 행동을 하면 좋을지 어떻게 배우면 좋은지 어떤 마음가짐을 가지고 있으면 좋은지구체적인 사례과 해결책을 제시해준다. 책의 구성은 패턴 위주로 제공된다. 패턴을 제공한다 (약간의 명언도 포함) 사례와 문제점을 예시로 보여줌 해결방안과 대책을 구체적으로 제시 연관된 패턴 지겨울 정도로 반복되는 정석적인 패턴이지만 놓칠 내용하나 없이 살이 되는 느낌이었다. 국내에서도 도움되는 다양한 사례와 해결책이런 책들을 보면 간혹 국내에서 성장하는 개발자들과는 너무나 동떨어진 이야기도 많고비현실적인 이야기도 많다.하지만 이 책 같은 경우에는 벌써 출간된 지 10년의 세월은 흘렀고외국에서의 사례와 해결책이지만 기가 막히게 도움되는 내용이 많았다. 프로그래밍을 관두고 싶을 때실무경험이 부족할 때열정이 질식되는 환경에 있을 때길을 잃었을 때학습이 더디어졌을 때등등 수많은 패턴과 그에 대한 통한 사례와 해결책을 통해 선배 개발자들의 통찰과 이해를 체험할 수 있다. 개발자의 인생을 살펴보다시작하는 개발자부터 은퇴를 앞둔 개발자까지 다양한 개발자들의 삶을 체험할 수 있다.3년 후 5년 후 10년 후 자신이 어떤 개발자가 되어있을까 멀리 내다보도록 해준다. 후기쓸데없는 걱정이 많고 고민 많은 개발자에게 도움이 되는 책이다.특히 이제 시작하는 신입이나 쥬니어 개발자에게 큰 도움이 되겠지만이미 많은 세월을 보낸 개발자에게도 이 책은 자기 자신을 되돌아보는 성찰의 시간을 주지 않을까 싶다.","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"}],"tags":[{"name":"프로그래머의 길 멘토에게 묻다","slug":"프로그래머의-길-멘토에게-묻다","permalink":"https://devjang.github.io/tags/프로그래머의-길-멘토에게-묻다/"},{"name":"개발자 로드맵","slug":"개발자-로드맵","permalink":"https://devjang.github.io/tags/개발자-로드맵/"},{"name":"개발자 인생","slug":"개발자-인생","permalink":"https://devjang.github.io/tags/개발자-인생/"}]},{"title":"에디터 or IDE 터미널 명령어로 실행하기","slug":"2017-12-24-open-ide-tip","date":"2017-12-23T15:00:00.000Z","updated":"2018-08-13T11:26:44.868Z","comments":true,"path":"2017/12/24/2017-12-24-open-ide-tip/","link":"","permalink":"https://devjang.github.io/2017/12/24/2017-12-24-open-ide-tip/","excerpt":"간단한 설정 한번이면 터미널을 통해 에디터를 실행할 수 있습니다.","text":"간단한 설정 한번이면 터미널을 통해 에디터를 실행할 수 있습니다. 저장소를 새로 만든다던지 git clone을 한다던지 현재 터미널에 있으면서원하는 경로로 에디터를 실행한다는 것이 귀찮을 때가 많습니다. 이런 경우에 정말 너무도 간단하게 명령어 단 몇 글자면 해당 경로에서IDE를 즉시 실행할 수가 있습니다!! (단. MacOS 환경에서의 팁입니다.) Visual Studio Code 명령어로 실행하기 CMD + SHIFT + P 입력 후 위와 같은 검색을 통해 셸 명령: PATH에 &#39;code&#39; 명령 설치를 합니다. 실행을 원하는 경로에서 명령어를 통해 실행합니다 1code . // 주의: code와 . 사이에 공백이 필요합니다. 실행화면 IntelliJ 명령어로 실행하기 IntelliJ 메뉴에서 Tools &gt; Create Command-line Launcher... 를 실행합니다 기본 경로를 제공합니다. 특별한 이유가 없는 이상 여기서 OK만 하면 설정은 끝입니다. 실행을 원하는 경로에서 명령어를 통해 실행합니다. 1idea . // 주의: idea와 . 사이에 공백이 필요합니다. 실행화면 (노트북이 느려서…구동에 시간이 소요됩니다) 참고 : Running VS Code on MacRunning VS Code on Windows","categories":[{"name":"programming","slug":"programming","permalink":"https://devjang.github.io/categories/programming/"},{"name":"tip","slug":"programming/tip","permalink":"https://devjang.github.io/categories/programming/tip/"}],"tags":[{"name":"터미널 에디터 실행","slug":"터미널-에디터-실행","permalink":"https://devjang.github.io/tags/터미널-에디터-실행/"},{"name":"run terminal","slug":"run-terminal","permalink":"https://devjang.github.io/tags/run-terminal/"},{"name":"intellij","slug":"intellij","permalink":"https://devjang.github.io/tags/intellij/"},{"name":"vscode","slug":"vscode","permalink":"https://devjang.github.io/tags/vscode/"}]},{"title":"Adieu 2017 & 내가 신입 개발자들의 멘토인 이유","slug":"2017-12-21-adieu-2017","date":"2017-12-20T15:00:00.000Z","updated":"2018-08-13T11:26:44.868Z","comments":true,"path":"2017/12/21/2017-12-21-adieu-2017/","link":"","permalink":"https://devjang.github.io/2017/12/21/2017-12-21-adieu-2017/","excerpt":"2017년을 회고하며 2018년을 약속하기 &amp; 좋은 개발자 되기","text":"2017년을 회고하며 2018년을 약속하기 &amp; 좋은 개발자 되기 내가 신입 개발자들의 멘토인 이유 도대체 무엇을 했는 가 2017년 배운 것 2017년 실패한 이유 실패는 성공의 어머니 Solution 마치며.. 내가 신입 개발자들의 멘토인 이유2017년 개발자로 첫발을 내디딘 첫해를 돌아봤고얼마나 잘못된 개발자가 되었는지 회고를 통해 알 수 있었다 분명 7월이 시작될 때만 해도 돌아다니는 이 짤방을 보고 불안감을 느꼈지만 개선하지 못한 잘못이 크다. 뒤늦은 11월쯤부터 서서히 정신을 차리기 시작했지만 결국 너무나 늦어버렸다. 이 포스팅을 통해 2017년의 나를 분석하고 나 자신을 멘토로 다시 한걸음 나아가길 기원한다. 도대체 무엇을 했는 가 스터디 (18회) 수많은 스터디에 참여했다. Angular2+, React, Vue, JavaScript, CSS, Git, 비사이드 소프트의 코드스피츠 등등.. 돈을 지불하는 강의형 스터디부터 그룹 스터디까지 수없이 참여했지만 헛된 노력이 많았고 정말 내 것으로 소화해낸 건 많지 않았다. 중간에 파토난 스터디도 꽤 있었고 많지는 않지만 개인 사정상 불참했던 스터디도 있었다. 물론 큰 배움을 얻은 스터디도 있었지만 몇몇 스터디는 내 것으로 소화해내지 못했다. 이에 대한 내용은 밑에서 분석할 예정이다. ​ Seminar &amp; Conference (14회) 정말 많이 느끼고 배웠다. 사실 불필요한 부분도 있고 겹치는 내용도 많고 부실한 내용이 있을 때도 있지만 동기부여와 인생의 터닝 포인트라고 느낄 정도의 감명을 받을 때도 있었다. 앞으로도 꾸준히 참가할 생각이다(과도한 참가는 줄이자) ​ 독서 (7권) 한빛 미디어에서 리뷰를 진행한 덕에 강제로 읽은 책도 있고 개인적인 독서는 JavaScript 기본서 위주였다. 도중에 읽기를 포기한 책도 있지만 처음부터 끝까지 완주한 책은 1년 동안 겨우 7권이다. 이 또한 실속 없이 읽어 무엇이 남았을까 싶다 ​ 첫 취업 그리고 이직 개발자의 취업 그리고 취준생 개발자.. 참 준비할 것도 많고 해야할 것도 많다. 이 시기만큼은 스스로 굉장히 많이 터득하고 배웠다. ​ 블로그 2016년 하반기 Java 국비지원을 받으며 TIL을 작성하는 블로그를 만들었다. (현재 4번째 블로그 이사로 TIL은 다른 곳에 있는 상태) 정말 시간을 많이 쏟기도하고 큰 노력을 기울였다. 나를 되돌아보는 데 도움은 되었지만 아쉬운 건 (과거의 글을 보면서 글을 왜 이렇게 못쓸까 느낀다) 기술적인 글을 작성한 부분이 거의 없다는 것이다.(개발 실력에 대한 자존감이 바닥이였다) 앞으로는 개발 기술에 대한 내용을 다뤄보도록 해야겠다. 2017년 배운 것2017년 망했지만 실패를 분석하기 전에 그래도 배운 것(잘한 것) 을 되짚어본다. 철저한 일정관리 회사를 다니며 사이버대학을 다니다 보니 일정관리만큼은 철저하게 해야 한다. 구글 캘린더 &amp; 구글 keep(Spot Todo 관리) &amp; 회사 맥 &amp; 개인 맥 &amp; 개인 데스크탑 &amp; 스마트폰 모두 연동하여 일정 별로 (1시간 전 ~ 2시간 전 ~ 3시간 전 ~ 하루 전) 알람을 해놓고 생활했다. 너무 변태스럽지만 머리를 언제 잘랐지 궁금해서 시작했던 게 결국 언제 머리를 잘랐는 지까지 캘린더에 저장하는 습관도 생겼고 이제는 달력을 수시로 확인하고 일정 관리를 하지 않으면 불안할 때도 있다. ​ 실제 구직할 때 작성하던 시트 : 실제로는 떨어진 회사가 대부분이고 회사의 내용도 담겨있어서 공개할 수 있는 부분이 많지 않다 구직활동 개발자 구직 활동을 통해 다양한 배움이 있었다. 개인 명함만 들어 면접 시 명함 교환하기 자기소개 페이지를 만들어 도메인 달기 (사실 허접한 static HTML 이력서 2페이지였다) 면접 후 면접 질문 모으고 정리하기 결과를 통해 면접 실패와 성공을 분석 시트를 작성하여 어느 회사에 지원했어 어느 회사에 떨어졌고 어떤 이력서를 제출했는지 정리 지원할 회사를 분석하고 1회사 1이력서 공식 유지 (절대로 같은 회사에 같은 내용을 작성하지 않았다) TIL 블로그 만들기 구직활동에 요령이 생겼고 자신을 돌아보는 계기도 되었다.​ 습관 만들기 예전부터 사소한 습관조차 만들지 못했으나 2017년 습관 만들기에 돌입했고 결국 내 것으로 만들었다. 회사 출근시 계단으로 출근하기 하루에 팔굽혀펴기 30개 하기 회사에서 업무시 1시간에 한번 몸풀기 (스마트폰 알람의 도움을 받는다) 집 앞 버스 정류장이 아닌 2정거장 전의 버스정류장까지 걸어서 버스타기 (운동) 정말 아무것도 아닌 것 같지만 습관을 만들 수 있다는 자신감을 가지게 되었다. 습관의 재발견 :우리는 그동안 “목표는 크게, 높게, 멋있게 잡아야 한다!”는 것을 강요당해 왔다.그래서 늘 버거운 목표에 힘겨워 하다 포기하고, 또 포기하고 언젠가부터는 계획조차 세우지 않게 되었다. 다양한 Tool 사용 개인 성향 때문인지 항상 다양한 도구의 활용법에 관심이 많다. 인텔리J의 모든 단축키를 거의 다 외운다던가 웬만한 플러그인은 전부 설치해서 실행해보고 그 밖에도 다양한 도구들을 활용하고 접하게 되었고 커스텀하여 고쳐 쓰는 것도 좋아한다. 사소하지만 lint 같은 도구들도 정말 깊하게 파면서까지 연구해본다. (개발을 이렇게 했어야 하는 데 아쉬운 부분이긴 하다.) 다양한 커뮤니티 활동과 정보 수집 우리나라의 웬만한 모든 커뮤니티에는 가입한 상태이기 때문에 다양한 정보를 빠르게 접할 수 있다. 심지어 모든 정보를 나를 통해 받는 친구들도 있다. 물론 너무 많은 정보 속에 갈피를 못잡게 된 계기도 생길 수 있다. (사실 커뮤니티 활동이라 적었지만 낯가림이 심한 눈팅족이다) 출처 : http://dontkry.com Front-end 생태계의 이해 Front-end 개발자는 알아야 될 범위가 굉장히 넓고 그 생태계를 이해하는 건 굉장히 중요하다. 사실 지금에 와서 돌이켜본다면 16년 12월부터 Front-end 구직을 시작하여 취업하기까지 Front-end 개발자가 될 만큼 실력도 없었고 Front-end 생태계조차 이해하지 못했다. 물론 지금도 완벽한 수준은 아니지만 Why에 접근하여 생각할 수 있는 것 같다. Front-end 생태계를 얼마나 이해하는지 확인할 수 있는 글 : 2016년에 자바스크립트를 배우는 기분 2017년 실패한 이유왜 실패했는지 변명이 아닌 Why에 접근해본다. 갑작스러운 Front-end 구직 비전공에 5개월을 Java에 spring은 세팅하는 수준정도만 배운 흔히 오키에서 국좀이라고 불리우는 국좀 출신 개발자이다. 공부할 때는 TIL도 쓰고 열심히 공부했었지만 수료를 앞두고 프로젝트를 진행하며 Java보다는 CSS에 재미가 들었다. 그리고 Si에 대한 안 좋은 소문들과 글을 보며 내심 고민에 빠지게 되었고 Front-end 개발자가 되어 스타트업에서 시작한다는 말도 안되는 목표를 세우게 되었다. 국내의 퍼블리셔와 Front-end 개발자의 사이도 착각하게 된 것이다.​: 당신은 JavaScript에 대해 얼마나 알고 있는가? SPA가 뭔지도 모르고 JavaScript와 jQuery의 차이도 갓 알게 된 12월 Front-end 구직을 시작했다. 뒤늦게 AngularJS 책을 여러 권 사서 공부했으나 기본기가 없으니 겉핥기수준이었고 하지만 운 좋게 취업에 성공했다(학원 강사님 말고는 주변에 말려주는 사람이 없었다.) 결국… 기본 실력 없이 기초 수준의 Java만 배우고 Front-end 개발자로 취직 시간관리 실패 일정관리에는 성공했으나 시간관리는 실패했다. 말도 안 되는 소리이긴 하다.한마디로 말하면 일정은 지켰으나 공부에 대한 시간 계획 및 실천은 없던 것이다 오전에는 느긋하게 일하다가 뒤늦게 야근하면 되지 생각한다. 과도한 스터디로 이동시간을 소비한다. (집은 수원 =&gt; 스터디 및 회사는 서울) 출퇴근에 소요되는 시간이 하루에 3시간 이상이지만 버리기만했 다. 멘탈관리 실패 사내에서 React로 된 서비스를 진행했으나 서비스 실패로 결국 폐지를 하게 되었다. 때문에 회사에서 불필요한 개발자가 된 것만 같은 기분이 들었고 사내에 다른 프로젝트는 합류하기엔 기술적으로 거리가 있기 때문에 참여할 수 없는 프로젝트였고.. 결국 몇 개월간 회사에서 뭘했는 지 모르겠다는 생각까지 든다 ​또한 개인적인 문제로 생애 가장 힘든 시기를 마주하게 되었고 결국 한계에 도달하였다. 일을 하며 아무것도 할 수 없는 스트레스까지 받았을 정도였고 이 시기가 너무 길어 개인적으로 공부도 손 놓고 아무것도 할 수 없는 지경에 이르렀다.​ 사내에 전담으로 맡은 서비스가 폐지된 후 슬럼프에 빠지다. 개인적인 사연으로 인한 스트레스 극복 실패 (돈을 빌려주거나 갚을 때 차용증은 선택이 아닌 필수입니다) ​ 연휴를 놓치다 5월 그리고 10월 굉장한 연휴를 맞이했고 공부할 시간과 기회도 충분했으나 빈둥빈둥 놀기만 했고 그렇다고 멋진 휴가를 다녀온 것도 아니다. 개인적으로는 이것이 가장 안타깝다. 황금연휴에 공부할 기회를 버리다. ​ 공부 방법의 문제 정말 수 없이 많은 문제가 있었다. 만약 2017년 회고를 하지 않는다면 2018년에 다시 일어날 기회조차 없이 망했을 것이다. 러닝 커브 극복 실패 문제 해결이 필요할 때 깊은 생각은 피하고 외면할 때가 많았다. 대충 라이브러리로 해결하는 식의 문제 해결이나 어떠한 부분에 대한 지식이 부족할 때 추가적인 학습의 러닝 커브를 이겨내지 못하고 포기한 것이다. 잘못된 독서 독서를 하며 졸거나 코드 타이핑을 넘기거나 독서 중 헷갈리거나 모르는 부분이 있을 때 깊이 파고들기보다는 그러려니 하고 넘기고는 했다. 물론 그러려니 넘기는 경우 책을 2번이고 3번 다시 읽어 소화하는 방식도 있었지만 2번 이상 읽은 적도 없고 간단한 요약의 독후감만 작성하고 독서를 끝냈다. 의식적 무지 무엇을 모르는지 어떤 부분이 부족한지는 알지만 제대로 된 공부를 시작하여 끝을 본 적이 많지 않다. 프로젝트를 통해 만든 것이 없다 수많은 프로젝트와 스터디를 했음에도 불구하고 결과물을 낸 적이 없다. 물론 거의 끝까지 만든 프로젝트도 있었지만.. 결과물을 내는 스터디는 거의 시작부터 망했다. 부담스러운 프로젝트는 스터디원들에게 부작용으로 작용할 때가 있다. 또한 개인적인 토이 프로젝트도 없었으며 겨우 인터넷에 돌아다니는 예제를 따라 만드는 수준이 전부였다. 겉핥기 학습 아는 것 많으나 정작 할 줄 아는 건 없다. 지식의 분포도를 따져 봤을 때 다 얇게 퍼져있기만 하고 어느 하나 깊게 파고들지 못한 부분이 아쉽다. Why가 아닌 How 회사에서 업무를 할때 개인적인 개발이나 공부를 할 때 Why가 아닌 How로 접근하게 되었다. 이런 부분은 지식에 착각을 일으킨다. 결국 알고 있는 것이 아니기 때문이다. 설명서를 보고 만든 것과 직접 만든 것은 큰 차이가 있듯이 어떻게 했는 지만 알고 동작 원리나 구동 원리는 전혀 모르는 것이다. 유행 따라가기 Angular, React, Vue =&gt; Front-end 춘추천국 시대이다. 결국 JavaScript구나 Front-end 개발자도 결국 개발자구나.. 라는 걸 깨달을 때까지 누군가 입이 닳도록 설명해봐야 깨닫기는 힘들다. 고용자에게 Front-end 개발자는 축구에 포지션이 있듯이 결국 포지션일 뿐이라고 생각할 수도 있다. 결국 기본이 가장 중요하다는 것을 알고 있었으면서도 부정하고 있었다. 취업 의식 Front-end 분야는 러닝 커브가 빠르게 올라가고 있다. 분명 16년 12월 구직활동을 할때는 AngularJS가 가장 중요한 자격요건이였으나 3~4월 다시 이직을 준비할 때는 React로 간단한 Todo App 정도는 만들 줄 알아야 지원할 수 있는 수준이었다.(현재는 그 이상으로 러닝 커브가 올라왔다) 공부하고 싶고 개발하고 싶어야 하는 데 취업을 위해 어떤 공부를 해야 되는지부터 생각했고 그 와중에 공부하는 것들에 대한 연관 관계가 말도 안 되게 뒤죽박죽 혼재되었다. 마지막. 스터디 실패 다양한 스터디에 참여했으나 정말 도움이 되어 내 것이 된 스터디는 15% 정도에 불과하다. 실제로 스터디를 다니면서 인터넷 쇼핑을 하거나 딴짓을 하는 분들도 많이 봤다. 물론 나는 그 정도는 아니었지만 집중을 못하거나 복습을 못할때가 있었는 데 이런 경우 스터디는 안 하는 것보다 못한 것 같은 결과를 초래 할 수있다. 실패는 성공의 어머니 Solution이제부터는 실패를 통해 2018년을 계획해본다. 국비지원을 다니던 시절 말로만 노력하는 동기가 입이 닳도록 하는 말이었다.실패는 성공의 어머니! 수료할 때까지 꼭 제 손으로 게시판을 만들겠습니다 적어도 2017년의 나는 그 동기와 다를 바가 없으니 그 동기의 말이 떠오르게 되었다. 기본 실력 없이 기초수준의 Java만 배우고 Front-end 개발자로 취직 11월부터 Harvard CS50 공부를 시작했으며 일단 커넥트재단의 CS50 X edwith를 거의 완강한 상태이다. 앞으로는 운영체제, 알고리즘, 자료구조, 네트워크, 데이터베이스를 공부할 생각이며 18년 1/4분기까지 정보처리기사와 영문 Harvard CS50에 집중하며 알고리즘을 볼 생각이다. Outsider : 언어와 프레임워크가 바뀌어도 바뀌지 않을 지식을 공부하자 자바지기 박재성 : 기초레벨 포기하고 공부했다. 초반에는 통했지만 결국은 기초다. 내가 좋아하고 경쟁력 있는 것 그것만 몇 년을 하자. 오전에는 느긋하게 일하다가 뒤늦게 야근하면 되지 생각한다 시간을 버리지 않고 시간별로 무엇을 했는지 기록하는 수단을 찾는다. (완벽한 공부법을 참고할 예정이다) 칼럼니스트 임백준 : 에너지가 바닥난 사람을 컴퓨터 앞에 앉혀두면 그가 할 수 있는 일은 “잠자코 앉아있기”말고 아무것도 없다. 키보드 위에서 영혼이 담기지 않은 손가락 놀림만 분주하다. 과도한 스터디로 이동시간을 소비한다 불필요한 스터디는 절대 하지 않는다. 스터디에 참여하게 되면 노력 없이 나의 지식이 될 것이라고 착각하지 않고 복습과 예습을 통해 적극적으로 참여한다. 또한 원격 스터디도 제대로 한다면 오프라인 스터디보다 더 좋은 결과를 낼 수 있다. 출퇴근에 소요되는 시간이 하루에 3시간 이상이지만 버리기만 했다 개발자라는 직업을 가지고 서울에서 일하지 않는 것은 힘든 부분이다. 그렇다면 수면시간과 출퇴근 시간을 조율해야 하는 데 이런 시간에 쓸데없이 스마트폰보는 시간은 줄인다. 졸릴 땐 잔다. 졸리지 않다 =&gt; 스마트폰을 절대 보지 않는다 =&gt; 독서를 한다. 우아한 형제들 이종립: 내가 자고 싶은 시간이 아니라 몸이 자고 싶은 시간에 잔다 사내에 전담으로 맡은 서비스가 폐지된 후 슬럼프에 빠지다 어떻게든 훌훌 털어내고 회사와 협의 후 빠르게 다른 프로젝트를 준비하도록 한다. 넥슨 박종천 VP 한가지 회사가 아닌 어느 회사를 갈 수 있는 역량에 초점을 맞춘다=&gt; 능력이 없을 때 생기는 기회는 저주다. 결국 무너지게 된다. 사내에서 자기 발전을 위한 방법을 찾는다.=&gt; 내 능력을 키울 수 있는 방법을 찾는다. 개인적인 사연으로 인한 스트레스 극복 실패 이런 경우에는 질질 끌지 않고 어떻게든 자체적인 휴식기를 마련하여 휴식을 가지는 것이 좋을 것 같다. 우아한 형제들 이종립: 힘들 땐 친구 또는 가족과 가벼운 전화통화를 한다. 황금연휴에 공부할 기회를 버리다 강제성을 부여해서 황금 연휴에 맞는 사이즈의 토이 프로젝트를 선정해서 준비한다. 이상한 모임 by minieetea : 사실 사이드 프로젝트라고 하기에는 투잡에 가까우리만큼 빡빡한 스펙과 일정이었다. 매일 퇴근하고 집으로 달려가 새벽 3-4시까지 작업하고 4시간 남짓을 자며 출근하길 1달. 주말에는 아침에 일어나 새벽 5시까지도 달리는 일이 허다했다. 심지어 해외는 시차가 2시간이나 빨라 한국 새벽반이 눈감을 때쯤 호주 아침반 개발이 시작되어 24시간 개발이 돌아가는 날도 허다했다. 고생했다는 것을 자랑하기보단, 작은 성공의 열매를 맛보았다 얘기하고 싶다. 토이 프로젝트를 완성하려면 얼마나 걸릴까? 잘못된 독서 출퇴근 시간에는 인문학 느낌의 개발 서적을 읽고 있다. 자칫 지루하면 스마트폰의 유혹을 이기지 못하기 때문에 코드보단 인문학 느낌의 책을 선택했다. 또한 읽은 책은 개인 Wiki에 기록할 준비를 해놨다. 우아한 형제들 이종립 : 하루에 3가지 종류(집에서, 지하철에서, 회사에서)의 책을 조금씩 읽고 요약한다 일주일에 35페이지만 읽어도 훌륭한 책을 두 달마다 읽을 수 있다. 의식적 무지 무엇을 모르는지 알면서 공부를 안 하는 저주이지만 다행히도 무엇을 모르는지 알기때문에 모르는 부분에 대한 것을 언제 어디서나 수시로 기록할 수 있는 무지 노트를 작성하고 짬이 날 때마다 무지 노트의 항목들을 클리어하거나 깊이 공부해서 모아놓고 괜찮은 내용은 블로그에 작성해 지식을 나눈다. 프로그래머의 길 멘토에게 묻다 : 무지를 드러내라 무지에 맞섬으로 지식을 습득해나가는 모습을 보여줘라 프로젝트를 통해 만든 것이 없다 분기, 반기, 연간 프로젝트를 계획해서 진행한다. 감당할 수 있는 범위의 프로젝트만 계획하며 Plan B를 계획한다. 작더라도 호기심을 자극하는 재미있는 프로젝트를 진행하자 Velopert : “매일 12시마다 한 시간씩만 투자해서 사이드 프로젝트를 진행하자!” 이 약속을 지키기 위해서, 매일매일 개발 하는 걸, 유튜브에서 라이브 스트리밍을 해서 기록을 남기기로 했다 가상화폐 모의 투자 / 거래소 개발기 겉핥기 학습 &amp; 유행 따라가기 사전에 겉핥기로 봐야 되는 부분과 깊게 고뇌하며 공부해야 할 것이 무엇인지 판단하자 만약 공부해야 될 부분이 변하지 않는 지식이라면 절대 겉핥기 식으로 보지 않도록 한다. 같은 걸 여러 번 만들어서 실력을 쌓는다 괴롭더라도 러닝 커브를 극복하고 이겨내며 다음 단계로 넘어가는 방법을 모색해보자 토비의 스프링 이일민 : 내가 무엇을 포기할지 먼저 정하자. 새로운 기술이 너무 많아 이것저것 다 하면 아무것도 못한다. Why가 아닌 How 프로그래머의 길 멘토에게 묻다를 보면 동기부여가 되는 일을 기억해서 계속 상기시키는 걸 추천한다. 러닝 커브를 만나는 나는 도망치는 걸 선호하는 것 같으니 어떻게든 도전하여 쟁취하는 습관과 마인드를 갖두도록 해야겠다. Okky by fender어떻게보다 왜가 궁금했다면 일단 무슨 오류가 왜 발생했는지 읽어라도 보았을 테고,혼자 해결을 못해서 검색으로 답을 찾더라도 왜 그렇게 하면 문제가 해결이 되는지 이해할 수 있을 것입니다.개발자의 실력은 그렇게 느는 것인데, 그 과정을 통째로 생략하고 그냥 이렇게 생긴 메시지가 나오면 어떻게 하는지 찾아 외우겠다는 식으로 접근해선 경력이 아무리 쌓여도 이른바 통밥만 늘지 개발 실력은 제자리걸음이 됩니다. 취업 의식 불안해서 취업만을 생각하는 공부를 하지 않도록 한다. 흔들리지 않고 꾸준히만 공부 해나간다면 트렌드에 흔들리지 않을 수 있을 것이다 넥슨 박종천 VP : 새가 부러질 수도 있는 나뭇가지에 앉아 있는 것은 나뭇가지가 부러질 것을 두려워하지 않는 것이 아니라 부러져도 날 수 있는 날개가 있기 때문이다. 소프트웨어를 쉽게 개발하는 것이 중요한 것이 아니다. 그 이면에 있는 기술력이 중요하다. 지금부터 착실히 내실을 다지고 그것을 잘 배우며 다른 사람과 충돌하지 않고 착하게 지낼 수 있다면 그것은 그 사람만의 경쟁력이 될 수 있다 스터디 실패 불필요한 스터디는 하지 않는다. 스터디를 한다고 그 지식이 모두 내 것이 될 것이라고 착각하지 않는다. 감당할 수 있는 시간의 스터디만 한다. 나의 부주의로 다른 스터디원에게 피해를 주지 않는다. 이제는 스터디를 주도해서 열고 함께 공부하는 법도 배우도록 할 생각이다 자바지기 박재성 : 사람을 구하는 방향을 바꾸자. 나보다 잘난 사람보다는 나와 성향이 비슷한 사람을 찾자. 나와 성향이 맞는 사람을 찾으려면 나를 드러내야 한다. 맞으면 계속 같이 가는 거고, 아니면 그만 보면 된다. 요약이상한모임의 주제는 회고였고 그 덕분에 2017년 개발자로서의 첫걸음을 분석할 수 있었다.이 회고가 나에게는 너무 큰 도움이 되었고 누군가에게도 도움이 되었으면 좋겠다 세상은 넓고 천재는 많다. 똑똑한 개발자도 많고 나보다 더 노력하는 개발자도 많다.부족한 점을 깔끔히 인정하고 적절한 자존감을 유지해야 꾸준한 학습을 할 수 있다.2018년에는 2017년보다 더 성장해서 개발자 다운 개발자가 되고 싶다.","categories":[{"name":"column","slug":"column","permalink":"https://devjang.github.io/categories/column/"}],"tags":[{"name":"신입 개발자 멘토","slug":"신입-개발자-멘토","permalink":"https://devjang.github.io/tags/신입-개발자-멘토/"},{"name":"2017 개발자 회고","slug":"2017-개발자-회고","permalink":"https://devjang.github.io/tags/2017-개발자-회고/"}]},{"title":"Vuetiful Korea 세 번째 밋업","slug":"2017-12-01-vuetiful-ko-third-meetup","date":"2017-11-30T15:00:00.000Z","updated":"2018-08-13T11:26:44.867Z","comments":true,"path":"2017/12/01/2017-12-01-vuetiful-ko-third-meetup/","link":"","permalink":"https://devjang.github.io/2017/12/01/2017-12-01-vuetiful-ko-third-meetup/","excerpt":"Vuetiful Korea 세 번째 밋업 참가 후기!","text":"Vuetiful Korea 세 번째 밋업 참가 후기! 마루180 Virtual dom to render (우경화 @뉴링크) DOM and Virtual DOMDocument 내부의 태그에 대한 정의와 api를 규격화 한 모델.andDOM을 본따 만든 JavaScript Object. Virtual Dom prevents bad performanceVirtual DOM도 결국 DOM에 patch가 되어야 하니 DOM을 직접 제어하는 코드보다 빠를 수 없다. SnabbDom가장 신기했던 부분이었다.기존에 React &amp; Vue에서 제공하는 VirtualDOM을 더 강력하게 만든다.코드는 그렇게 어려워 보이지 않았으며 Hook과 patch function을 활용한 방법이 재미있었다. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849// 선택된 모듈과 함께 patch function 초기화const snabbdom = require('snabbdom/snabbdom.js');const patch = snabbdom.init([ // 토글 class require('snabbdom/modules/class').default, // DOM 요소 프로퍼티 설정 require('snabbdom/modules/props').default, // 애니메이션을 지원하는 요소 스타일 핸들링 require('snabbdom/modules/style').default, // 이벤트 리스너 연결 require('snabbdom/modules/eventlisteners').default]);let oldv = document.getElementById('static_dom');let vnode = h('div#static_dom', &#123; class: [ 'classed'], style: &#123; color: '#f00', textDecoration: ‘underline’ &#125;, on: &#123; click: changeToButton &#125; &#125;, 'but changed by virtual dom');setTimeout(function () &#123; oldv = patch(oldv, vnode); &#125;, 3000)var obj = &#123; tag: 'button', data: &#123; type: 'button', class: &#123; 'btn': true, 'btn-green': true &#125;, on: &#123; click: function () &#123;window.open('https://kr.vuejs.org/v2/guide/render-function.html','_blank');&#125; &#125;&#125;, children: 'To Vue Blog' &#125;let oldv = document.getElementById(‘dom’)function createVNode () &#123; return h(this.tag, this.data, this.children)&#125;function updateObj (oldv, data) &#123; return patch(oldv, createVNode.call(data)&#125;oldv = updateObj(obj)// obj 내부의 데이터에 setter로 updateObj를 호출 data에 따라 값이 바뀌는 원시 Vue 완성 // Static DOM =&gt; BUT! changed by Virtual DOM Vue render functionvnode는 유일무이해야함 12345678render: function (h) &#123; var vm = this // this는 현재의 component를 가리킴 var myHi = h('p', 'hi') return h( 'div' , … //tag&#123; … //data object class, staticClass, style, &#125;⁰,[myHi, Object.assign(&#123;&#125;, myHi)¹]) //children&#125; patch functionVNode의 변화만 보기 때문에 요소에는 관심이 없다.OLD VNode &amp; NEW VNode로 나뉘게 된다.리렌더링 =&gt; 라이브러리에서 적용한 상태값들이 사라질 수 있음 1234567// vnode 생성 핼퍼 함수var h = require('snabbdom/h').default;var container = document.getElementById('container');// patch function 사용patch(oldVnode, newVnode); 리렌더링이 =&gt; 라이브러리에서 적용한 상태값들이 사라질 수 있음 Vue process실데이이터는 get, set으로 쓰임watch에 설정된 경우에만 컴포넌트의 렌더링 관여하는 Watcher 객체 생성 keep alive를 주로 활용하였다는 데 Life Cycle과 관련이 있는 걸로 보인다. 마지막 한마디 =&gt; Vue is JavaScript결과를 아는 것 &lt; 왜 그렇게 되는 것인지 이해 === Vue를 더 잘 쓸 수 있는 방법 우경화님의 예제 : https://kellywoo.github.io/vnodeSnabbDom : https://github.com/snabbdom/snabbdom발표자료 : https://docs.google.com/presentation/d/1CicMIDXECBg_5Y7TnAf-iF4uXW7PrDoUfAM6hpBCulI/edit?usp=sharing Vue.js로 Unit Test하기 (박성호 @마이리얼트립) TDD를 도입하게 된 계기웹과 앱을 통신하는 복잡한 과정을 개선하기 위해 테스트를 도입하기로 결정 테스트 도구 선택다양한 선택 중 VueCLI의 Karma &amp; Mocha를 선택 테스트의 종류TDD라고 다 같은 테스트가 아니다.테스트의 종류는 다양하기 때문에 다 하는 게 좋다. 컴포넌트 테스트VueCLI의 초기화면 테스트를 예를 들어 보여준 후 간단한 Todo 앱의 컴포넌트 테스트를 보여주었다Vue.nextTick을 활용할 것을 추천했다. 발표자료 : https://docs.google.com/presentation/d/1nOcis4xOElGXpuOTq2mSHQVxIWXzgkaIXKppXpbT5w0/edit?usp=sharing PWA 시작하기 (최준석 @NHN 벅스) 지루한 pwa 설명모든 브라우저 &amp;&amp; 모든 디바이스오프라인 작동 가능 &amp; 앱과 유사하다업데이트 프로세스 =&gt; 최신 상태 유지HTTPS 제공설치 가능레진코믹스나 AWS는 사용 중 application shell캐시 사용 =&gt; 빠른 로딩 속도컨텐츠 동적 이용정말 사용해야 하는 기본적인 구성(데이터, 리소스)만 넣어야 한다 참조 : https://developers.google.com/web/fundamentals/architecture/app-shell?hl=ko 서비스 워커브라우저가 백그라운드에서 실행하는 스크립트설치푸시 알림백그라운드 동기화 참조 : https://developers.google.com/web/fundamentals/primers/service-workers/?hl=ko 사용하면서 어려웠던 부분 SWPrecacheWebpackPlugin기본적인 설정 내용에 따라 추가 Service Worker를 자동으로 생성 기본으로 앱 코드 안에 서비스워커를 등록시켜주는 register &amp; Service Worker 파일 필요 vue-pwa-template의 dev버전에 register 부분은 없다. Production register =&gt; Service Worker를 자동 생성 (설정필요) 튜토리얼대로만 하면 될 정도로 간단하다고 한다. 발표자료 : http://jicjjang.github.io/2017/11/30/vue-pwa-start 스폰서 광고 많은 프론트엔드 개발자의 지원을 기다리고 있다고 한다.(Vuetiful Korea 세 번째 밋업의 간식 후원) OX 퀴즈 (Bob Lee) 전체적으로 문제가 너무 어려웠다… Q&amp;A Q : PWA 개발 후 패키징은 뭐로 하나요? cordova? 같은 걸까요? 요즘 핫한게 뭐가 있는지 궁금합니다.A : 앱스토어 배포가 필요 없다. 레진코믹스를 예로 설명 Q : PWA의 Push는 firebase를 이용하신 건가요?A : Yes! Q : react native처럼 vue로도 native app을 만들수 있는 뭔가가 있다고 들었는데,용어가 기억이 안납니다. 아시는 분 언급좀 부탁드려요!이승민 : Weex! Q : Vue가 Angular에 비해 낫다고 생각하는 점을 설명해주세요이선협 : 당연히 좋다.TypeScript와 Angular는 어렵고 인기 또한 깃헙 Star까지 Vue가 높다 ​Q : 저희도 Vue.js 하는 사람 뽑아요..A : 웍스모바일에서 뽑는다고 한다 ​Q : 서비스에 PWA 적용하니 정말 좋나요? 실서비스 사례도 궁금해요최준석 : pwa 발표자입니다. 실서비스에서 안써봤습니다 흑흑 회사에서 vue 안씁니다… Vue 한국 사용자 모임 Github : https://github.com/vuejs-kr Facebook : https://www.facebook.com/groups/1152461054807344 블로그 : http://vuejs.kr Slack : https://vuejs-korea.signup.team","categories":[{"name":"conference","slug":"conference","permalink":"https://devjang.github.io/categories/conference/"}],"tags":[{"name":"Vuetiful Korea","slug":"Vuetiful-Korea","permalink":"https://devjang.github.io/tags/Vuetiful-Korea/"},{"name":"Vuetiful Korea 세 번째 밋업","slug":"Vuetiful-Korea-세-번째-밋업","permalink":"https://devjang.github.io/tags/Vuetiful-Korea-세-번째-밋업/"},{"name":"Vue 한국 사용자 모임","slug":"Vue-한국-사용자-모임","permalink":"https://devjang.github.io/tags/Vue-한국-사용자-모임/"}]},{"title":"TypeScript에 UglifyJs 적용하기","slug":"2017-11-30-ts-uglify","date":"2017-11-29T15:00:00.000Z","updated":"2018-08-13T11:26:44.867Z","comments":true,"path":"2017/11/30/2017-11-30-ts-uglify/","link":"","permalink":"https://devjang.github.io/2017/11/30/2017-11-30-ts-uglify/","excerpt":"TypeScript에 Babel 없이 UglifyJs 적용","text":"TypeScript에 Babel 없이 UglifyJs 적용 Vue에 TypeScript를 적용하던 중 당황스러운 버그에 종착했다.분명히 다양한 Boilerplate를 참고했음에도 불구하고 webpack에서의 빌드는 정상적이지만 Vue App이 브라우저에 올라갈 때 오류가 뜨는 것이다. 1234Failed to compile.bundle.js from UglifyJsUnexpected token: name (urlParts) [bundle.js:12412,4] 12ERROR in bundle.js from UglifyJsUnexpected token: name (urlParts) 확인해보니 UglifyJS는 ES6를 지원하지 않는다고 한다. TS =&gt; JS 변환된 파일을 Babel로 ES5로 변환한 후에 적용하면 된다는 데… TypeScript는 컴파일 옵션을 통해 컴파일 타겟을 ES5로 설정 가능하기 때문에 굳이 Babel을 사용할 필요가 없다. 이 점이 굉장히 찜찜하여 더 검색을 해본 결과 기본적으로 webpack에서 제공해주는 UglifyJS 플러그인이 아니라 설치를 해서 옵션을 주면 가능하다는 것 별도의 플러그인을 설치1npm i -D uglifyjs-webpack-plugin webpack.config.js123456789var UglifyJSPlugin = require('uglifyjs-webpack-plugin');plugins: [ new UglifyJSPlugin(&#123; uglifyOptions: &#123; // 옵션 적용 &#125; &#125;)] 허무하게 해결이 되긴 했지만 외국에서는 TypeScript with Babel 문제 의견이 분분하다.TypeScript를 적용할 때 다양한 자료를 참고한다면 최대한 최신 자료를 참고해야 하며이슈 목록을 체크해 사전에 삽질을 방지해야 한다.","categories":[{"name":"programming","slug":"programming","permalink":"https://devjang.github.io/categories/programming/"},{"name":"typescript","slug":"programming/typescript","permalink":"https://devjang.github.io/categories/programming/typescript/"}],"tags":[{"name":"TypeScript from UglifyJs","slug":"TypeScript-from-UglifyJs","permalink":"https://devjang.github.io/tags/TypeScript-from-UglifyJs/"},{"name":"TypeScript","slug":"TypeScript","permalink":"https://devjang.github.io/tags/TypeScript/"},{"name":"UglifyJs","slug":"UglifyJs","permalink":"https://devjang.github.io/tags/UglifyJs/"}]},{"title":"GDG DEVFEST 2017 @Seoul Univ GCP","slug":"2017-11-19-gdg-dev-fest","date":"2017-11-18T15:00:00.000Z","updated":"2018-08-13T11:26:44.866Z","comments":true,"path":"2017/11/19/2017-11-19-gdg-dev-fest/","link":"","permalink":"https://devjang.github.io/2017/11/19/2017-11-19-gdg-dev-fest/","excerpt":"GDG DEVFEST 2017 관람 후기","text":"GDG DEVFEST 2017 관람 후기 두번 다시는 오지 않겠다 다짐했지만 또 오게되었다…. Why TypeScript with Clean Architecture by 정유진 프론트엔드 모던 프레임워크 낱낱히 파헤치기 by 한성민 해외 취업이야기 by 정승욱 특별한 취업이야기 by 김태호 리액트와 장고로 만드는 Progressive Web App: 빠르고 단단한 웹사이트 제작하기 by 진유림 사은품 Why TypeScript with Clean Architecture by 정유진 점점 커지는 프로젝트에 관리의 어려움을 느끼기 시작함 Why Typescript with Clean Architecture from 유진 정 문제의식 다양한 지식을 통제 올바른 관점 통일 실수를 최소화 할 수 있는 개발환경 코드 리뷰가 의미 없는 시간으로 변질되고도메인 간의 관계가 서버에서는 관리가 분산 설계를 통해 관리되지만WEB 환경에서는 굉장히 우려되는 현상을 발견하게 되고Type Safe 기반의 아키텍처를 설계하는 것으로 결정하게 된다. Why TypeScript?수많은 후보들 중 결국 TypeScript를 선택하게 되었다.그 이유는 앞으로 지원할 사람을 위한 측면도 있다고 한다. JavaScript -&gt; TypeScript기존의 기술 스택인 React 환경에서 전환하는 데 큰 어려움은 없었다.특히 DDD (Domain-driven design)에 가장 큰 포커스를 두었으며디렉토리 구조조차 DDD에 상응하는 구조로 설계하여 비즈니스 부분도 고려하였다. TypeScript로 변경한 후기 다양하게 혼재되는 관점이 통일되었다. DDD를 적용하여 이제 비즈니스적인 측면이 고려된 설계로 안정감이 더해졌다. 의미있는 코드리뷰를 진행하게 되었다. 개발환경도 중요하지만 회사의 비즈니스측면을 고려한 면그리고 문제의식을 뭔저 자각하고 큰 실행에 옮긴 점이 대단하게 느껴졌다.마지막으로 TypeScript로 이전하면서 큰 시행착오는 없었다는 부분에 감탄하게되었다. 프론트엔드 모던 프레임워크 낱낱히 파헤치기 by 한성민 GDG DevFest 2017 Seoul 프론트엔드 모던 프레임워크 낱낱히 파헤치기 from Kenneth Ceyer JavaScript 라이브러리의 역사 과거에는 객체 사용이 힘들었지만 commonJS 등장 이후에 모듈 개념이 등장하기 시작그 후 AMD의 철학을 따른 RequireJS가 등장하며 끝으로 nodeJS까지 등장하였다.완전히 모듈 관점의 개발이 진행되기 시작하게 된 계기가 되었다. 2017 Front-end의 상황 이제는 배워야할 게 너무나 많다. 절대로 다 배울수는 없다 중요하다고 생각하는 키워드 동적렌더링 모듈링 &amp; 번들링 타이핑 테스트 자동화 그 와중에 나타난 프레임워크 모든 걸 쉽게 만들어 주는 프레임워크! Angular내장된 기능은 좋으나 러닝커브가 크다. React생태계가 넓지만 의존성과 버전에 민감하다. 라이브러리이기때문에 자체적인 기능은 거의 없다. Vue러닝커브와 가벼움에 유리한 점이 많다. 규모가 커지면 재활용성이 떨어진다 코드비교AngularBinding이 강력하다 ReactJSX에 로직이 함께한다. 상태관리가 굉장히 중요하다 VueAngular + React 느낌도 있지만 AngularJS를 떠올리게 된다 트렌딩 검색 순위 &amp; 스택오버플로우Angular &gt; React &gt; Vue(AngularJS + Angular의 경우 가장 큰 사용자를 보유한다 ) Github StarReact &gt; Vue &gt; Angular 진입장벽(쉬움) Vue &gt; React &gt; Angular (어려움) Angular =&gt; 사전에 프레임워크 경험 권장React =&gt; 상태관리와 생명주기가 상대적으로 어려움AngularJS 사용 경험자는 Vue 학습에 유리하다 속도Vue가 가장 빠른 벤치마크를 보인다하지만 Angular에 AOT를 적용한다면 엄청난 퍼포먼스를 보인다 컴포넌트 Angular대규모 프로젝트에 권장 ReactSSR의 경우에 유리 Vue소규모 프로젝트에 권장 템플릿 Angular체계적이지만 다양한 패턴이 존재하여 어려울때가 많다 React템플릿 미지원 Vue간단하고 명시적이다 (AngularJS와 비슷) 개인적인 의견이 많이 들어가긴 한 발표라고 느껴지긴 했다.이제 지겨운 주제라서 보기 싫다는 사람도 많이 봤지만 결국 강당을 다 메울정도로 많은 참가자가 있었다.발표자분께서는 정말 꼼꼼하게 분석해서 좋은 강연을 해주었지만 Vue에 대해서는 약간 부족한 정보가 보였고너무 Vue만 찬밥아니냐는 참가자도 있었던 좋지만 아쉬운 발표였다 해외 취업이야기 by 정승욱 Grab에서 근무하고 계신 정승욱님의 해외취업 경험기한국 개발자들의 많은 지원을 기다린다고 한다. 해외취업을 준비하게된 계기오픈소스 활동으로 Linkedin을 통해 다양한 유수의 헤드헌터에 제의가 많이 들어옴 해외취업 준비과정다니고 있던 회사를 퇴직 후 반년을 영어공부에 매진하였다.거의 하루에 8시간은 영어 공부를 하며 지냈다고 한다. 지원지원은 직접 Apply하였으며 실제로 접촉했던 회사는 AWS, Grab, Shopify 채용프로세스운이 좋아 1개월이 조금 넘는 기간만에 취업에 성공한 케이스하고한다.하지만 그 과정은 굉장히 타이트했음을 강조하였다.레퍼런스를 요구하는 등 영어이기때문에 하고 싶은 말도 다 표현할 수 없는 답답한 점까지 있기 때문이다. 영어면접열심히 공부하고 준비했지만 굉장한 현실은 상대방의 말이 잘 들리지 않아 큰 고생을 했다고한다. 테스트구글 독스를 통해 실시간으로 테스트를 보게 되었다고한다.IDE의 지원도 없기 때문에 오히려 한국에서의 테스트보다 더욱 더 힘들 수 밖에 없었으며컴퓨터 공학 기초인 자료구조와 알고리즘도 당연하게 확인을 하고는 했다고 한다. 해외 개발자 생활이미 다양한 인종의 개발자들과 생활하는 환경이였다특히 인상적인 부분은 같은 언어를 구사함에도 불구하고 너무나 다른 억양으로애로상황이 많기때문에 업무가 지연되기도 한다곻한다 Q&amp;A 영어는 어느 정도를 해야 가능한지당연히 의사소통이 되야한다. 특히 IELTS 점수가 7점을 필히 넘어야만 지원이 가능하다고 본다.(해외에서 1년 이상 거주한 경험과 사회 경력등까지 반영되는 점수라고 한다.) 개발 경력은 어느정도가 되야 해외취업에 적당한지보통 만 3년이상은 되야 지원에 적당하다.특히 인도와 아시아 개발자는 경력에 대한 뻥튀기가 심하기 때문에 그런 인식도 고려해야한다 협업을 하며 언어가 잘 통하지 않는 경우 어떻게 대처하였는 지어쩔 수 없다. 이해할 때까지 계속 되 물어야 한다.결국에는 적어서 의사소통을 하는 경우가 있다. 특별한 취업이야기 by 김태호 구글 한국 지사 근무중인 김태호님의 이야기를 들어보았다. 구글에 지원재직 중에 직접 지원하게 되었으며 12월에 지원하고 3월에 최종합격하게되었다 면접오히려 외국인 면접관이 더욱 편했다.특히 한국인 면접관은 압박 질문을 시도하여 어려울 때가 많았다.기술지원 직무였지만 똑같이 구글 독스를 통해 테스트를 하는 경우가 있다고 한다.한때 유행했던 구글의 신기한 면접방법 (ex. 전 세계의 셔틀버스는? 버스에 들어가는 농구공의 개수는?)이제 그런 질문은 안한다고 하니 걱정하지 말라고 한다. 영어공부 오버워치 영어로 하기(농담이 아니라 진심임을 강조) 컨퍼런스 동영상들 많이 보기등등 다양한 시도를 했다 다양한 문화의 사람들과의 협업굉장히 친하게 지내고 있기때문에 허물없이 잘 지내고 있다.(의사소통이 통하지 않을때 What?!이라고 할 수 있는 정도) 리액트와 장고로 만드는 Progressive Web App: 빠르고 단단한 웹사이트 제작하기 by 진유림 Progressive Web App (feat. React, Django) from Jay Jin PWA 제작 계기 기존에 운영하던 재고관리 시스템(Boxture)을 앱으로 보게 해달라는 요청을 받음 다양한 플랫폼 중 변화에 유동적으로 대처할 수 있는 PWA 고려 IOS와 Safari가 미지원인 점이 아쉽지만 강력한 Service Worker에 감탄하여 적용하게됨(Apple측에서도 지원을 준비하고 있으니 기다려보자) PWA 개발에 좋았던 점 기존에 사용하던 CRA(Create React App)을 사용하여 바로 적용할 수 있었다. Service Worker에서 도와주는 부분이 굉장히 많았다. 쉽게 쉽게 적용할 수 있는 부분이 많았다. 완벽하지는 않지만 네이티브의 푸쉬도 가능하다. PWA 시행착오.. 쉽게 쉽게 할 수 있지만 만만치 않았다. 특히 캐시관련 이슈가 골칫거리였다. 네이티브 기능의 모든 부분을 대처할수는 없다. 꼭 필요할때만 적용하자.. 꼭 다양한 관점으로 고려할 것. Boxture를 빡쳐라고… React와 django에 대한 얘기는 거의 없었던 부분이 아쉽긴하지만 굉장히 인상적인 부분이였다.사내시스템이 아닌 실제 소비자에게 넘어가는 프로젝트라면 아직 어렵겠지만 개인 프로젝트를 하며익혀보는 것도 나중을 위해 좋아보인다. PWA의 장점을 확실하게 느낄 수 있는 발표였다. 사은품역시나 엄청난 인파 끊임없이 고생하신… 마우스 &amp; 티셔츠","categories":[{"name":"conference","slug":"conference","permalink":"https://devjang.github.io/categories/conference/"}],"tags":[{"name":"gdg","slug":"gdg","permalink":"https://devjang.github.io/tags/gdg/"},{"name":"gdg 2017","slug":"gdg-2017","permalink":"https://devjang.github.io/tags/gdg-2017/"}]},{"title":"비전공 학원출신 SI개발자, 유명스타트업 들어간.ssul","slug":"2017-11-16-okky","date":"2017-11-15T15:00:00.000Z","updated":"2018-08-13T11:26:44.866Z","comments":true,"path":"2017/11/16/2017-11-16-okky/","link":"","permalink":"https://devjang.github.io/2017/11/16/2017-11-16-okky/","excerpt":"35살, 비전공 (철학과), 국비지원 학원에서 개발 공부, 웹에이전시 4년 경력이 전부. 누가 봐도 ‘좋은 회사’ 들어가기 어려워 보이는 이 스펙을 갖고 있는 개발자는많은 개발자들의 선망의 대상인 우아한형제들에 어떻게 들어갈 수 있었을까요?","text":"35살, 비전공 (철학과), 국비지원 학원에서 개발 공부, 웹에이전시 4년 경력이 전부. 누가 봐도 ‘좋은 회사’ 들어가기 어려워 보이는 이 스펙을 갖고 있는 개발자는많은 개발자들의 선망의 대상인 우아한형제들에 어떻게 들어갈 수 있었을까요? 노상범 대표님이 작성했던 글 어린 시절 개발공부 회사생활 건강, 정신건강 SI 탈출 계획 Q&amp;A 발표자료 그 외에 후기 포스팅 이종립님 노상범 대표님이 작성했던 글 철학과 졸업 후 아마추어 운동선수, 보험회사 텔레마케터, 보습학원 강사 등의 일을 하다가다소 늦은 나이에 개발을 시작했지만 본인의 환경을 극복하고개발자로서의 새로운 멋진 인생을 펼쳐나가고 있는 개발자 이종립님을 모시고개발공부는 어떻게 공부했고, 보다 나은 개발자가 되기 위해본인은 어떤 노력을 기울였는지에 대한 얘기를 들어보는 시간을 마련했습니다. https://okky.kr/article/320736?note=1053695https://okky.kr/article/423962 어린 시절 운동 -&gt; 학원 강사 -&gt; 보험 텔레마케터 -&gt; 학원 강사(사회의 부조리를 알게 해준 직업들만 언급) 어린 시절 운동을 평생 할 줄 알았다하지만 운동을 그만두고 아르바이트를 하다 우연히 학원 강사로 취직강사를 그만두고 대학을 다님 (전공 철학과) 졸업을 하였으나 취직에 실패하여 백수가 됨 보험 가입 권유를 받았으나 백수라 보험 회사에 취직했으나영업에 소질이 없어 그만두고 다시 학원 강사로 취직100만원 조금 넘는 월급을 받으며 강사에 재능을 보였으나말도 안 되는 부조리한 이유로 잘리게 되었고 다시는 학원 강사가 되지 않겠다는 다짐을 하며앞으로는 앉아서 하는 일을 하게되겠다며 결심하게 된다 개발공부 결국 개발자 친구에 권유로 국비지원 학원에 다니게 된다.31세, 철학 전공, 통장잔고 50만원돈 부족 -&gt; 가계부 개발시간 -&gt; 시간 활용 궁리경험 부족 전공자가 아니기 때문에개발 상식 부족 -&gt; 여러 사람의 추천서 탐색무엇을 공부해야 할지 모른다 -&gt; 방통대 커리큘럼, 전공과목 소개 참고새롭게 배워야 할 것이 많다 -&gt; 일지 / 레포트 기록 for문에 파일 입출력만 배운 상태에서 가계부를 개발수면시간을 정해놓고 밥을 먹으면서도 동영상 강의를 시청도서관 및 도서구입을 하며 전공 공부를 꾸준히 하게 됨 막노동을 하던 시절 막 노동 현장의 단어를 모른다고 무시당했던 생각에개발자가 되어서도 무시하지 않겠다며 개발에 모르는 단어를 무조건 숙지 학원 수료 후 취직조건은 가장 가깝고 연봉을 많이 주는 곳으로!! 회사생활회사에서 도서 구입을 굉장히 많이 했다프로젝트 중 남는 시간에는 무조건 독서를 했다2주에 한 번은 서점에서 분위기 파악도서관 도서 구입 의뢰를 활용 독서를 효율적으로 열심히 하루에 3권 (조금씩 읽고 요약)집 - 샘플코드 위주출퇴근길 - 재미학원&amp;회사 - 회사에 도움 되는 책 건강, 정신건강개발자 마인드를 가지려 노력 (정품 사용)-&gt; 라이선스와 자료의 소중함을 깨우친 굉장한 경험꾸준한 청결관리일주일에 한 번은 필히 운동항상 계획을 세웠으며 Plan B도 생각함(모든 계획을 망한다는 전제하에 세움)힘들거나 슬럼프가 왔을 때는 가벼운 전화통화를 한다. Code Complete 2/E 을 처음 본 게 굉장한 도움과 믿음을 가지게 되었다프로그래밍 책을 두 달마다(일주일에 35페이지) 읽을 수 있는 용기를 주었다 독서 중 잠이 올 때는 아예 책을 타이핑해서 베껴버렸다..그러던 중 손가락에 관절염이 생겨 Vim으로 코딩하게 되었다.결국 Vim 플러그인 제작 후 깃헙 순위에 2위까지 올라간 뿌듯한 기억 SI 탈출 계획 경직된 수직구조의 회사에 파견..정부기관 파견 당시 말도 안 되는 계약관계와 예산에 충격에 PM과 다툼파견 중 정부기관에 오래 일한 사람에게 커피를 주고 개발 환경 개선에 큰 도움을 줌마구잡이로 공부하다 결국 파견이 가기 싫어 이직에 유리한 방향으로 공부 방법을 바꾸기 시작 내 실력을 정직하게 드러낼 수 있는 곳을 이직의 목표로 잡게 된다 지원 회사 리스트 작성 =&gt;합격률이 높은 곳부터 지원하며 면접 정리 우연한 기회에 헤드헌터와 연락이 되고우아한 형제들에 지원하게 됨 =&gt;코딩테스트 중 문제당 각 10개씩 테스트 케이스 돌고 다양한 언어를 사용(JS,SQL,Java,Scala)라스칼라코딩단에 우아한형제들의 사람들이 있다는 소문을 들었다는.. TDD에 빠져있던 때인데 TDD의 얘기만 1시간 가량하다 합격! 책을 보고 요약하는 습관 공부에 일지와 주별로 자기 자신에게 제출하는 리포트를 작성 좋은 프로그래머란, 일방통행 도로에서도 양쪽을 모두 보고 건너는 사람이다. 팀플레이 : 다른 사람을 도울 방법작은 도구를 만드는 습관 : 같은 일을 수작업으로 처리하지 않는다.기억력을 보관하는 습관 : 블로그/개인 위키를 작성하고 관리한다좋은 음식과 충분한 수면항상 플랜B 준비알상 생활에서도 최적화 고민 Q&amp;A SI에서의 습관 지속 방법-&gt; 연봉과 술 그리고 공부를 방해하지 않는 회사만 입사유지 보수할 때는 회사에서 자동화 프로그램을 만들어주며 공부 유지 보수 회사에서 자동화 프로그램을 만들어주고 나서의 오히려 요구는 어떻게 대응했는지?-&gt; 친분이 되었을 때만 도구를 만들어줌. 만들어준 도구에 대해서 설명을 해주고 다 해줌 (전공에 1년 경력) 취업 준비 중이며 스터디를 하며 낙방을 통해 자신의 한계를 알게 됨공부를 더 할지 하향지원을 할지…-&gt; 이직이 단 한 번이라 조언이 힘들다. 나였다면 낮은 회사를 가서 배울 거 다 배우고 이직하겠다.프로그래머의 길 멘토에게 묻다라는 책을 읽어보길 권장한다 코딩 테스트 대비를 어떻게 했는지.. 알고리즘 공부 방법-&gt; 사람마다 공부의 방법은 다르다. 본인은 불안함이 가득해서 빠르게 답을 보고 공부한다.무조건 소스를 많이 본다 상황마다 방법은 다른 것이다 책만 읽는다고 공부가 되느냐… 언어는 어느 정도 공부하고 다른 공부를 공부하느냐-&gt; 언어를 마스터하는 건 불가능하다. 적당히 하고 딴거 하자 파고들면 끝이 없다.언어의 특징과 대표적인 부분을 파악하는 것도 도움이 된다. 언어를 사용하는 문화가 다르다.패러다임만 파악해도 비슷한 부분은 굉장히 빠르기 익힐 수 있다.최소 3개의 다른 언어를 파악하는 것도 좋다. 매년 1월 1일 새로운 언어를 하고 있다.책은 아무리 사소한 코드라도 코드 타이핑을 한다 좋은 개발자와 다양한 경험-&gt; 질투가 너무나 심하고 불안하기 때문에 누구보다 잘하려고 노력했다.문제를 1등으로 풀지 못하면 정말 질투가 나서 더 공부했다. 요약 비전공자이지만 엄청난 계획을 그대로 행동하고 실천하였다. 항상 플랜B가 있었다. 이렇게 해서 안되면 이렇게 하지 뭐 아 그래 저렇게 해볼까? 꽤나 치밀한 전략으로 우아한 형제들 입사에 큰 작용을 하게 되었다. 결국 미친 듯한 노력을 보였다. 자기 관리에 투철한 점이 돋보였다. 엄청난 독서량을 소화하며 다양한 미니 프로젝트를 통해 꾸준히 코딩했다. 기록과 리포팅을 통해 독서를 요약했다. 이런 삶을 SI에서 일하며 4년 이상 유지했다. 발표자료: https://www.slideshare.net/ssuser69b63d1/ss-82150195 그 외에 후기 포스팅:https://okky.kr/article/425700:https://okky.kr/article/425800 이종립님 깃헙 : https://github.com/johngrib 블로그 :https://johngrib.github.io","categories":[{"name":"conference","slug":"conference","permalink":"https://devjang.github.io/categories/conference/"}],"tags":[{"name":"okky","slug":"okky","permalink":"https://devjang.github.io/tags/okky/"},{"name":"이종립","slug":"이종립","permalink":"https://devjang.github.io/tags/이종립/"}]},{"title":"러닝 자바스크립트","slug":"2017-08-13-learning-js","date":"2017-08-12T15:00:00.000Z","updated":"2018-08-13T11:26:44.866Z","comments":true,"path":"2017/08/13/2017-08-13-learning-js/","link":"","permalink":"https://devjang.github.io/2017/08/13/2017-08-13-learning-js/","excerpt":"ES6로 제대로 입문하는 모던 자바스크립트 웹 개발! 러닝 자바스크립트 리뷰","text":"ES6로 제대로 입문하는 모던 자바스크립트 웹 개발! 러닝 자바스크립트 리뷰 책 정보출판사 : 한빛미디어저자 : 이선 브라운역자 : 한선용출간 : 2017-07-11페이지 : 464ISBN : 9788968483387가격 : 28,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=12181869: http://www.hanbit.co.kr/store/books/look.php?p_code=B2328850940 소개ES6로 JavaScript를 입문!정말 이 책의 부제와 어울리는 내용과 구조의 책이다.번역에 대한 악평이 꽤나 많은 데 번역이나 내용이나 만족스러웠으며매끄러운 책으로 번역에 걱정이 있으신 분들은 걱정하실 필요가 없을 듯하다. 입문으로 볼 수는 있지만 아예 프로그래밍에 대한 지식이 없거나프로그래밍 언어에 대한 학습이 전무하다면 이 책은 어려울 수가 있다. ECMA Script 2015로 접할 수 있는 JavaScript의 세계요즘 JavaScript 서적은 ES6 이전과 이후로 나눌 수 있을 정도로 내용 차이가 굉장히 크다.하지만 ES6 이후에 나온 책들은 너무 ES6에 대한 설명과 레퍼런스로 가득하다. 러닝 자바스크립트는 ES6에 집중하기보다는 포함된 입문 서적의 느낌이다.지나치게 ES6가 많지도 않고 너무 적지도 않고 ES6 이외의 내용까지 적절하게 섞여있다.때문에 요즘 JavaScript가 어떤 JavaScript인지 알고 접근할 수 있다. 또한 책 디자인부터 설명까지 세부적인 요소까지 따라주니 지루할 수 없이 술술 익힌다. Front-end 맛보기Front-end 입문이 가장 어려운 이유는 너무나 빠르게 변하고 없어지기 때문이다.Webpack, Gulp, Git 등 수많은 개발도구에 시달리기에 시작도 전에 지쳐 쓰러질 수가 있다.러닝 자바스크립트에서는 천천히 그리고 꽤나 꼼꼼하게 개발 도구들에 대해서 설명을 해놓았고막상 따라 해보니 초보자들도 쉽게 따라 하며 자신감을 가질 수 있겠다는 생각이 들었다 후기너무나 마음에 드는 책이었다.JavaScript를 입문하려는 사람도 많아졌으며 JavaScript를 통해 개발에 입문하려는 사람도 많아졌다.때문에 누군가에게 자바스크립트에 대한 책을 추천하거나 학습을 추천할 때ES5 이전 버전보다는 차라리 ES6부터 학습을 하길 권장했었는데 이 책이 정말 제격이 아닐까 싶다. 요약 장점 입문서까지는 아니지만 처음 JavaScript를 접하는 사람도 쉽게 접근할 수 있다. 일명 코뿔소 자바스크립트 완벽 가이드만큼은 방대하지는 않지만 ES6 코뿔소라고 볼 수 있다 정규표현식, 비동기, NodeJS, jQuery까지 친절히 다룬다. 챕터 2 자바스크립트 개발 도구 부분이 심플하지만 입문자들에게 도움이 될 것 같다. 단점 챕터별로 다르지만 깊이나 설명이 부족한 부분이 간혹 나온다. 순수하게 ES2015만 다룬다고 기대하면 실망할 수 있다. ES2015 환경 속의 JavaScript 책이다. 이 서평은 한빛미디어를 통해 제공받은 서적을 토대로 작성된 리뷰입니다.","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"},{"name":"javascript","slug":"book/programming/javascript","permalink":"https://devjang.github.io/categories/book/programming/javascript/"}],"tags":[{"name":"러닝 자바스크립트","slug":"러닝-자바스크립트","permalink":"https://devjang.github.io/tags/러닝-자바스크립트/"},{"name":"javascript es6","slug":"javascript-es6","permalink":"https://devjang.github.io/tags/javascript-es6/"},{"name":"es6 코뿔소","slug":"es6-코뿔소","permalink":"https://devjang.github.io/tags/es6-코뿔소/"}]},{"title":"앵귤러 첫걸음","slug":"2017-07-14-first-step-angular","date":"2017-07-13T15:00:00.000Z","updated":"2018-08-13T11:26:44.865Z","comments":true,"path":"2017/07/14/2017-07-14-first-step-angular/","link":"","permalink":"https://devjang.github.io/2017/07/14/2017-07-14-first-step-angular/","excerpt":"개발 환경 설정부터 컴포넌트 테스트까지 다양한 예제로 익히는 Angular! 앵귤러 첫걸음 리뷰!","text":"개발 환경 설정부터 컴포넌트 테스트까지 다양한 예제로 익히는 Angular! 앵귤러 첫걸음 리뷰! 책 정보출판사 : 한빛미디어저자 : 조우진출간 : 2017-06-01페이지 : 488ISBN : 9788968486807가격 : 28,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=12096305: http://www.hanbit.co.kr/store/books/look.php?p_code=B3348481708 후기이 책은 이미 베타 리딩을 통해 접해본 경험이 있는 책이었다.처음 원고를 보고는 실망을 했었지만 직접 보면서 예제 부분이 맘에 들었던 책으로굉장히 디테일하게 베타 리딩 소감을 전달했던 것이 기억난다. 일단 한빛에서는 “첫걸음” 이라는 책 제목을 요새 많이 쓰지만 첫걸음으로는 무리가 있다.왜냐하면 요새 앵귤러나 리액트를 공부하려는 경우 개발자들도 많지만퍼블리셔들도 있을 뿐만 아니라 개발을 접하는 입문자들이 다양하기 때문이다. 때문에 Angular나 React를 위해서는 JavaScript뿐만 아니라Webpack, Babel, TypeScript, EcmaScript2015+를 습득해야 하는 데이 책에서는 간단히 부록 형식으로만 다루기 때문이다. 하지만 기초 수준의 이론을 설명하고 예제로 시작하는 흔한 과정이 아닌예제를 통해 앵귤러를 접할 수 있는 책이다 예제만 잘 따라 하다 보면 어느새 실력이 쌓여있는 것을 볼 수 있을 것이다 저자는 도식화에 꽤나 많은 신경을 쓴다 독특하지만 현실적인 예제 위주의 서적베타 리딩을 할 때는 몰랐지만 저자분께서 실제 현업에서 앵귤러를 접하며습득한 것을 알게 되었고 어쩐지 예제가 독특하지만 대충 만든 예제가 아닌 깊이 있는예제들로 빼곡하다는 걸 알 수 있었다. 보통 Udemy 같은 동영상이나 실제 레퍼런스를 참조하며 공부했었는 데Udemy에서 참신한 예제를 볼 때마다 역시 외국물은 다르구나 생각하고는 했는데 이 책에 있는 예제들 또한 이에 전혀 뒤처지지 않는다. 왜냐하면 국내에는 Firebase를 다룬 서적이 아직 없는 걸로 알고 있는 데이 책에서는 Firebase도 다루고있다.물론 굉장히 크게 다루는 건 아니지만Angular와 Firebase는 모두 구글에서 제공하는 서비스와 프레임워크이기 때문에연동하여 학습하기 굉장히 좋다. 특히 해외에서는 Angular를 학습할 때 Firebase가 빠지지 않고 등장한다 또한 구조를 도식화하여 자주 설명해준다.Componont 구성은 중요하기 때문에 저런 구조를 시각화해서 보여준다는 것은 필수라고 볼 수 있다 코드를 알아보는 데에 불편함이 없었다. 기초와 입문을 프로젝트를 통해 경험한다입문 또는 기초를 위해서라면 어쩔 수 없이 ES6, TypeScript, JavaScript 등등배워야 하는 건 산더미이다. 하지만 “앵귤러 첫걸음”과 함께라면 믿고 예제 위주로 습득을 하며필요하거나 헷갈리는 부분을 찾아가며 공부하는 것도 굉장히 효율적이며빠르다고 생각이 든다. 어떻게 사전 학습 없이 앵귤러를 공부 할 수 있을까?싶지만 그걸 위해서 지루하게 ES6와 TypeScript의 기초를 습득하다가흥미를 잃기보다는 이렇게 예제 위주로 시작하는 것도충분히 좋은 학습방법이라는 것을 알 수 있다 심화 예제가 꽤나 알차다 요약 장점 재미있고 참신한 예제가 다양하게 있다. 국내에 Firebase를 배울만한 책은 없기 때문에 좋은 기회인 것 같다. 예제마다 도식화에 굉장히 친절하다. 단점 TypeScript &amp; ES2015+ 등 기본적인 부분을 모르면 보기는 어려울 것 같다. 정신없이 타이핑하다 보면 흐름이 끊길 때가 있는 데 구성이 헷갈릴때가많다. 직접 세팅을 하는 부분도 있으면 좋을 텐데 AngularCLI 환경에서만 실습한다. 이 서평은 한빛미디어를 통해 제공받은 서적을 토대로 작성된 리뷰입니다.","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"},{"name":"framework","slug":"book/programming/framework","permalink":"https://devjang.github.io/categories/book/programming/framework/"}],"tags":[{"name":"앵귤러 책 추천","slug":"앵귤러-책-추천","permalink":"https://devjang.github.io/tags/앵귤러-책-추천/"},{"name":"앵귤러 예제책","slug":"앵귤러-예제책","permalink":"https://devjang.github.io/tags/앵귤러-예제책/"},{"name":"앵귤러 첫걸음","slug":"앵귤러-첫걸음","permalink":"https://devjang.github.io/tags/앵귤러-첫걸음/"}]},{"title":"나는 자바스크립트 개발자다 by JSDev.KR & React Korea The 1st MeetUp","slug":"2017-03-15-jsdev-react-1st-meetup","date":"2017-03-14T15:00:00.000Z","updated":"2018-08-13T11:26:44.865Z","comments":true,"path":"2017/03/15/2017-03-15-jsdev-react-1st-meetup/","link":"","permalink":"https://devjang.github.io/2017/03/15/2017-03-15-jsdev-react-1st-meetup/","excerpt":"JSDev.KR &amp; React Korea The 1st Meet up 관람기!","text":"JSDev.KR &amp; React Korea The 1st Meet up 관람기! 이종은 신정규 김종광 김동우 질의응답시간 자바스크립트 개발자 포럼 (JSDev.KR) React Korea (Facebook Group) 이종은React Native 번역서의 저자 나는 자바스크립트 개발자다.한 가지 언어로 개발한다면 본인은 자바스크립트로 한다! 사랑자바스크립트를 안다고 생각하면 안된다!호기심을 가지고 자바스크립트를 알고 이해해야 한다.Kyle Simpson =&gt; You Don’t KnowJS자바스크립트 완벽가이드 JS 커뮤니티는 그전부터 존재했으니 많은 사랑을 부탁했다. 커뮤니티란같은 관심과 의식으로 환경을 공유하는 사회 집단이다 or 광장같은 관심사를 가진 누구나 묻고 답하고 나누는 공간이 되었으면 한다. 나는 커뮤니티를 통해 질문을 해본 적이 있다 답변을 해준 적이 있다 다른 사람이 내가 궁금한 질문을 하는 것을 본 적이 있다. 질문 또한 다른 사람에게 도움을 주는 행동이다 질문은 자세한 정보로 정중하게 답변은 친절하게 질문에 답변을 받고 글을 지우지 말자 신정규 React의 JSX에 분노하여 폴리머를 선택하여 개발한 후기를 공유했다. 문제의식이 무엇인지 생각하자문서? 런타임? 충돌 : 종교 전쟁의 시작W3CWHATWG 2007~2012HTML5로 양 집단의 정의 현재 기업이 개발하는 브라우저크롬 / 엣지 기업 외 브라우저파이어폭스 IOS자기의 길을 걷는다 런타임 플랫폼의 현재 HTML Import Shadow DOM Custom Elements Templates Post-mobile era모바일의 미래후진국형 모바일 시장 런타임 플랫폼적 요소 (미래)WebUSB / WebBluetooth / WebMIDINative ClientsWebGLWebAssemblyWebPaymentsStreamsRequestldleCallbackPassive event listenerResourceHintsImageBitmapMediaRecorderCSS Variable모두 크롬북을 만들다 만들어진 것이다 Web ComponentsHTML ImportShadow DOMCustom ElementTemplates 하지만 크롬에서만 지원을 해준다WebComponent.jspolyfill 지원Lite 버전도 있다. 우리는 구글신이 만든 걸 가져다 쓰기만 했다는 것을 강조 Polymer library HTML5 Component Library Web component 기민함 재사용 가능 구글의 모든 부분에 담겨있다 요약 Polyfill 브라우저가 안되는 부분을 도와준다 양방향 바인딩 템플릿 + 스타일 + Component 상속지원(정확하게 말하면 메서드 바인딩) 직관적인 구조 장점 올인원 솔루션 WebComponent.js에 공헌 Component-driven 크롬 부라우저에서는 네이티브 지원 단점 크고 무겁다 DOM Element 의존성 체크 오버헤드 불안정 (버전업으로 인한 Component 변화가 심하다) 관련 접근 Progressive Web App웹을 앱처럼NodeJS에서 Service Worker 오프라인 지원 PRPL 패턴초기에는 중요한 Component들만 푸시첫 루트를 그림 김종광 자투리 시간을 이용하여 VPN을 시도하였으나…. 실패 Ext JS Angular나 React와는 다르게 Web Component가 하나 더 있다. Grid가 강력하다 (다양한 적용 가능) 유행이 지난 기술은 분명하다! 하지만 유용한 부분이 아직 존재한다. 김동우 스타트업 시작비전공으로 시작한 개발자 누군가의 설득에 스타트업을 시작해버렸다..스타트업이 잘 되지 않았다 행운아처럼 보이는 뉴비 스타트업은 모바일앱 앱을 만들기 시작 네이티브 역량이 되지 않아 JS모바일 앱 만들기 시작 Titanium &amp; NodeJS &amp; ParseServer를 시작 3개월 만에 앱 제작 성공! (이름은 학원 어디가) Web 시작 =&gt; React로 시작 JavaScript의 확장성 데스크탑 : 일렉트론 게임 : 유니티 IoT &amp; Robot : NodeBots101, Cylon.JS 잘 만들어졌다고 생각하는 하이브리드 앱 질의응답시간출처 : 자바스크립트 개발자 포럼 React 네이티브로 IOS &amp; Android 빌드 및 확장성?=&gt; 이종은: 웹이 React로 되어있다면 무조건 React 네이티브가 좋다. React 개발자가 있다면 더 좋다.=&gt; 게스트: 충분히 상관없다. 속도도 괜찮다. 하지만 네이티브 코드가 늘어난다면 React 네이티브를 사용할 이유가 없다. 동적인 기능이나 Page가 많아지면 퍼포먼스가 어떤지 JS코드에 무리가 갈 것 같다.=&gt; 게스트: 페이지가 70개고 D3를 사용했지만 성능적인 이슈를 겪은 적이 없다.=&gt; 이종은: React는 가상DOM에서 바뀐 부분만 변하기 때문에 크게 걱정할 필요는 없다. React 네이티브 팀원 구성이 어떤지 (이종은)=&gt; JS와 ES6를 알면 React를 배울 때 어려운 점이 없다. 구조도 쉬우며 만드는 데 어려움을 느끼지 못했다. 모든 걸 자바스크립트로 할 때 김동우님이 뉴비와 단둘히 개발하면서 어떻게 관리해야 할지=&gt; 뉴비는 Java 국비지원에 안드로이드 조금 배운 수준으로 JS 활용하여 아주 작은 TodoList 만들 수 있는 수준이었다.하지만 서로의 위치를 알려주는 어플을 타이타늄을 활용하여 스터디 차원에서 만들어보았다.개인 스터디 2주 시간 부여 / 코드 기여 50%결론적으로 뉴비도 할 수 있지만 IOS &amp; Android에 대한 러닝커브가 심하다 React 네이티브의 JSX 문법을 포기하고 AngularJS를 해왔기때문에 Angular2를 해보려는 데 괜찮은 게 생각하는지 확인받고 싶다=&gt; 게스트: 장단점 명확하다! Angulr는 코드가 잘 분리되어 있다(로직자체가 백엔드 개발자가 접하기 좋다)하지만 React는 그렇지 않다. 뷰에 초점을 둔다면 React &lt;=&gt; 로직이 중요하다면 Angular=&gt; 게스트2: JSX가 싫은 개발자들이 Angular로 넘어가는 데 Polymer를 보고 JSX도 중요하다 생각한다 꾹 참고 써보자=&gt; 이종은: Angular 경험은 없지만 Backbone 경험은 있다. 결국 의식의 흐름에 대한 차이라고 생각한다.Backbone은 데이터를 고민하며 React는 화면에 어떻게 뿌리는 지가 생각한다.이렇게 단순하게 생각하니 생각하기 좋다. JS 개발자분들 중 테스트 코드 작성하시는 분이 얼마나 되는지 궁금하다=&gt; 1 / 10 정도였다. React의 UI 테스트는 어떻게 하나=&gt; 이종은: NodeJS에서 서버사이드 렌더링 후 비교해주는 테스트를 본 적이 있다.UI 테스트는 명확하지가 않으며 너무나 변수가 많다.=&gt; 게스트: Jest라는 것이 있다고 들었다.=&gt; 게스트2: UI 단은 Component Level에서만 할 수 있는 것 같다. E2E는 힘들 것 같다.테스트 코드 작성 시간이 굉장히 오래 걸린다. 하지만 그 테스트 코드로 데모를 하기는 굉장히 좋다. React로 개편을 준비 중인데 SEO서비스가 중요한 서비스이라 고민이 많다.=&gt; 김동우: 검색엔진에 대한 고민을 많이 해봤지만 결론적으로 서버사이드 렌더링이 중요하다.검색엔진은 결국 String이다. 라이브러리 Helmet를 이용해서 세팅해놓으면 다 도와준다.구글은 화면까지 읽어주고 네이버는 Meta TAG까지 읽어주더라.Helmet만 이용하면 고민이 없다. React Router 3 to 4 넘어가면서 변화가 너무 많은 데 서버사이드 렌더링을 어떻게 하는 것이 좋은지=&gt; 게스트: React Korea에 Tip을 올렸었는데 Redux를 사용해서 Ajax의 Promise를 담았다가Store에 넣은 다음에 렌더링에 전달해주는 방식을 사용했었다.=&gt; 김동우: Redux를 Connect를 사용하였다. 맛있었던 샌드위치 자바스크립트 개발자 포럼 (JSDev.KR)자바스크립트 개발자 포럼은 JS, Parse, React, Titanium 등 다양한 주제로 포럼을 운영하고 있습니다.자바스크립트에 관심 있는 개발자라면 누구나 참여 가능합니다.https://jsdev.kr React Korea (Facebook Group)React Korea는 국내외 React 소식과 팁을 공유할 뿐만 아니라 질의응답도 가능한 자유로운 공간입니다.https://www.facebook.com/groups/react.ko","categories":[{"name":"conference","slug":"conference","permalink":"https://devjang.github.io/categories/conference/"}],"tags":[{"name":"react","slug":"react","permalink":"https://devjang.github.io/tags/react/"},{"name":"김동우","slug":"김동우","permalink":"https://devjang.github.io/tags/김동우/"},{"name":"김종광","slug":"김종광","permalink":"https://devjang.github.io/tags/김종광/"},{"name":"나는 자바스크립트 개발자다","slug":"나는-자바스크립트-개발자다","permalink":"https://devjang.github.io/tags/나는-자바스크립트-개발자다/"},{"name":"신정규","slug":"신정규","permalink":"https://devjang.github.io/tags/신정규/"},{"name":"이종은","slug":"이종은","permalink":"https://devjang.github.io/tags/이종은/"},{"name":"자바스크립트 개발자 포럼","slug":"자바스크립트-개발자-포럼","permalink":"https://devjang.github.io/tags/자바스크립트-개발자-포럼/"},{"name":"angular","slug":"angular","permalink":"https://devjang.github.io/tags/angular/"},{"name":"JSDev.KR","slug":"JSDev-KR","permalink":"https://devjang.github.io/tags/JSDev-KR/"},{"name":"React Korea","slug":"React-Korea","permalink":"https://devjang.github.io/tags/React-Korea/"}]},{"title":"만약 헤밍웨이가 자바스크립트로 코딩한다면","slug":"2017-02-24-js-book","date":"2017-02-23T15:00:00.000Z","updated":"2018-08-13T11:26:44.865Z","comments":true,"path":"2017/02/24/2017-02-24-js-book/","link":"","permalink":"https://devjang.github.io/2017/02/24/2017-02-24-js-book/","excerpt":"만약 헤밍웨이가 자바스크립트로 코딩한다면 피보나치, 팩토리얼, 행복수, 소수, 메서드 체인에 대한 문학 거장들의 기발한 해법 리뷰!","text":"만약 헤밍웨이가 자바스크립트로 코딩한다면 피보나치, 팩토리얼, 행복수, 소수, 메서드 체인에 대한 문학 거장들의 기발한 해법 리뷰! 책 정보출판사 : 한빛미디어저자 : 앵거스 크롤역자 : 김나솔출간 : 2016-11-14페이지 : 196ISBN : 9788968484742가격 : 19,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=11213895: http://www.hanbit.co.kr/store/books/look.php?p_code=B7118865707 후기프로그래밍이 화두인 만큼 그에 따라 굉장히 다양한 스타일의 서적이 늘어나고 있다. ex.Bible, Cookbook, 입문서부터 고급서, 개발 프로세스, 라이브러리 or 프레임워크 가이드 등등 이 책은 그중에서도 가장 눈에 띄지 않을까 싶다.그 이유로는 제목부터 표지 그리고 책 한 장 한 장 어느 하나 눈에 띄지 않는 곳이 없으며이런 튀는 요소 속에 다양한 문학 거장들을 JavaScript로 표현해내는 재미있는 책이다.기술적으로는 피보나치, 팩토리얼 등 기술적인 부분도 놓치지 않으려 한다. 이 책의 흐름은 이렇다. 작가의 프로필 작가의 작품 설명이나 성장배경 등 스토리 작가의 스타일에 맞춘 재미있는 코드 한결같은 흐름이지만 다양한 개성의 25명의 문학 작가들을 모두 담아냈고그에 따른 다양한 개성의 코드들을 볼 수 있다. 한 권의 책으로 다양한 코드 스타일을 맛보다보통의 개발 서적은 언어 또는 시대적인 권장 코딩 스타일 혹은작가의 스타일에 따라 책에 담겨있는 코드가 다르다.한마디로 한 권의 책에서 다양한 스타일의 코드를 본다는 것은 굉장히 드문 일이다. 이 책에서는 개성이 강한 다양한 작가들을 JavaScript 코드로 설명하려 하기 때문에다양한 JavsScript의 코드를 이 얇은 한 권의 책으로 맛볼 수 있다.뭐 이런 병맛같은 코드가 다 있지...생각이 들때도 있다. 또한 책 디자인부터 설명까지 세부적인 요소까지 따라주니 지루할 수 없이 술술 익힌다. 재미에 비하여 부족한 설명다양한 개성을 코드로 담으려다 보니 변수명조차 이해가기 힘든 코드가 많았다.(절대 쉬운 책은 아니다)챕터 별로 코드에 대한 설명이 부족하거나 또는 충분하거나 격차가 많이 있었기 때문이다.해당 챕터에 해당하는 작가의 작품에 대해 알거나 이해도가 있다면 재미가 더해지지 않을까 싶다 위에서 술술 읽힌다고 했지만 이것은 어디까지나 내용에 대한 이야기이고코드 같은 경우에는 JavaScript의 이해도가 있는 개발자들에게나 해당되는 이야기이다.아직 JavaScript 기초가 부족하신 분들에게는 힘들 수 가있다. 요약 장점 JavaScript의 다양한 코드들과 알고리즘을 부담 없이 재미있게 접할 수 있다. 보는 눈이 즐거울 정도로 책의 디자인이나 구성이 흥미롭다. 인문학적 요소 &amp; 알고리즘 기법 &amp; JavaScript 삼박자가 어우러진다 단점 가격이 저렴하지는 않다. 분량이 아쉽다. 타이핑을 하지 않고 훑어보면 1시간 내에 다 볼 수 있다. 이 서평은 한빛미디어를 통해 제공받은 서적을 토대로 작성된 리뷰입니다.","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"},{"name":"javascript","slug":"book/programming/javascript","permalink":"https://devjang.github.io/categories/book/programming/javascript/"}],"tags":[{"name":"만약 헤밍웨이가 자바스크립트로 코딩한다면","slug":"만약-헤밍웨이가-자바스크립트로-코딩한다면","permalink":"https://devjang.github.io/tags/만약-헤밍웨이가-자바스크립트로-코딩한다면/"},{"name":"javascript 인문학","slug":"javascript-인문학","permalink":"https://devjang.github.io/tags/javascript-인문학/"},{"name":"알고리즘","slug":"알고리즘","permalink":"https://devjang.github.io/tags/알고리즘/"}]},{"title":"인사이드 자바스크립트","slug":"2017-02-10-js-book","date":"2017-02-09T15:00:00.000Z","updated":"2018-08-13T11:26:44.865Z","comments":true,"path":"2017/02/10/2017-02-10-js-book/","link":"","permalink":"https://devjang.github.io/2017/02/10/2017-02-10-js-book/","excerpt":"핵심 개념과 원리를 정확하게 jQuery Node.js 클로저의 개념까지! 리뷰!","text":"핵심 개념과 원리를 정확하게 jQuery Node.js 클로저의 개념까지! 리뷰! 책 정보출판사 : 한빛미디어역자 : 송형주, 고현준출간 : 2014-01-12페이지 : 284ISBN : 9788968480652가격 : 18,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=7400243 후기JavaScript 입문 도서로 자주 언급되지만 개인적으로는 절대 아니라고 생각한다.또한 JavaScript의 모든 부분을 설명하고 있는 책도 아니다.필자는 기초가 부족한 상태에서 읽어서 굉장히 어렵기도 했고결국 자신의 JavaScript 수준을 판단하고 부족한 점이 무엇인지 알 수 있는 책이었다.아마 소개를 굳이 할 필요 없이 필자가 느낀 책의 방향과 저자가 소개하는 책의 코멘트와정확히 일치하기 때문에 밑에 그대로 긁어왔다. 이 책의 목적은 자바스크립트의 핵심 원리, 언어적 특성을 정확하고 알기 쉽게 설명하는 것이다.물론 이 책이 자바스크립트의 모든 것을 다룬 바이블은 아니다.그러나 자바스크립트를 제대로 공부하고자 하는 개발자에게 여러 자바스크립트 응용 기술들을 소화할 수 있는기초 체력을 기를 수 있게 도와주는 좋은 가이드가 될 것이다.[인터넷 교보문고 제공] 알차고 또 알찬 굉장한 개념서이 책의 방식은 굉장히 일관적이기 때문에 때로는 지루하기까지 하다. 해당 개념 설명 예제 코드 제공 예제 코드 리뷰 예제 코드 그림으로 설명 개념 설명이 자세하며 학습에 도움이 되는 예제 코드가 많다.웬만하면 이 책의 예제를 모두 이해하고 넘어가는 것이 좋다고 생각한다(하지만 Legacy 코드도 많다)만약 이해가 되지 않는다면 이해하도록 노력하고 잘 이해되더라도꼭 예제 타이핑을 해보는 것이 좋다고 생각된다. 또한 이 책의 저자는 JavaScript의 모든 부분을 담지 않는 대신 어느 부분이정말 중요한지 잘 알고 그 개념과 예제들을 책에 가득 채워주었고 이해시켜주려 노력한다. JavaScript는 너무 빠르게 변하고 있다. &amp; NodeJS는 어디에?당장 이 책의 예제가 좋으니 타이핑하며 보라고 추천했지만 최신 코드는 아니다.현재 ECMAScript2015+가 나온지 오래된 상황인데 이 책은 ES3로 추정된다.아마 14년에 나온 책이라고 하지만 거의 13년도에 나왔다고 봐도 된다.약간은 아쉬운 부분이다. 또한 NodeJS에 대하여 배울 수 있다는 느낌을 주는 제목이지만NodeJS 내용은 거의 없다고 봐도 된다.jQuery를 원하는 독자도 jQuery 분량은 굉장히 적으니 기대하면 실망이 크다.(대신 jQuery에 대하여 깊게 파고들어 설명해주는 데 내용이 좋다) 요약 장점 JavaScript를 입문을 통해 기초적인 학습을 한 후 개념을 한번 다시 돌아보기 좋은 개념서 책의 분량이나 두께에 비해 내용이 알차고 부족함이 없어 휴대하며 읽기도 좋다. 깊게 파고들며 공부하는 스타일에 굉장히 알맞춤이다 깊게 들어가기 때문에 개념 확립에 도움이 된다 단점 입문서로 추천되지만 어렵다. 제목과는 다르게 NodeJS 내용이 거의 없다. 오래된 코드다. ES3","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"},{"name":"javascript","slug":"book/programming/javascript","permalink":"https://devjang.github.io/categories/book/programming/javascript/"}],"tags":[{"name":"인사이드 자바스크립트","slug":"인사이드-자바스크립트","permalink":"https://devjang.github.io/tags/인사이드-자바스크립트/"}]},{"title":"W3C HTML5 대한민국 관심그룹 45차회의","slug":"2017-01-24-w3c-html5-45","date":"2017-01-23T15:00:00.000Z","updated":"2018-08-13T11:26:44.864Z","comments":true,"path":"2017/01/24/2017-01-24-w3c-html5-45/","link":"","permalink":"https://devjang.github.io/2017/01/24/2017-01-24-w3c-html5-45/","excerpt":"HTML5 대한민국 관심그룹 45차회의 React와 Meteor 활용 관람기","text":"HTML5 대한민국 관심그룹 45차회의 React와 Meteor 활용 관람기 React 기반 앱 개발 방법 (김대성님) Meteor.js + Cordova, 하이브리드 앱 개발 (Meteor.js Startup 진정원 CTO) React 기반 앱 개발 방법 (김대성님)야후 -&gt; 삼성 -&gt; React 공부를 하고 있다. React 프레임워크 X -&gt; View를 위한 JavaScript 라이브러리(MVC의 V는 아님) 하지만 View를 제외한 나머지 영역은 개발자의 몫 Flux / Redux / RxJS / GraphQL / Relay / Apollo과 연동MVVM에서 View Layer만 담당한다 Component View를 표시하고 조작하는 JavaScript Class JSX를 활용한다 -&gt; Babel을 통해 변한된다 - 단일 Root노드, 계층구조 Component Lifecycle초기화 -&gt; 상태 변경 -&gt; Unmount Props Component 초기설정 Readonly : 계층을 생성한다 defaultValue 정의가능 : propsTyes를 통해 Interface 대체가능 변수에 할당하거나 다른 Component에서 사용가능 State 동적인 Components 상태를 객체로 정의ex) this.state React의 데이터를 관리한다. 만들기 Static View 구현 계층구조확인 자식 Component에 제공할 props정의 render() 완성 완성된 view확인 Component계층 구조 검증 View Update 구현 Unit 테스트 확인 요약 디자인부터 분석할 필요가 있다. 정적인 마크업파일과 CSS준비 정적인 React Component 준비 Props &amp; State 결정 Component 계층화 Meteor.js + Cordova, 하이브리드 앱 개발 (Meteor.js Startup 진정원 CTO) Meteor.js 플랫폼 개발환경 소개 Meteor는 쉽게 접근하여 배울 수 있다. Meteor는 Angular &amp; Ionic과 연동하여 사용할 수 있다. 프레임워크는 아니다 전 영역에서 JavsScript 단 한가지 언어만 사용한다. NodeJS &amp; MongoDB &amp; BSON &amp; Cordova 사용 Meteor + Ionic = meteoric 장점 DDP와 웹소켓을 사용하여 리프레시가 빠르다 리액티브를 기반으로 동기화하여 DB의 변화를 감지한다 단점 한글 자료와 문서가 거의 없다. 리액티브 남발시 리소스 낭비가 너무 심하다. 업데이트가 빠르다 (장점이기도 하다) 하이브리드 프레임워크란Ionic / Framework7Mobile AngularUI / OnsenUI Sent Touch / Famo.usDUNAMIS / Antena -&gt; XML 사장되었다 (변화대응 실패 / 자유롭지 않다)Cordova 하이브리드 장점 한가지로 여러가지 플랫폼 Configuration Less Server Framework -&gt; 설정이 없다. 하이브리드 단점 네이티브의 기능을 모두 수용하려면 굉장히 힘들다 Limited Component / Functionality -&gt; 제한된 컴포넌트와 제한된 기능(특히 안드로이드는 다양한 제조사로 인하여 애로상황이 많다) Data Binding (클라이언트 &amp; 서버에서 추적관리가 가능하다) 흔하게 쓰지 않는 기능들은 Bug가 많다.","categories":[{"name":"conference","slug":"conference","permalink":"https://devjang.github.io/categories/conference/"}],"tags":[{"name":"hybrid framework","slug":"hybrid-framework","permalink":"https://devjang.github.io/tags/hybrid-framework/"},{"name":"meteor","slug":"meteor","permalink":"https://devjang.github.io/tags/meteor/"},{"name":"react","slug":"react","permalink":"https://devjang.github.io/tags/react/"},{"name":"W3C HTML5","slug":"W3C-HTML5","permalink":"https://devjang.github.io/tags/W3C-HTML5/"},{"name":"W3C HTML5 대한민국","slug":"W3C-HTML5-대한민국","permalink":"https://devjang.github.io/tags/W3C-HTML5-대한민국/"},{"name":"W3C HTML5 대한민국 관심그룹 45차회의","slug":"W3C-HTML5-대한민국-관심그룹-45차회의","permalink":"https://devjang.github.io/tags/W3C-HTML5-대한민국-관심그룹-45차회의/"}]},{"title":"누구나 쉽게 배우는 자바스크립트","slug":"2017-01-20-js-book","date":"2017-01-19T15:00:00.000Z","updated":"2018-08-13T11:26:44.864Z","comments":true,"path":"2017/01/20/2017-01-20-js-book/","link":"","permalink":"https://devjang.github.io/2017/01/20/2017-01-20-js-book/","excerpt":"놀면서 배우는 프로그래밍! 누구나 쉽게 배우는 자바스크립트 리뷰!","text":"놀면서 배우는 프로그래밍! 누구나 쉽게 배우는 자바스크립트 리뷰! 책 정보출판사 : 비제이퍼블릭저자 : 닉 모건역자 : 김태곤, 이미령출간 : 2015-09-16페이지 : 320 쪽ISBN : 9791186697030가격 : 28,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=9530957 후기JavasScript 입문서 그 자체이지만 부담 없는 책이라고 설명할 수 있다.일단 추천할 수 있는 부분은 이 책의 역자가 김태곤 님과 이미령 님이라는 것이며특히 독자의 이해를 위해 변수명과 코드에도 한글이 많다는 점이 특이했다.100% 풀 컬러책이면서 다양한 그림으로 이해를 돕기 때문에 흥미 유발과 동기부여 효과가 있다.(해외 원판은 Kids용 책이라는 데 어린아이가 보기에는 어려울 것 같다.) 프로그래밍! 개발!을 완전히 처음 접하는 책으로는 최고의 입문서이 책에는 JavsScript가 주인공이지만 HTML &amp; CSS &amp; jQuery를 살짝 맛보게 한 후간단한 동작의 시각적인 예제를 할 수 있도록 유도한다.그뿐만 아니라 앞서 설명했듯이 책 자체에 굉장히 이해 요소가 필요하지 않을 정도로 쉬운 컨텐츠를 가득하게 채웠다.뿐만 아니라 객체와 함수 등 개념이 중요한 부분을 대충 넘어가지 않았다. 그리고 앞서 언급했듯이 100% 풀컬러이며 재미있는 예제도 많이 존재한다.특히 시각적인 예제가 대부분이기때문에 재미와 흥미 유발에는 학습효과가 확실하다 입문서로는 좋으나 이 한권으로?그렇다. 이 책으로 개발에 입문한다면 정말 산뜻하고 쉽게 시작할 수 있을 것이다.하지만 분량에 비하여 가격은 착하지 않다.거기다가 간단하게라도 서비스적인 요소의 예제가 없다보니그런 부분을 기대한 독자들에게는 부족할 수밖에 없다. 확실히 해외에서는 Kids용으로 존재하는 책이기때문에 같은 입문자(또는 초보자)여도 호불호가 갈릴 수 있다. 요약 장점 개발에 입문해보고 싶지만 부담감과 어려움에 시작을 못하는 입문자에게 흥미 유발을 시킬 수 있다. 100% 풀컬러에 한글을 활용하는 코드가 많기 때문에 거부감이 없다. UI 및 캔버스를 활용한 예제가 많아 동기부여가 된다. 단점 Kids용으로 나온 책이기 때문에 책의 구성이 낯설고 포지션이 애매하게 느껴진다. 서비스적인 요소의 예제는 존재하지 않는다.","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"},{"name":"javascript","slug":"book/programming/javascript","permalink":"https://devjang.github.io/categories/book/programming/javascript/"}],"tags":[{"name":"누구나 쉽게 배우는 자바스크립트","slug":"누구나-쉽게-배우는-자바스크립트","permalink":"https://devjang.github.io/tags/누구나-쉽게-배우는-자바스크립트/"},{"name":"자바스크립트 입문 책","slug":"자바스크립트-입문-책","permalink":"https://devjang.github.io/tags/자바스크립트-입문-책/"},{"name":"javascript 입문","slug":"javascript-입문","permalink":"https://devjang.github.io/tags/javascript-입문/"},{"name":"Javascript for kids","slug":"Javascript-for-kids","permalink":"https://devjang.github.io/tags/Javascript-for-kids/"}]},{"title":"GDG DEVFEST 2016 @Seoul Univ GCP","slug":"2016-11-05-gdg-devfest-seoul-2016","date":"2016-11-04T15:00:00.000Z","updated":"2018-08-13T11:26:44.864Z","comments":true,"path":"2016/11/05/2016-11-05-gdg-devfest-seoul-2016/","link":"","permalink":"https://devjang.github.io/2016/11/05/2016-11-05-gdg-devfest-seoul-2016/","excerpt":"GDG DEVFEST 2016 관람 후기!!","text":"GDG DEVFEST 2016 관람 후기!! 행사정보 행사장 방문 Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #0 Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #1 Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #2 행사정보Boot Camp: 초보개발자들을 위한 웹 프론트엔드 개발 101Angular2 어디까지 왔을까Firebase특히 인기가 많았던 걸로 기억이난다. 행사장 방문자리가 없던 세션.. Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #0사실 이전에 진행이 된 ServiceWorker도 보긴 했지만뒤늦게 참석하게 하는 바람에 후기를 쓸 정도의 참가를 못해서 쓸 수가 없게 되었다. 일단 굳이 이런 좋은 발표자료가 있는 데 작성하기보다는발표해주신 개발자분들의 발표자료를 삽입하고 현장에서 중요하다고 생각했던부분만 요약 정리하게되었다 프로필https://festi.kr/festi/speaker/cwdoh 초보 개발자를 위한 웹 프론트엔드 개발 101 from Chang W. Doh 아무래도 이전 WorkShop에서 이미 ServiceWoker부분 발표를 1시간정도 하셔서간단하게 하고 그 후에 더 좋은 개발자분들의 발표가 있다고 강조했다.- 버전관리에 관하여GitHub에 있는 오픈소스로 HTML5사이트 번역한 적이 있다고 했다.장점으로는 한국어로 번역을 해도 외국인이 한국어를 모르기때문에제대로 된 피드백을 하지 못한다는 유머가 포인트였다.HTML5 ROCKS: https://www.html5rocks.com/ko&gt;개인적인 생각이지만 Git을 하지 않는 곳은 가지 않는 것이 좋다.Boilerplate =&gt; 굉장히 잘 쓰이는 단어다. 꼭 기억합시다- W3School은 좋지 않다제발 지양하자. 굉장히 오래된 곳이며 관리와 업데이트가 부실하여오류를 범하는 부분에 상당히 많다.W3Fools라는 안티 사이트가 있을 정도이다.- 대체 공부방법1. MDN2. Web Fundamentals (단. 구글느낌이 강하다)3. W3C 규격문서를 자주 읽자 (http://techhtml.github.io)4. webplatform.org (관심있는 토픽만 봐도 큰 도움이 된다)5. Magic googling: site:스택오버플로 =&gt; 필터를 걸어서 검색하자6. caniuse.com (브라우저 호환여부를 체크할 수 있다)- 개발 프로세스기술 블로그를 운영하는 사이트를 참조하자=&gt; 이런 회사에 들어가자 본인의 기술 발전을 위해서 최선의 선택이다- 라이브러리라이브러리를 사용할때는 이해를 하고 쓰는 것이 좋다예를 들면 http:// 와 https:// 의 단순한 차이도 알고 있자—#### Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #1- 프로필https://festi.kr/festi/speaker/choeun 한줄 요약 잊지 말자 모든 문서는 html을 권장한다 항상 index.html을 기본적으로 챙기자 HTML 문서 구조를 이해하자 HTML은 점점 진화한다. User-scalable을 막지 않는 것이 좋다. (항상 클라이언트를 생각하자) Grouping과 Sections의 차이를 이해하자 Table Layout은 지양하자 Block요소는 3줄로 시작한다 기본 font지원 굵기가 있는 데 이를 무시하고 설정하지 말자. Generic-font를 써야 다양한 OS 및 브라우저를 지원할 수 있다. 학습추천 css-tricks.comCSS 가이드 및 예제 AlistapartCSS 개발 패러다임 MDN Boot Camp : 초보개발자들을 위한 웹 프론트엔드 개발 101 #2 프로필https://festi.kr/festi/speaker/kjy2143 백엔드 출신이라고 한다.프론트엔드 이직상담 요청을 많이 받는 다고 하시는 데주로 이직하지 말라고 답변하신다는…:scream::scream: Hitchhiker&#x27;s guide to the front end development from 정윤 김 프론트엔드개발자들이 하는 일들 과거하던 일HTML + CSS + Javascript + jQuery ? 2016 CSS 확장 Task Runners JavaScript dependency 관리 이미지 압축 로딩 최적화 테스팅 자동화 기술 &amp; 경험 &amp; 운영까지 아주 좋은 강연이었다. 너무나 혼잡스러웠다 스티커 득템 잠옷 득템 그나마 무난해서 다행…","categories":[{"name":"conference","slug":"conference","permalink":"https://devjang.github.io/categories/conference/"}],"tags":[{"name":"김정윤","slug":"김정윤","permalink":"https://devjang.github.io/tags/김정윤/"},{"name":"도창욱","slug":"도창욱","permalink":"https://devjang.github.io/tags/도창욱/"},{"name":"조은","slug":"조은","permalink":"https://devjang.github.io/tags/조은/"},{"name":"초보개발자들을 위한 웹 프론트엔드 개발 101","slug":"초보개발자들을-위한-웹-프론트엔드-개발-101","permalink":"https://devjang.github.io/tags/초보개발자들을-위한-웹-프론트엔드-개발-101/"},{"name":"devfest2016","slug":"devfest2016","permalink":"https://devjang.github.io/tags/devfest2016/"},{"name":"gdg","slug":"gdg","permalink":"https://devjang.github.io/tags/gdg/"},{"name":"GDG DevFest Seoul 2016","slug":"GDG-DevFest-Seoul-2016","permalink":"https://devjang.github.io/tags/GDG-DevFest-Seoul-2016/"},{"name":"gdgkr","slug":"gdgkr","permalink":"https://devjang.github.io/tags/gdgkr/"}]},{"title":"난 정말 JAVA를 공부한 적이 없다구요","slug":"2016-09-17-java-book","date":"2016-09-16T15:00:00.000Z","updated":"2018-08-13T11:26:44.863Z","comments":true,"path":"2016/09/17/2016-09-17-java-book/","link":"","permalink":"https://devjang.github.io/2016/09/17/2016-09-17-java-book/","excerpt":"난 정말 JAVA를 공부한 적이 없다구요 리뷰!","text":"난 정말 JAVA를 공부한 적이 없다구요 리뷰! 책 정보출판사 : 오렌지미디어저자 : 윤성우출간 : 2009-08-12페이지 : 875 쪽ISBN : 9788996094029가격 : 28,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=6056781 후기Java 초보용으로 굉장히 많은 인기를 얻고 있는 책이다.일명 코딩 붐이 일어나면서 IT 관련 서적이 쏟아지고 있는 데특히 Java 기본서는 굉장히 많이 나오고 있어 그만큼 묻혀버리는 Java 기본서도 많다.이 책은 예전부터 지금까지 꽤나 오랜 기간 인기를 끌고 있는 데수많은 Java 기본서 중 거의 부동의 1위를 다투는 책이다.제목은 왜 이리 특이한지 표지도 좀 오래되어 보이고…. 뭐 결론은 내용이 꽤나 좋다.875페이지에 달하는 꽤나 두꺼운 책이지만 가격은 뭐 적당한 정가 28,000원이다.또한 http://www.orentec.co.kr에서 회원가입만 하면 저자의 동영상 강의를볼 수 있으니 책이 없어도 내용이 궁금하신 분들은 참고해도 좋을 것 같다. 자바의 정석과 비교하는 분들이 많은 데 자바의 정석은 딱딱하고 정적인 느낌이라면 이 책은 이해에 노력을 기울인다. 유기적인 내용과 핵심을 잘 알고있는 기본서개인적인 생각일 수 있지만 내용의 흐름이 꽤나 잘 연결된다는 느낌을 받을 수 있었다.또한 다른 책에 비하여 중요한 부분은 항상 중요하게 다루고 넘어간다.말 그대로 기본서로 있을 건 다 있기 때문에 개념을 잡고 이해하는 데 굉장히 좋다. 네트워크가 왜 없을까..이상하다. 한창 Java로 채팅 만들기 공부를 할 때 책을 뒤적였는데정말 없는 것이다. 대신 Swing이 들어가 있다……이 책의 출시연도는 2009년도이기때문에 개정판이 나와야 해결될까 싶다.물론 네트워크가 필요 없는 분들도 있겠지만 Java 기본서에서 네트워크 부분을 익히지 않고JSP &amp; Servlet으로 넘어간다면 초반에 이해도가 떨어지지 않을까 싶다. 요약 장점 설명이 굉장히 좋기 때문에 이해에 도움이 되었다. 개념을 놓치지 않으려고 노력한 흔적이 돋보인다(예를 들면 OOP 부분) 분량이 굉장히 많다 공부하기에 굉장히 좋은 양을 가지고 있다. 단점 네트워크 &amp; 통신을 전혀 다루지 않는다는 부분이 굉장히 치명적이다. 출간일이 오래되었다. 물론 학습에는 전혀 지장이 없지만 곧 개정판이 나오지 않을까 싶다.","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"},{"name":"java","slug":"book/programming/java","permalink":"https://devjang.github.io/categories/book/programming/java/"}],"tags":[{"name":"자바 입문 서적","slug":"자바-입문-서적","permalink":"https://devjang.github.io/tags/자바-입문-서적/"},{"name":"자바 입문용","slug":"자바-입문용","permalink":"https://devjang.github.io/tags/자바-입문용/"},{"name":"자바 초보 책","slug":"자바-초보-책","permalink":"https://devjang.github.io/tags/자바-초보-책/"},{"name":"난 정말 JAVA를 공부한 적이 없다구요","slug":"난-정말-JAVA를-공부한-적이-없다구요","permalink":"https://devjang.github.io/tags/난-정말-JAVA를-공부한-적이-없다구요/"}]},{"title":"기초 튼튼 코드 튼튼 다 함께 프로그래밍","slug":"2016-08-28-basic-programming","date":"2016-08-27T15:00:00.000Z","updated":"2018-08-13T11:26:44.863Z","comments":true,"path":"2016/08/28/2016-08-28-basic-programming/","link":"","permalink":"https://devjang.github.io/2016/08/28/2016-08-28-basic-programming/","excerpt":"기초 튼튼 코드 튼튼 다 함께 프로그래밍 프로그래밍을 시작하는 이들을 위한 쉽고도 친절한 안내서! 리뷰!","text":"기초 튼튼 코드 튼튼 다 함께 프로그래밍 프로그래밍을 시작하는 이들을 위한 쉽고도 친절한 안내서! 리뷰! 책 정보출판사 : 제이펍저자 : 타니지리 카오리역자 : 정인식출간 : 2016-05-12페이지 : 296 쪽ISBN : 9791185890494가격 : 22,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=10558941 후기하드웨어의 동작원리부터 설명을 하더니 차근차근 뜯어서 모두 설명해준다.프로그래밍 언어가 하드웨어부터 소프트웨어로 그리고 프로그램으로 실행되기까지모든 과정을 차근차근 물 흐르듯이 풀어나간다. 확실히 입문자에 맞춘 설명이다.물론 개발 공부하는 학생들이나 초보 개발자들조차도 도움 될만한 유익한 책이다 하드웨어부터 프로그램까지이 책은 분명히 읽는 것보다 이해하는 것이 더 중요한 책이다.이해만 된다면 두껍지 않은 책이지만 하드웨어부터 시작하여프로그램이 실행되기까지 복잡하고 긴 흐름을 더욱더 쉽게 파악할 수 있다.거기다가 프로그래밍 언어에 대한 기초 설명과 그 이상의 것까지 살펴볼 수 있다. 비전공자에게는 최고의 선물 전공자에게는 최고의 복습비전공자에게는 기본에 깔려있는 베이스나 이해도에 따라 책의 난이도가 천차만별로 느껴질 수 있다.때문에 비전공자이거나 기본적인 컴퓨터 사이언스에 대한 이해도가 부족하다면 이 책을 꼭 곱씹어서 보는 걸 추천한다.힘들다면 빠르게 훑어보면서 2~3회 읽어보는 방법도 좋을 것 같다.만약 기본적인 지식이 있는 전공자라면 빠르게 훑어보고좋은 개발자가 되기 위한 소양에 대한 내용을 소화해보는 것도 좋을듯하다 요약 장점 책의 내용 자체가 굉장히 알차다. 목차만 봐도 알 수 있다. 이해를 위한 예시가 굉장히 많고 도움이 된다. 실제 개발자로 일하면서 느낄 수 있는 부분에 대한 소양도 포함되어있다. 좋은 내용만 있는 게 아니라 좋은 개발자가 되기 위한 방법을 유도한다. 단점 책의 분량이 살짝 아쉽다. 책을 읽고 나서의 로드맵을 제시해준다면 좋았을 것 같다.","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"}],"tags":[{"name":"개발 입문 서적","slug":"개발-입문-서적","permalink":"https://devjang.github.io/tags/개발-입문-서적/"},{"name":"기초 튼튼 코드 튼튼 다 함께 프로그래밍","slug":"기초-튼튼-코드-튼튼-다-함께-프로그래밍","permalink":"https://devjang.github.io/tags/기초-튼튼-코드-튼튼-다-함께-프로그래밍/"}]},{"title":"프로그래밍 시작하기 by kenu","slug":"2016-08-21-dev-start","date":"2016-08-20T15:00:00.000Z","updated":"2018-08-13T11:26:44.863Z","comments":true,"path":"2016/08/21/2016-08-21-dev-start/","link":"","permalink":"https://devjang.github.io/2016/08/21/2016-08-21-dev-start/","excerpt":"Okky 대표 허광남님의 행복한 프로그래머 지향하기","text":"Okky 대표 허광남님의 행복한 프로그래머 지향하기 주제Hello World?프로그램의 핵심논리적으로 생각하기컴퓨터와의 대화생각대로 안될 때,좋은 프로그래밍 습관 okky.kr (오키) 의 대표 Kenu (허광남) 님이다.http://afreeca.com/kenuheohttp://bit.ly/okdevtv 주요 포커스프로그래머가 무엇인지 (일반인을 기준으로 설명)프로그래밍을 시작하기 프로그래머란?주로 일반인이 프로그래머를 어떻게 생각하는지에 대한 환상과편견들을 디테일한 이야기프로그래밍 언어의 흐름이나 역사 그리고 언어를 만든 개발자분들에 대한 설명그리고 SI는 가지 않는 게 좋다며 SI에 대해서도 상세한 설명과마지막으로는 커뮤니티 사이트들을 공유해줬다. 기억에 남는 것은 최초의 프로그래머가 여자였다는 것프로그래머 아내가 알아야 할 97가지https://okky.kr/article/168440 프로그래밍 시작하기Hello World를 왜! 처음 쓰게 되는건지?=&gt; C언어 챕터 1 예제라고 한다. 프로그래밍의 핵심과 패턴 그리고 로직을 파악하는 것이 중요하다.논리적으로 생각해야 한다.컴퓨터와 대화하는 것이다.좋은 프로그래밍 습관을 가지자버전 관리 시스템을 꼭 사용하자함께 만들자 마무리 기대가 컸던 건지 아쉬움이 남는 세미나였다. 부족한 내용과 늦으신 kenu님…인상 깊었던 건 백발의 노인분도 세미나를 보러 오셔서 동기부여는 되었다.생활코딩 오프강의때도 중년층분들이 눈에 띄게 많았는데어떻게 알고 오셨는지 참 신기하다. 배워야 할 부분은 젊은 우리들보다이런 분들이 더 적극적이라는 것이다. p.s kenu님이 이벤트로 책을 배송해주신다고 집주소 적어가시고이메일로도 이야기했는 데 책을 안보내주신다..","categories":[{"name":"conference","slug":"conference","permalink":"https://devjang.github.io/categories/conference/"}],"tags":[{"name":"프로그래밍 시작하기","slug":"프로그래밍-시작하기","permalink":"https://devjang.github.io/tags/프로그래밍-시작하기/"},{"name":"허광남","slug":"허광남","permalink":"https://devjang.github.io/tags/허광남/"},{"name":"kenu","slug":"kenu","permalink":"https://devjang.github.io/tags/kenu/"},{"name":"okky","slug":"okky","permalink":"https://devjang.github.io/tags/okky/"}]},{"title":"그림으로 배우는 Java Programming Basic","slug":"2016-08-20-java-book","date":"2016-08-19T15:00:00.000Z","updated":"2018-08-13T11:26:44.863Z","comments":true,"path":"2016/08/20/2016-08-20-java-book/","link":"","permalink":"https://devjang.github.io/2016/08/20/2016-08-20-java-book/","excerpt":"그림으로 배우는 Java Programming 재미있게 배워보는 Java 언어 기초의 모든 것 리뷰!","text":"그림으로 배우는 Java Programming 재미있게 배워보는 Java 언어 기초의 모든 것 리뷰! 책 정보출판사 : 영진닷컴저자 : Mana Takahashi역자 : 서재원출간 : 2015-04-30페이지 : 551 쪽ISBN : 9788931448283가격 : 18,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=8995099 후기그림으로 배우는 시리즈는 워낙 다양하게 준비가 되어있다.물론 굉장한 베스트 시리즈는 아니지만 기본은 하는 시리즈는 아닐까 생각이 든다.일단 번역서이지만 그렇게 거슬리거나 번역이나 신경 쓰이는 오탈자는 딱히기억에 나지 않는다. Mana Takahashi라는 일본의 저자가 쓴 책이며페이지 수는 551페이지이지만 본문의 글씨들이 큰 편이고 책도 굉장히 작다.또한 그림이 많아 술술 넘어갈 수 있으니 페이지의 압박은 없을 수 있다. 입문 || 초보용으로는 최고!물론 이 책은 꾸준히 다 보거나 몇 회 이상 정독한 것은 아니다.하지만 다양한 그림으로 거부감 없이 접근할 수 있었으며 확실히 그림의 영향으로 이해에 도움을 주었다.글씨도 굉장히 크고 책도 작아서 부담을 느낄 수 없다.특히 입문 시기에는 막상 독학을 시작하려고 산 책에 시련을 겪는 경우가 많은 데가볍게 시작할 수 있는 자신감을 기를 수 있다. 모자란 깊이입문 또는 초보용으로는 굉장히 뛰어난 반면에 하나하나 내용의 깊이나 설명.전체적인 Java에 대한 깊이는 떨어진다.나는 Java를 무조건 한 권으로 마무리해버리겠다.하시는 분들에게는 어울리지 않고 더욱더 나아간 공부는 인터넷을 통하여습득을 하던가 해야 한다. 요약 장점 그림이 많다. 그림이 많기 때문에 학습에 도움이 된다. 단점일 수도 있지만 챕터별로 다루는 내용이 굉장히 간략하다. 단점 책의 크기는 작은 데 두께가 두꺼우니 불편하다. Java 공부를 하기에는 범위가 좁다. 추가적인 학습이 필요하다 그림이 많아 좋긴 한데 이해에 도움이 되지 않는 그림들도 많다","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"},{"name":"java","slug":"book/programming/java","permalink":"https://devjang.github.io/categories/book/programming/java/"}],"tags":[{"name":"자바 입문 서적","slug":"자바-입문-서적","permalink":"https://devjang.github.io/tags/자바-입문-서적/"},{"name":"자바 입문용","slug":"자바-입문용","permalink":"https://devjang.github.io/tags/자바-입문용/"},{"name":"자바 초보 책","slug":"자바-초보-책","permalink":"https://devjang.github.io/tags/자바-초보-책/"},{"name":"그림으로 배우는 Java Programming Basic","slug":"그림으로-배우는-Java-Programming-Basic","permalink":"https://devjang.github.io/tags/그림으로-배우는-Java-Programming-Basic/"}]},{"title":"미친 집중력","slug":"2016-07-21-concentration-crazy","date":"2016-07-20T15:00:00.000Z","updated":"2018-08-13T11:26:44.862Z","comments":true,"path":"2016/07/21/2016-07-21-concentration-crazy/","link":"","permalink":"https://devjang.github.io/2016/07/21/2016-07-21-concentration-crazy/","excerpt":"합격을 부르는 공부법! 습관의 재발견 리뷰!","text":"합격을 부르는 공부법! 습관의 재발견 리뷰! 책 정보출판사 : 매경출판원제 : 合格判定0%から1年で東大醫學部に合格した人の秘密の勉强法 圖解 勉强もビジネスも,長く樂しめる仕組みを作저자 : 이와나미 구니아키역자 : 김지영출간 : 2016-02-10페이지 : 184ISBN : 9791155423974가격 : 12,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=10168099 후기공부가 너무 안될 때 읽으려고 구매한 책이다.저자는 일본인이지만 번역은 문제가 없으며 내용은 대학 합격률이 20%도 안되는 최하위 등급 판정을 받고충격을 먹어 독학으로 공부를 한 후에 1년 만에 명문 의대에 합격했다고 한다. 당신이 ‘정리정돈파’라면 책상 위를 깔끔하게 정돈하고,‘카오스파’라고 한다면 참고서나 볼펜 등을 의도적으로 정리되지 않은 상태에서 공부하도록 합시다. ‘5초만 해보자’하는 가벼운 마음으로 시작해보면 의외로 계속 할 수 있겠다는 기분이 들어 10분, 30분 등 많은 공부 시간을 &gt;꽤 확보할 수 있게 됩니다. 이를 토대로 어떻게 공부했는지 저자가 실제 공부한 비법집중력을 위한 실천 항목 40가지가 있으며 실천에 대한 설명 + 실천 방법 + 그림으로 전체적인 구조가 재미있게 흘러간다.하지만 돈 주고 사기는 아깝고 중고책이나 대여하는 게 바람직할 것 같다. 이 책의 저자는 “미친 암기력” 이라는 책도 있는 데 대부분 평이 별차이가 없다는 의견이 다수이다. 요약 장점 전체적인 흐름과 구조 정리가 굉장히 깔끔하다. 실천항목 40가지 (설명 =&gt; 방법 =&gt; 그림) 이해하기 쉬웠다 단점 너무 적은 분량 미친 암기력라는 책과 별반 차이가 없다.","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"self-help","slug":"book/self-help","permalink":"https://devjang.github.io/categories/book/self-help/"}],"tags":[{"name":"미친 집중력","slug":"미친-집중력","permalink":"https://devjang.github.io/tags/미친-집중력/"},{"name":"집중력 책","slug":"집중력-책","permalink":"https://devjang.github.io/tags/집중력-책/"}]},{"title":"비전공자를 위한 자바 프로그래밍","slug":"2016-07-14-java-book","date":"2016-07-13T15:00:00.000Z","updated":"2018-08-13T11:26:44.862Z","comments":true,"path":"2016/07/14/2016-07-14-java-book/","link":"","permalink":"https://devjang.github.io/2016/07/14/2016-07-14-java-book/","excerpt":"영어 독해하듯 코드를 읽고 그림으로 쉽게 배우는 비전공자를 위한 자바 프로그래밍 리뷰!","text":"영어 독해하듯 코드를 읽고 그림으로 쉽게 배우는 비전공자를 위한 자바 프로그래밍 리뷰! 책 정보출판사 : 한빛미디어저자 : 강희은출간 : 2016-02-26페이지 : 228 쪽ISBN : 9788968488009가격 : 16,000원 자세한 정보: http://www.hanbit.co.kr/store/books/look.php?p_code=E9160460418 후기Java책만해도 4~5권을 보유하고 있지만 2회 이상 완독한 책은 이 책이 처음이다.이해력이나 사고력이 좋지않아 책이 술술 넘어가지 않았고 좀 더 쉬운 책이 없을까?생각하고 쉬운 책부터 찾다보니 이 책을 선택하게 되었다. 처음에는 200페이지가 조금 넘는 얇은 책인데 가격은 16,000원이니 뭔가 내키지 않았고결국 직접 가서 책을 보고 구매하게 되었다.참고로 저자분도 비전공자 출신이기도 하다. 감동받은 부분(사소하지만 모르고 넘어가는 코드들도 자세히 알 수 있다) 거기다가 출간일도 굉장히 최근이기 때문에 나에게는 딱일 수 밖에 없었다.단점으로는 신간이라 그런지 오탈자가 조금 있었고책 자체가 얇고 분량이 적은지라 자바의 모든 것을 다 넣을 수는 없다. 이 책만으로 자바를 습득하고자 하는 분들은 꼭 이다음 책이나 강의로 학습할 것을 권유한다.대신 얇은 두께로 두고두고 버스에서 읽기 좋을 것 같다.어떻게든 독자를 이해를 시키고자 노력한 흔적이 느껴지는 책이었다. 요약 장점 얇고 간결한 내용과 휴대성으로 이동하며 읽기 좋다. 굉장히 이해가 쉽게 나온 책이기 때문에 입문자들에게 좋다. 그림이 많다. 내용을 많이 차지하지만 이해에 도움이 된다. 사소한 디테일에 신경을 많이 쓴 티가 난다. 단점 적은 분량만큼 중요한 부분이 많이 빠졌다. (요약본 같은 느낌)=&gt; 필히 그 다음 Java 공부에 대한 계획이 필요하다","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"programming","slug":"book/programming","permalink":"https://devjang.github.io/categories/book/programming/"},{"name":"java","slug":"book/programming/java","permalink":"https://devjang.github.io/categories/book/programming/java/"}],"tags":[{"name":"비전공자를 위한 자바 프로그래밍","slug":"비전공자를-위한-자바-프로그래밍","permalink":"https://devjang.github.io/tags/비전공자를-위한-자바-프로그래밍/"},{"name":"자바 입문 서적","slug":"자바-입문-서적","permalink":"https://devjang.github.io/tags/자바-입문-서적/"},{"name":"자바 입문용","slug":"자바-입문용","permalink":"https://devjang.github.io/tags/자바-입문용/"},{"name":"자바 초보 책","slug":"자바-초보-책","permalink":"https://devjang.github.io/tags/자바-초보-책/"}]},{"title":"습관의 재발견","slug":"2016-06-27-rediscovery-habit","date":"2016-06-26T15:00:00.000Z","updated":"2018-08-13T11:26:44.862Z","comments":true,"path":"2016/06/27/2016-06-27-rediscovery-habit/","link":"","permalink":"https://devjang.github.io/2016/06/27/2016-06-27-rediscovery-habit/","excerpt":"기적같은 변화를 불러오는 작은 습관의 힘! 습관의 재발견 리뷰!","text":"기적같은 변화를 불러오는 작은 습관의 힘! 습관의 재발견 리뷰! 책 정보출판사 : 비즈니스북스원제 : Mini Habits저자 : 스티븐 기즈역자 : 구세희출간 : 2014-11-25페이지 : 240ISBN : 9788997575336가격 : 13,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=8366521 후기이 전에 읽은 지속하는 힘이라는 책과 유사하며 추구하는 내용도 비슷한 책이다.지속하는 힘에서는 저자가 1일 1블로그를 하면서 무엇이든 꾸준히 한다면그 자신감을 통해 성장하며 완성된 인간?이 될 수 있다는 뭐 이런 내용의 반복과 실천법이 나오던 책이다. 반면 이 책은 굉장히 비슷하지만 모든 목표를 굉장히 작고 사치스러울 정도로 쉬운 것으로 하라는 것거의 책의 마지막장까지 세뇌되다 싶이 반복적으로 나왔다. 한마디로 너무나 쉬워서 작심삼일로 가지 않는 그런 목표를 세우라는 것이다. 그렇게 실천하다 보면 어느새 큰 누적 효과와 즐거움으로 더 큰 목표를 가지게 되는 자신과 마주할 것이라는 내용이다. 저자는 하루에 팔굽혀펴기 단 1개로 시작을 통해 헬스를 하게 되었고결국 건강에 신경을 쓰게되면서 건강한 마인드 까지가지게 되어 발전했다는 내용이다. 또한 말하는 아프니까 청춘이다, 꿈꾸는 다락방 같은 자기개발서를 까는 내용도 굉장히 많다. 그냥 하면 된다는 동기만 심어주는 책은 볼 가치도 없다는 내용이다. 뭐 틀린 말은 아니다. 나 또한 매번 결심만 크게 하고 별로 한것도 없는 데 좌절하기만 했다.결국 나는 하루에 팔굽혀펴기 1~5개 하기 &amp; 일일 달력 넘기기를 목표로 하고 있다.이것은 시작일뿐이고 공부에 더 도움이 되는 습관으로 넘어갔으면 좋겠다. “너무나 쉬워서 포기하지 않을 정도로 쉬운 일부터 습관으로 만들어보자!&quot; 요약 의지력과 습관 그리고 동기부여를 가지는 구체적인 방향을 제시한다. 말도 안되는 꿈보다는 현실적이고 확실한 방법으로 독자를 설득한다. 지속하는 힘을 가지기 위한 저자의 실천과 결과가 보이는 책","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"self-help","slug":"book/self-help","permalink":"https://devjang.github.io/categories/book/self-help/"}],"tags":[{"name":"가볍게 시작하기","slug":"가볍게-시작하기","permalink":"https://devjang.github.io/tags/가볍게-시작하기/"},{"name":"습관의 재발견","slug":"습관의-재발견","permalink":"https://devjang.github.io/tags/습관의-재발견/"},{"name":"작은 습관의 힘","slug":"작은-습관의-힘","permalink":"https://devjang.github.io/tags/작은-습관의-힘/"},{"name":"팔굽혀펴기 하루 한 번","slug":"팔굽혀펴기-하루-한-번","permalink":"https://devjang.github.io/tags/팔굽혀펴기-하루-한-번/"}]},{"title":"(9X년생 개발자 모임 특강 1) 게임 소프트웨어 개발자란 & 개발자의 9가지 기술","slug":"2016-06-24-9xd","date":"2016-06-23T15:00:00.000Z","updated":"2018-08-13T11:26:44.862Z","comments":true,"path":"2016/06/24/2016-06-24-9xd/","link":"","permalink":"https://devjang.github.io/2016/06/24/2016-06-24-9xd/","excerpt":"9X년생 개발자 모임(9XD)의 비정기 특강, ‘XXD TO 9XD’의 첫 모임 특강 관람 후기","text":"9X년생 개발자 모임(9XD)의 비정기 특강, ‘XXD TO 9XD’의 첫 모임 특강 관람 후기 박종천 / JC Park 강연경력 강연주제 소개 강연 박종천 / JC Park한글과컴퓨터 개발팀장 6년미국 보스톤의 다수 벤쳐에서 개발실장 (Technical Director) 5년Blizzard 미국 얼바인 본사에서 수석개발자/개발팀장 (Lead Software Engineer) 11년현재 넥슨 플랫폼본부 부본부장 (Vice President of Platform Technology)총 개발경력 22년 강연경력NDC 2011, KGC 2011, ICON 2011, 엔씨소프트, 연세대학교, 한국산업기술대학교NDC 2012, 다음커뮤니케이션NDC 2013, KGC 2013, NHN NextNDC 2015, 넥슨, 엔씨소프트, 엔트리브소프트, 네시삼십삼분스타트업얼라이언스, Microsoft Azure Conference, 서울예술대학교 강연주제성공하는 제품을 만들기 위한 팀 빌딩 / How to build a team to ship a great product효율적인 팀 관리 / Effective Team Management채용 프로세스 분석 / Hiring Process좋은 품질을 위한 버그 관리 / Bug Management효율적인 시간 관리/ Effective Time Management개발자가 갖추어야 할 9가지 기술 / 9 Skills for Developers훌륭한 개발팀장이 되려면? / Software Development Manager게임 개발자가 되려면? / Game Software Engineer 9XD모임 관리자이신 진유림님인듯 보인다. 오늘의 강연자 : 박종천님 NEXON VP 주로 게임 개발에 대한 이야기였던 건 사실이라 게임보다는 중심적인 흐름에 대하여 많이 집중했다. 소개일단 경력은 위에 있으니 생략하고 한국의 개발 환경 증진을 위해 직접 돌아왔다고 하셨다.다른 대기업과의 컨택도 있었지만 밝힐 수 없는 부분들이 많아 Nexon으로 오게 되셨다고 한다. 어린 시절부터 개발을 접하신 것 같다. (이런 분들이 주로 천재형에 가까운 것 같아 부럽다)대학시절에는 노래방 프로그램도 만들어 판매한 경험이 있다고한다. 블리자드라고 해서 엄청 자유롭다고 생각하는 데 그곳도 문제가 존재하며 해외라고해서 자유로운 건 아니다.스타크래프트1 한글채팅 패치 / WoW 패치작업 / 하스스톤 개발 등을 주로 했다. 강연정말 좋은 이야기를 많이 해주셨다. 위트도 있고 유머있으셨는 데 중요한 얘기에서는 진지하게 조언해주셨다.또 두서없이 제대로 적지 못해서 일단 중요한 부분만 적어야겠다. 클라우드와 AWS 엄청난 전망이 있다.=&gt; 앞으로는 클라우드를 아는 개발자와 모르는 개발자로 분류될 것이다. 자신이 하는 것만한다면 한계가 올 것이다.=&gt; 꾸준히 공부하고 대비해야 한다 결국은 기초를 튼튼히 해야한다.=&gt; 마치 근육과도 같다는 언어를 배울때는 역사와 변화까지 빠삭하게 파악해야한다.=&gt; 한가지 언어를 주력으로 배울때 역사와 변화는 당연히 알게되는 부분이다. Critical Thinking=&gt; 하나의 개발을 진행하면서 문제를 풀고 그것을 왜 풀었는지,왜 그렇게 할 수 박에 없었는지 등 사고의 폭을 넓힐 수 있는 생각 개발자의 능력은 계속 공부하는 것=&gt; 호기심이 있어야 한다. 같은 걸 여러번 만들어서 실력을 쌓는다=&gt; 적어도 3번! 사내에서 자기 발전을 위한 방법을 찾는다.=&gt; 내 능력을 키울 수 있는 방법을 찾는다. 한가지 회사가 아닌 어느 회사를 갈 수 있는 역량에 초점을 맞춘다.=&gt; 능력없을 때 생기는 기회는 저주다 무너지게 된다. 재능이 있어야한다.=&gt; 적어도 싸인 코싸인은 구분하자 적을 만들지말라=&gt; 인간관계는 굉장히 중요하다. 개발만 잘해서는 소용없다. 적어도 적은 만들지 말라 인공지능은 발전한다 대비는 해놓자. 모여서 코딩하라=&gt; 모각코!! https://www.facebook.com/groups/mogaco 프로세스로 실패를 막고 개선을 하라=&gt; 어제처럼 일하면 어제같은 결과만 나온다. The Joel test 12steps=&gt; 참고 http://korean.joelonsoftware.com/Articles/TheJoelTest.html 인생의 프로세스를 생각한다. 새가 부러질 수도 있는 나뭇가지에 앉아 있는 것은나뭇가지가 부러질 것을 두려워하지 않는 것이 아니라 부러져도 날 수 있는 날개가 있기 때문이다.소프트웨어를 쉽게 개발하는 것이 중요한 것이 아니다.그 이면에 있는 기술력이 중요하다.지금부터 착실히 내실을 다지고 그것을 잘 배우며 다른 사람과 충돌하지 않고 착하게 지낼 수 있다면그것은 그 사람만의 경쟁력이 될 수 있다 다른 장소이지만 같은 내용 강좌 :https://storify.com/startupall/gg 동영상 :https://youtu.be/fHyTA-UIcqs 해당 모임 활동 사진 :https://milooy.wordpress.com/tag/%EB%B0%95%EC%A2%85%EC%B2%9C","categories":[{"name":"conference","slug":"conference","permalink":"https://devjang.github.io/categories/conference/"}],"tags":[{"name":"90년생 개발자모임","slug":"90년생-개발자모임","permalink":"https://devjang.github.io/tags/90년생-개발자모임/"},{"name":"9xd 개발자 모임","slug":"9xd-개발자-모임","permalink":"https://devjang.github.io/tags/9xd-개발자-모임/"},{"name":"게임 개발자 세미나","slug":"게임-개발자-세미나","permalink":"https://devjang.github.io/tags/게임-개발자-세미나/"},{"name":"블리자드 넥슨 박종천","slug":"블리자드-넥슨-박종천","permalink":"https://devjang.github.io/tags/블리자드-넥슨-박종천/"},{"name":"훌륭한 게임 개발자 되기","slug":"훌륭한-게임-개발자-되기","permalink":"https://devjang.github.io/tags/훌륭한-게임-개발자-되기/"}]},{"title":"지속하는 힘","slug":"2016-06-21-power-persistence","date":"2016-06-20T15:00:00.000Z","updated":"2018-08-13T11:26:44.862Z","comments":true,"path":"2016/06/21/2016-06-21-power-persistence/","link":"","permalink":"https://devjang.github.io/2016/06/21/2016-06-21-power-persistence/","excerpt":"보통 사람의 인생을 특별하게 만드는! 지속하는 힘 리뷰!","text":"보통 사람의 인생을 특별하게 만드는! 지속하는 힘 리뷰! 책 정보출판사 : 아날로그(글담)원제 : 1つのことを長く續けられる技術저자 : 고바야시 다다아키페이지 : 208ISBN : 9788997575336가격 : 12,500원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=10154727 후기자바지기 박재성님께 받은 자료 속 추천도서 목록에 하나이기도 한 책이다.일단 책은 200페이지가 조금 넘는 적은 분량이지만 굉장히 괜찮은 책이다.역시 책은 두껍다고 좋은 것도 아니고 얇다고 부족한 것도 아닌 것 같다.수많은 자기개발서를 읽어봤지만 그중 절반 이상은 도움이 되지 않거나그저 동기부여만 주거나 꿈만 가득 가지자는 내용만 나오는 책들이 많다. 하지만 이 책은 달랐다.일단 처음부터 끝까지 무언가를 지속하라는 내용을 강조한다.어떠한 사소한 것이라도 지속하여 나의 습관으로 만들기 시작하면 된다는 것이다. 제가 경험한 결과 당연하고도 평범한 일을 꾸준하게 지속하는 것 이것이 인생의 정답입니다.‘위대한 인재는 재능이 있는 사람이 아니라 꾸준한 사람이다!’라고 하지요. 이처럼 꾸준함이 특별함을 만듭니다. 두 번째로 해결방안과 상황제시 등 방향을 알려주는 책의 가르침이랄까이 부분은 확실히 독자들에게 큰 도움이 되는 내용들이다.주절주절 명언만 가득한 자기개발서보다 백번 나은 부분이다.지속하여 습관을 유지해가는 과정에서 수많은 유혹들과 애로 상황에 어떻게 대처하면좋을지 어떠한 방법으로 해결을 하는 게 좋을지 좋은 해결방안과 방향을 제시한다.전체적으로 책 자체가 해결방안 위주로 큰 로드맵이 짜여있다. 지속적으로 하는 것, 그것이 중요합니다. 해도 그만 안 해도 그만인 일을 계속하다 보면 자신감이 붙습니다.‘나는 이렇게 오랫동안 한 가지 일을 지속해온 사람이야!’라는 믿음이 생기면 어떤 어려운 일이 닥쳐도 깨지거나 부서지지 않습니다 이 책을보고 하루에 전공서 아닌 다른 책을 50페이지씩 읽기로 약속하였다.보통 자기개발서는 보고 다시 중고서점으로 가져가거나 괜찮은 책은 지인에게 선물로 주거나 한다.하지만 이 책은 두고두고 보면 좋을 것 같다. 요약 저자가 블로그에 매일 글을 쓰다 최고의 컨설턴트가 된 과정이 그대로 담겨있다 지속하는 힘을 위해 자신이 어떻게 힘든 상황들을 극복했는지 구체적인 해결 방법을 제시한다. 비현실적인 명언보다는 현실적인 조언과 방법으로 지속하는 힘을 가지도록 도와준다.","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"self-help","slug":"book/self-help","permalink":"https://devjang.github.io/categories/book/self-help/"}],"tags":[{"name":"지속하는 기술","slug":"지속하는-기술","permalink":"https://devjang.github.io/tags/지속하는-기술/"},{"name":"지속하는 힘","slug":"지속하는-힘","permalink":"https://devjang.github.io/tags/지속하는-힘/"}]},{"title":"먹고 코딩하고 사랑하기, 오래하려면 어떻게 해야할까? by KSUG","slug":"2016-06-19-ksug","date":"2016-06-18T15:00:00.000Z","updated":"2018-08-13T11:26:44.861Z","comments":true,"path":"2016/06/19/2016-06-19-ksug/","link":"","permalink":"https://devjang.github.io/2016/06/19/2016-06-19-ksug/","excerpt":"2016 KSUG 경력개발 관람 후기","text":"2016 KSUG 경력개발 관람 후기 목차 목차 시작하세요! 커뮤니티! by 이정희 “더 나은 개발자 되기” by Outsider “경력, 이력서 관리하기” by 비공개.. 밝히지 않으셨다 멘토들의 토크쇼 시작하세요! 커뮤니티! by 이정희 주니어 개발자의 커뮤니티 활동 이야기왜 이직을 했나어떻게 이직을 했나무엇을 알아 봤나어떻게 알아 봤나 파견업체일단 연봉 1600! 무려 1600부터 시작을 했다성차별과 엄청난 출퇴근 거리단 2개월만에 퇴직 관공서 SI연봉 2000Java 개발 시작!상사의 권유로 공부를 하는 건 정말 피가 되고 살이 되었다 웹 에이전시연봉 2600PHP, Javascript 개발야근이 너무 과해서 라꾸라꾸 침대와 친해지게 되는 계기.. 스타트업지인 추천으로 취업했으나엄청난 야근과 성격차이로 퇴사(안타까움 ㅠㅠ) 스타트업이전부터 낙방한 곳에 재도전을 하셨는 데커뮤니티에 공개 이력서를 올려 3개월 수습 기회를 얻었으나!수습 후 잘렸다고 한다굉장히 슬픈 이야기지만 엄청 멋지고 도전적이라는 생각이 절로 들었다. 짧은 시간 내에 산전수전 고생을 하신 것 같다.그 와중에도 커뮤니티 활동을 굉장히 열심히 한 부분 대단하다.열정이 느껴졌고 여성분인데 스스로 잡부라고 칭한다니 멋지다. 발표자료: http://www.slideshare.net/MayLee27/ss-63215285 “더 나은 개발자 되기” by Outsider 결론! 공부하세요! 처음부터 끝까지 공부 그 자체였다개발자에게 가장 중요한 것은 개발실력이다 회사가 찾는 사람? -&gt; 잘할 것 같은 사람 열정 있는 사람 빨리 배우는 개발자 가르치면 잘 할 개발자 면접은 원하는 사람인지 보는 자리일 뿐이다! 어제의 나보다 더 좋은 개발자 되기 개발에서 배운 것을 기록한다 설치방법 버그와 해결 과정 몰랐던 기능이나 기술 사용방법 새롭게 배운 개념이나 기술 궁금한 부분이나 이해 힘든 내용 버그 리포팅 블로그를 하자 공개되었기 때문에 상황조건을 설명해야 한다 설명 과정에서 배운다. 앱 개발할 때 설명과 코드를 분리한다! 설명부분과 연관된 내용을 정확히 알 수 있다. 다른 사람을 가르쳐야 빨리 배운다! 무엇을 공부해야하 나요? 기술 변화의 흐름을 파악한다. 개발 서적과 레퍼런스 문서 보기 최신 유행 기술은 흐름만 파악하자 기초에 투자하자-&gt; 실력의 차이는 기초와 이해에서 온다. 세미나 참가 블로그 구독 (RSS활용) SNS 활용 (트위터 등등) 언어와 프레임워크가 바뀌어도 바뀌지 않을 지식 투자 대비 효율이 좋다 쌓이면 쌓일수록 큰 실력의 차이가 난다 어떤 지식이 이 부분에 속하는지 구분할 수 있어야 한다. 커뮤니티에 참여하세요 같은 관심사의 사람들과 교류는 즐겁다 좋은 개발자를 만나게 된다 기술에 대한 관심이 회사 내에 갇히지 않는다 새로운 회사를 소개받을 수도 있다. 오픈소스의 활용 가장 진보된 소프트웨어 개발 문화이다 버그 리포팅 -&gt; 해결법을 Pull Request 한다 오픈 소스 문화를 이해할 수 있다. 협업을 배울 수 있다. 다름 사람의 코드를 배울 수 있다. 오픈소스로 사이드 프로젝트 진행 평소 만들고 싶은것을 만든다 불편하다고 생각이 드는 것을 개선한다. Commit Message를 신경쓰자 코드는 계속 리펙토링한다. 테스트 작성 / 커버리지 측정 / CI 환경에 신경 쓴다. 코드 작성법, 접근 방법, 협업 방법을 미리 보여 줄 수 있다. Outsider님 블로그: https://blog.outsider.ne.kr발표자료: https://blog.outsider.ne.kr/1223 “경력, 이력서 관리하기” by 비공개.. 밝히지 않으셨다 이직 이야기입사 3년 차 이직률 40%이다!입사 18년 차에 첫 이직하게 되었다. 위기는 언젠가 온다.옮기기 전에 고려하자주변에 모든 것이 바뀐다대기업이 안정적이라는 생각은 버려야 한다.안정적인 회사는 없다! 대기업과 중소기업의 차이 중소기업지원팀이 없다. (PC 설치 셀프는 기본)나의 없무가 노출된다기대를 받는다사장의 감정이 곧.. 나의 감정이다. 대기업대접받는 착각이 든다.지원부서 존재교육을 시켜주더라내가 일을 잘하는지 남에게 달려있다.연간 목표와 주간 보고는 생명이다.올해의 달성 목표와 주간의 업무를 보고해야 한다. 경력직의 이력서 관리 신입사원보다 경력직이 이력서를 더 신경 쓰지 않는다. 신입(3~6개월 교육)과 경력을 뽑는 것은 완전히 다른 부분이다. 경력사원들은 기대감을 많이 받을 수밖에 없다. 이력서는 회사의 키워드가 중요하다 항상 프로젝트 관리를 하자 기타 기술사 취득..좋기는 좋다. 석사는 구조조정이나 승진시 사용된다 나의 채용담당자는 나의 편이다! 3년 뒤 나갈 수 있는 직장이 좋다 이력서는 출력해서 본다.(링크만 남기면 큰 일..) 어떤 프로젝트에 어떤 기술을 사용했는지 쓰자 공백 기간을 조심하자. 채용 NHN / 우아한 형제들 NHN에서는 일주일에 40시간만 일하는 자율근무제를 소개하였다.멋진 문화이지만 그에 해당하는 책임은 피할 수 없다는 것을 강조하였다이력서가 회사의 입장보다는 자신의 입장을 고려한 이력서가 많아몇 년 동안 사람을 뽑지 못했다고 한다 배달의 민족 CTO도 왔다.작년에 30명을 채용했고 앞으로도 30명이상을 채용을 예고하였고기업의 이념과 가치에 대해서 설명해주었다 멘토들의 토크쇼 굉장히 인상에 남고 재미있는 토크쇼였다.큰 기업의 CTO와 발표하셨던 패널분들 그리고 자바지기의 박재성님토비의 스프링의 이일민 님 등 엄청난 개발자분들이 많았다.구글폼으로 비공개 질문까지 가능하였고 흥미진진한 시간이었다.제대로 기록하지 못한 게 후회된다. 중요하게 적었던 것들만 리뷰 오래 개발하기 개발을 좋아해야 한다. 배우는 시간 대신 희생해야 할 것이 많다. 일하면서 면접 보기 아프다고 하자 (어쩔 수 없다면) 저녁에도 면접을 보는 곳이 있다. 뽑아줄 사람들은 저녁에도 뽑아준다 비전공자 30대에게 해줄 만한 조언 28살 농촌인이 개발 시작했다. 시작할 때부터 선을 그었다.컴퓨터 전공에 머리 좋은 애들이랑 비교하지 말고, 기초레벨 포기하고 공부했다.초반에는 통했지만 결국은 기초다. 내가 좋아하고 경쟁력 있는 것 그것만 몇 년을 하자.그걸 잘하게 되면 결국 시야가 넓어져서 비슷해진다.비전공자 독학은 정말 힘들다. 커뮤니티에 참여하는 것 밖에 방법이 없다.얼굴에 철판을 깔고 끼어들어라! 전공자의 장점 별로 없다. 주변에 비전공자들이 더 잘한다.하지만 자기 하기 나름이다. 비전공자로 차별을 느꼈었다. 결국 노력이 중요하고 사람 관계가 중요한 것이다. 공부 방법 똑똑한 사람이 너무 많아 시간을 많이 썼다. 내가 무엇을 포기할지 먼저 정하자.새로운 기술이 너무 많아 이것저것 다 하면 아무것도 못한다.새로운 기술을 공부하고 싶다면 먼저 라이브러리부터 찾아본다. 내가 재밌는 걸 하는 게 우선이다. 잡부가 되어도 상관없다 굉장한 세미나였다.개발자가 무엇인지뿐만아니라 세미나가 무엇인지도 제대로 알게되었다굉장히 유익한 시간이었다개발자는 공부해야 한다.개발자는 항상 고민이 많다. 이곳에서 공유된 커뮤니티도 필자가 모아놓은 곳에 따로 정리해두었다.http://devjang.blogspot.com/2016/10/blog-post_2.html","categories":[{"name":"conference","slug":"conference","permalink":"https://devjang.github.io/categories/conference/"}],"tags":[{"name":"ksug","slug":"ksug","permalink":"https://devjang.github.io/tags/ksug/"},{"name":"2016 ksug","slug":"2016-ksug","permalink":"https://devjang.github.io/tags/2016-ksug/"},{"name":"먹고 코딩하고 사랑하기","slug":"먹고-코딩하고-사랑하기","permalink":"https://devjang.github.io/tags/먹고-코딩하고-사랑하기/"}]},{"title":"미쳐야 공부다","slug":"2016-06-17-crazy-study","date":"2016-06-16T15:00:00.000Z","updated":"2018-08-13T11:26:44.860Z","comments":true,"path":"2016/06/17/2016-06-17-crazy-study/","link":"","permalink":"https://devjang.github.io/2016/06/17/2016-06-17-crazy-study/","excerpt":"18시간 공부 몰입의 법칙! 미쳐야 공부다 리뷰!","text":"18시간 공부 몰입의 법칙! 미쳐야 공부다 리뷰! 책 정보출판사 : 한빛미디어저자 : 강성태출간 : 2015-07-10페이지 : 328ISBN : 9791130605814가격 : 15,000원 자세한 정보: http://book.naver.com/bookdb/book_detail.nhn?bid=9250959 후기개발자가 되기 위해 어느 정도 공부 방법이나 동기부여가 필요하다고 생각했다.저자 강성태의 공신 운영과 학창시절 어떤 계기로 어떤 이유로 미친 것처럼 공부를 하게 되었는지공부 방법과 해결방안 그리고 경험이 자서전처럼 술술 넘어간다. 마치 나도 공부를 안 하면 뒤처질 것만같은 기분이 들고 저자의 학창시절미친 사람처럼 공부하는 그 모습이 나에게도 이입이 된다. 정말 대단한 사람이다.나는 보통 공부하기 전에 집중이 안 되면 한 단락씩 읽고는 했다.하지만!! 수능을 보는 학생들을 타겟으로 한 서적이라는 것이 문제였다.책이 문제가 아닌 선택을 잘못한 나의 잘못이지만 그래도 인상적으로 보았다. 요약 장점 자신과의 싸움과 공부를 향한 열정으로 정신력을 어떻게 다스렸는지 체험할 수 있다. 동기부여를 강하게 받을 수 있다. 단점 확실히 수능 및 고시를 준비하는 분들이 아니라면 읽기에는 애매하다. 공부 방법에 대한 구체적인 설명과 방법은 없다.(주관적인 생각)","categories":[{"name":"book","slug":"book","permalink":"https://devjang.github.io/categories/book/"},{"name":"self-help","slug":"book/self-help","permalink":"https://devjang.github.io/categories/book/self-help/"}],"tags":[{"name":"강성태","slug":"강성태","permalink":"https://devjang.github.io/tags/강성태/"},{"name":"강성태 공부의 신","slug":"강성태-공부의-신","permalink":"https://devjang.github.io/tags/강성태-공부의-신/"},{"name":"공부의 신","slug":"공부의-신","permalink":"https://devjang.github.io/tags/공부의-신/"},{"name":"공부자극","slug":"공부자극","permalink":"https://devjang.github.io/tags/공부자극/"},{"name":"공신","slug":"공신","permalink":"https://devjang.github.io/tags/공신/"},{"name":"미쳐야 공부다","slug":"미쳐야-공부다","permalink":"https://devjang.github.io/tags/미쳐야-공부다/"}]}]}